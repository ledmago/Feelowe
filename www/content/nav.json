[
  {
    "text": "AutoComplete",
    "name": "autocomplete",
    "component": "autocomplete",
    "api": { "all": "web/autocomplete" },
    "documentation": {
      "kendo-ui": "getting-started/web/autocomplete/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/autocomplete/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/autocomplete/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/autocomplete",
      "jsp-ui": "jsp/autocomplete",
      "php-ui": "php/autocomplete"
    },
    "sources": {
      "kendo-ui": [
        {
          "name": "Sample service",
          "url": "~/content/service.html"
        }
      ]
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/autocomplete",
      "jsp-ui": "jsp/autocomplete",
      "php-ui": "php/autocomplete"
    },
    "spriteCssClass": "autoCompleteIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "autocomplete/index",
        "title": {
          "kendo-ui": "Demo and source code for Kendo UI AutoComplete widget"
        },
        "meta": {
          "kendo-ui": "How jQuery-based AutoComplete widget works, view demo source code of Kendo UI AutoComplete."
        }
      },
      {
        "text": "Server filtering",
        "url": "autocomplete/serverfiltering",
        "title": {
          "kendo-ui": "Server filtering in Kendo UI AutoComplete widget | Kendo UI Demo"
        },
        "meta": {
          "kendo-ui": "This demo of Kendo UI AutoComplete control shows how autocomplete suggestions are given upon typing and the data is loaded from OData remote data source."
        }
      },
      {
        "text": "Virtualization",
        "url": "autocomplete/virtualization",
        "title": {
          "kendo-ui": "Virtualization in Kendo UI AutoComplete widget | Kendo UI Demo"
        },
        "meta": {
          "kendo-ui": "This demo of Kendo UI AutoComplete control shows how load large amount of data in the autocomplete widget"
        }
      },
      {
        "text": "Grouping",
        "url": "autocomplete/grouping",
        "title": {
          "kendo-ui": "Grouping in Kendo UI AutoComplete widget | Kendo UI Demo"
        },
        "meta": {
          "kendo-ui": "This demo of Kendo UI AutoComplete control shows how load grouped data in the autocomplete widget"
        }
      },
      {
        "packages": [
          "mvc-offline"
        ],
        "text": "Client filtering",
        "url": "autocomplete/clientfiltering"
      },
      {
        "text": "Customizing templates",
        "url": "autocomplete/template",
        "title": {
          "kendo-ui": "Templates customization in Kendo UI AutoComplete"
        },
        "meta": {
          "kendo-ui": "With this Kendo UI AutoComplete demo, you can learn how to customize the template of the widget."
        }
      },
      {
        "text": "Add new item",
        "url": "autocomplete/addnewitem",
        "title": {
          "kendo-ui": "Add new item in Kendo UI AutoComplete"
        },
        "meta": {
          "kendo-ui": "Check out this demo to see how to create new item in Kendo UI AutoComplete."
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "Custom data source",
        "url": "autocomplete/custom-datasource",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Events",
        "url": "autocomplete/events",
        "title": {
          "kendo-ui": "Events in Kendo UI AutoComplete widget | Kendo UI Web demos"
        },
        "meta": {
          "kendo-ui": "Take a look at this Kendo UI AutoComplete example to find out how events are triggered in the AutoComplete widget, included in Kendo UI Web framework."
        }
      },
      {
        "text": "API",
        "url": "autocomplete/api",
        "title": {
          "kendo-ui": "Example of Kendo UI AutoComplete widget API"
        },
        "meta": {
          "kendo-ui": "The API Functions of Kendo UI AutoComplete widget give you the option to set a specific value, attribute a value for the string, starting with a symbol or a digit."
        }
      },
      {
        "text": "RTL support",
        "url": "autocomplete/right-to-left-support",
        "title": {
          "kendo-ui": "Right-to-left support in Kendo UI AutoComplete widget"
        },
        "meta": {
          "kendo-ui": "We will demonstrate how the right-to-left typing feature is implemented in the text input field of Kendo UI jQuery-powered AutoComplete control."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "autocomplete/keyboard-navigation",
        "title": {
          "kendo-ui": "Keyboard navigation in Kendo UI AutoComplete widget"
        },
        "meta": {
          "kendo-ui": "Look at this Kendo UI Web demo which illustrates how the keyboard navigation feature is supported in Kendo UI AutoComplete component."
        }
      },
      {
        "text": "MVVM",
        "url": "autocomplete/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI AutoComplete"
        },
        "meta": {
          "kendo-ui": "Enabled, events, source, value and visible MVVM binding support in Kendo UI AutoComplete"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "autocomplete/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI AutoComplete"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support in Kendo UI AutoComplete"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "Button",
    "name": "button",
    "component": "button",
    "api": { "all": "web/button" },
    "documentation": {
      "kendo-ui": "getting-started/web/button/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/button/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/button/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/button",
      "jsp-ui": "jsp/button",
      "php-ui": "php/button"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/button",
      "jsp-ui": "jsp/button",
      "php-ui": "php/button"
    },
    "spriteCssClass": "buttonIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "button/index",
        "title": {
          "kendo-ui": "Demo and source code for Kendo UI Button widget"
        },
        "meta": {
          "kendo-ui": "How jQuery-based Button widget works, view demo source code of Kendo UI Button."
        }
      },
      {
        "packages": [
          "online"
        ],
        "text": "Multiple buttons",
        "url": "button/multiple",
        "title": {
          "kendo-ui": "Using Multiple Kendo UI Button widgets"
        },
        "meta": {
          "kendo-ui": "Using multiple buttons via a single Button widget instance."
        }
      },
      {
        "text": "Images",
        "url": "button/images",
        "title": {
          "kendo-ui": "Using Kendo UI Buttons with images and icons"
        },
        "meta": {
          "kendo-ui": "Using buttons with images and icons."
        }
      },
      {
        "text": "Events",
        "url": "button/events",
        "title": {
          "kendo-ui": "Kendo UI Button events"
        },
        "meta": {
          "kendo-ui": "How jQuery-based Button widget works, view demo source code of Kendo UI Button."
        }
      },
      {
        "text": "API",
        "url": "button/api",
        "title": {
          "kendo-ui": "Kendo UI Button API"
        },
        "meta": {
          "kendo-ui": "How jQuery-based Button widget works, view demo source code of Kendo UI Button."
        }
      },
      {
        "text": "RTL support",
        "url": "button/right-to-left-support",
        "title": {
          "kendo-ui": "Kendo UI Button RTL Support"
        },
        "meta": {
          "kendo-ui": "How jQuery-based Button widget works, view demo source code of Kendo UI Button."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "button/keyboard-navigation",
        "title": {
          "kendo-ui": "Kendo UI Button Keyboard Navigation"
        },
        "meta": {
          "kendo-ui": "How jQuery-based Button widget works, view demo source code of Kendo UI Button."
        }
      },
      {
        "text": "MVVM",
        "url": "button/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Button"
        },
        "meta": {
          "kendo-ui": "Enabled, events, visible MVVM binding support in Kendo UI Button"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "button/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Button"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support in Kendo UI Button"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Navigation"
  },
  {
    "text": "ButtonGroup",
    "name": "ButtonGroup",
    "component": "button-group",
    "api": { "all": "web/buttongroup" },
    "category": "Navigation",
    "documentation": {
      "kendo-ui": "controls/navigation/buttongroup"
    },
    "forum": {
      "kendo-ui": "kendo-ui/button-group"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/buttongroup"
    },
    "spriteCssClass": "mobileButtonGroupIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "buttongroup/index",
        "title": {
          "kendo-ui": "ButtonGroup widget demo | Kendo UI Demos"
        },
        "meta": {
          "kendo-ui": "This example demonstrates the ButtonGroup"
        }
      },
      {
        "text": "Badges",
        "url": "buttongroup/badges",
        "title": {
          "kendo-ui": "ButtonGroup widget demo | Kendo UI Demos"
        },
        "meta": {
          "kendo-ui": "This example demonstrates the ButtonGroup Badges"
        }
      },
      {
        "text": "Icons",
        "url": "buttongroup/icons",
        "title": {
          "kendo-ui": "ButtonGroup widget demo | Kendo UI Demos"
        },
        "meta": {
          "kendo-ui": "This example demonstrates the ButtonGroup icons"
        }
      },
      {
        "text": "Selection",
        "url": "buttongroup/selection",
        "title": {
          "kendo-ui": "ButtonGroup widget demo | Kendo UI Demos"
        },
        "meta": {
          "kendo-ui": "This example demonstrates the ButtonGroup Selection"
        }
      },
      {
        "text": "Events",
        "url": "buttongroup/events",
        "title": {
          "kendo-ui": "ButtonGroup widget demo | Kendo UI Demos"
        },
        "meta": {
          "kendo-ui": "This example demonstrates the ButtonGroup Events"
        }
      },
      {
        "text": "API",
        "url": "buttongroup/api",
        "title": {
          "kendo-ui": "ButtonGroup widget demo | Kendo UI Demos"
        },
        "meta": {
          "kendo-ui": "This example demonstrates the ButtonGroup API"
        }
      },
      {
        "text": "RTL Support",
        "url": "buttongroup/right-to-left-support",
        "title": {
          "kendo-ui": "ButtonGroup widget demo | Kendo UI Demos"
        },
        "meta": {
          "kendo-ui": "This example demonstrates the ButtonGroup Right to left support"
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "buttongroup/keyboard-navigation",
        "title": {
          "kendo-ui": "ButtonGroup widget demo | Kendo UI Demos"
        },
        "meta": {
          "kendo-ui": "This example demonstrates the ButtonGroup Keyboard Navigation"
        }
      },
      {
        "text": "MVVM",
        "url": "buttongroup/mvvm",
        "title": {
          "kendo-ui": "ButtonGroup widget demo | Kendo UI Demos"
        },
        "meta": {
          "kendo-ui": "This example demonstrates the ButtonGroup MVVM"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "Angular",
        "url": "buttongroup/angular",
        "title": {
          "kendo-ui": "ButtonGroup widget demo | Kendo UI Demos"
        },
        "meta": {
          "kendo-ui": "This example demonstrates the ButtonGroup Angular"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ]
  },
  {
    "text": "Calendar",
    "name": "calendar",
    "component": "calendar",
    "api": { "all": "web/calendar" },
    "documentation": {
      "kendo-ui": "getting-started/web/calendar/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/calendar/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/calendar/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/calendar",
      "jsp-ui": "jsp/calendar",
      "php-ui": "php/calendar"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/calendar",
      "jsp-ui": "jsp/calendar",
      "php-ui": "php/calendar"
    },
    "spriteCssClass": "calendarIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "calendar/index",
        "title": {
          "kendo-ui": "Example of Kendo UI jQuery-based Calendar"
        },
        "meta": {
          "kendo-ui": "Explore the example of HTML5 calendar widget, included in Kendo UI Web, to find how easy it is to add a calendar to your website or web app."
        }
      },
      {
        "text": "Customizing templates",
        "url": "calendar/template",
        "title": {
          "kendo-ui": "Customize the template of Kendo UI Calendar widget | Kendo UI Web demos"
        },
        "meta": {
          "kendo-ui": "This demo shows how Kendo UI Calendar allows you to customize the content in your template."
        }
      },
      {
        "text": "Disable dates",
        "url": "calendar/disable-dates",
        "title": {
          "kendo-ui": "Disable dates in the Kendo UI Calendar widget | Kendo UI Web demos"
        },
        "meta": {
          "kendo-ui": "This demo shows how Kendo UI Calendar allows you to disable dates."
        }
      },
      {
        "text": "Week Column",
        "url": "calendar/week-column",
        "title": {
          "kendo-ui": "Week column in the Kendo UI Calendar widget | Kendo UI Web demos"
        },
        "meta": {
          "kendo-ui": "This demo shows how Kendo UI Calendar allows you to display week column."
        }
      },
      {
        "text": "Multiple Selection",
        "url": "calendar/selection",
        "title": {
          "kendo-ui": "Multiple Date Selection in the Kendo UI Calendar widget | Kendo UI Web demos"
        },
        "meta": {
          "kendo-ui": "This demo shows how Kendo UI Calendar allows you to select more than one date."
        },
        "description": {
          "kendo-ui": "<p>Starting from Kendo UI 2017 R3 release calendar allows multiple selection to be performed by using the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/calendar#configuration-selectable\" target=\"_blank\">selectable</a> configuration property.</p><p>The multiple selection functionality of the calendar widget can be summarized in several key points:</p><ol><li>Multiple Selection - Ctrl key is used while selecting dates.</li><li>Range Selection - Shift key is used to select range of dates.</li><li>Week Selection - Range selection for a specific week.</li></ol><br/><p>The Ctrl key allows user to perform multiple selection:</p><ul><li>Ctrl + Mouse Click on specific date will mark the date as selected and other previously selected dates will remain selected as well.</li><li>Selecting a date from a specific view without using Ctrl key will deselect all previously selected dates (including previously selected dates from other views/months) and select the date of the clicked cell.</li><li>Selecting a date that is already selected while holding the Ctrl key will remove the date from the selection.</li></ul><p>The Shift key allows user to select a range of dates in the same month or between different months:</p><ul><li>Shift + Mouse Click selects all dates between the last selected one (with SPACE or Mouse Click) and the clicked cell.</li><li>Shift + Mouse Click when there is no previous selection will select all dates from the beginning to the clicked cell.</li></ul><p>When user clicks on a specific week number the calendar selects the entire week. It can be considered as a special case of range selection - starting from first day of the week and selects all dates to the end of the week. </p><p>The Multiple Selection functionality introduces some new key combinations. Those are demonstrated in the <a href=\"http://demos.telerik.com/kendo-ui/calendar/keyboard-navigation\">Keyboard Navigation</a> demo.</p>"
        }
      },
      {
        "text": "Events",
        "url": "calendar/events",
        "title": {
          "kendo-ui": "Events, triggered in Kendo UI Calendar | Kendo UI Web Demos"
        },
        "meta": {
          "kendo-ui": "This example of Kendo UI Calendar widget shows events which are available in the component."
        }
      },
      {
        "text": "API",
        "url": "calendar/api",
        "title": {
          "kendo-ui": "Demo for Kendo UI Calendar Widget API"
        },
        "meta": {
          "kendo-ui": "This demo shows how Kendo UI Calendar Widget API works and what kind of functions it supports."
        }
      },
      {
        "packages": [
          "mvc-offline"
        ],
        "text": "Globalization",
        "url": "calendar/globalization"
      },
      {
        "text": "RTL support",
        "url": "calendar/right-to-left-support",
        "title": {
          "kendo-ui": "Right-to-left functionality, enabled in Kendo UI Calendar widget"
        },
        "meta": {
          "kendo-ui": "Kendo UI Calendar component supports RTL functionality. Look at the demo to see how to easily apply RTL support to the widget."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "calendar/keyboard-navigation",
        "title": {
          "kendo-ui": "Keyboard navigation demo for Kendo UI Calendar widget"
        },
        "meta": {
          "kendo-ui": "You can easily navigate in Kendo UI Calendar by using the keyboard. This demo shows the functionality, just look at the notes and play with the example."
        }
      },
      {
        "text": "MVVM",
        "url": "calendar/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Calendar"
        },
        "meta": {
          "kendo-ui": "Events, value and visible MVVM binding support in Kendo UI Calendar"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "calendar/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Calendar"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support in Kendo UI Calendar"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Scheduling"
  },
  {
    "text": "ColorPicker",
    "name": "colorpicker",
    "component": "color-picker",
    "api": { "all": "web/colorpicker" },
    "documentation": {
      "kendo-ui": "getting-started/web/colorpicker/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/colorpicker/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/colorpicker/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/color-picker",
      "jsp-ui": "jsp/color-picker",
      "php-ui": "php/color-picker"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/colorpicker",
      "jsp-ui": "jsp/colorpicker",
      "php-ui": "php/colorpicker"
    },
    "spriteCssClass": "colorPickerIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "colorpicker/index",
        "title": {
          "kendo-ui": "Kendo UI ColorPicker widget | Kendo UI Web Demos"
        },
        "meta": {
          "kendo-ui": "This example shows the basic functions of Kendo UI ColorPicker component."
        }
      },
      {
        "text": "Flat color picker",
        "url": "colorpicker/flatcolorpicker",
        "title": {
          "kendo-ui": "Kendo UI FlatColorPicker demo"
        },
        "meta": {
          "kendo-ui": "In this example we will show how the Kendo UI FlatColorPicker, a part of the Kendo UI framework, works."
        }
      },
      {
        "text": "Standalone Palette",
        "url": "colorpicker/palette",
        "title": {
          "kendo-ui": "Standalone Palette Demo in Kendo UI ColorPicker widget"
        },
        "meta": {
          "kendo-ui": "In this demo you will take a look at the rich standalone palette of Kendo UI ColorPicker component. Grab the source code and play with the demo!"
        }
      },
      {
        "text": "Palette presets",
        "url": "colorpicker/palette-presets",
        "title": {
          "kendo-ui": "Palette presets in Kendo UI ColorPicker widget | Kendo UI Demo"
        },
        "meta": {
          "kendo-ui": "Select a color based on a preset color palette in Kendo UI ColorPicker widget. This demo allows you to play with the palette presets in the component."
        }
      },
      {
        "text": "Keyboard support",
        "url": "colorpicker/keyboard-navigation",
        "title": {
          "kendo-ui": "Keyboard support enabled in Kendo UI ColorPicker widget"
        },
        "meta": {
          "kendo-ui": "In this demo we review the keyboard support that is enabled in Kendo UI ColorPicker."
        }
      },
      {
        "text": "Events",
        "url": "colorpicker/events",
        "title": {
          "kendo-ui": "Events in Kendo UI ColorPicker widget"
        },
        "meta": {
          "kendo-ui": "In this example we will examine the events that are fired in Kendo UI jQuery-powered ColorPicker component."
        }
      },
      {
        "text": "API",
        "url": "colorpicker/api",
        "title": {
          "kendo-ui": "API for Kendo UI ColorPicker | Kendo UI Demo"
        },
        "meta": {
          "kendo-ui": "This Kendo UI demo shows the API of Kendo UI drop-down color picker widget."
        }
      },
      {
        "text": "MVVM",
        "url": "colorpicker/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI ColorPicker"
        },
        "meta": {
          "kendo-ui": "Enabled, events, value and visible MVVM binding support in Kendo UI ColorPicker"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "colorpicker/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI ColorPicker"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI ColorPicker"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "ComboBox",
    "name": "combobox",
    "component": "combobox",
    "api": { "all": "web/combobox" },
    "documentation": {
      "kendo-ui": "getting-started/web/combobox/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/combobox/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/combobox/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/combobox",
      "jsp-ui": "jsp/combobox",
      "php-ui": "php/combobox"
    },
    "sources": {
      "kendo-ui": [
        {
          "name": "Sample service",
          "url": "~/content/service.html"
        }
      ]
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/combobox",
      "jsp-ui": "jsp/combobox",
      "php-ui": "php/combobox"
    },
    "spriteCssClass": "comboBoxIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "combobox/index",
        "title": {
          "kendo-ui": "jQuery-based ComboBox widget Demo | Kendo UI Web Demos"
        },
        "meta": {
          "kendo-ui": "This Combobox UI example shows how you can easily apply an editable text box with flexible auto-searchable functionality of the dropdown list into your web app."
        }
      },
      {
        "text": "Server filtering",
        "url": "combobox/serverfiltering",
        "title": {
          "kendo-ui": "Server filtering in Kendo UI ComboBox"
        },
        "meta": {
          "kendo-ui": "Check out this demo to see how the server filtering functionality works in Kendo UI ComboBox."
        }
      },
      {
        "text": "Virtualization",
        "url": "combobox/virtualization",
        "title": {
          "kendo-ui": "Virtualization in Kendo UI ComboBox"
        },
        "meta": {
          "kendo-ui": "Check out this demo to see how the virtualization functionality works in Kendo UI ComboBox."
        }
      },
      {
        "text": "Grouping",
        "url": "combobox/grouping",
        "title": {
          "kendo-ui": "Grouping in Kendo UI ComboBox"
        },
        "meta": {
          "kendo-ui": "Check out this demo to see how the grouping functionality works in Kendo UI ComboBox."
        }
      },
      {
        "packages": [
          "mvc-offline"
        ],
        "text": "Client filtering",
        "url": "combobox/clientfiltering"
      },
      {
        "text": "Customizing templates",
        "url": "combobox/template",
        "title": {
          "kendo-ui": "Demo for customizing jQuery ComboBox Templates | Kendo UI Web Demos"
        },
        "meta": {
          "kendo-ui": "This Kendo UI ComboBox demo shows how the template of the control can be customized to change the appearance of items in the auto-searchable list."
        }
      },
      {
        "text": "Cascading ComboBox",
        "url": "combobox/cascadingcombobox",
        "title": {
          "kendo-ui": "Cascading jQuery ComboBox sample | Kendo UI Web demos"
        },
        "meta": {
          "kendo-ui": "This demo shows how the cascading Kendo UI ComboBox control would fit any web application or website."
        }
      },
      {
        "text": "Add new item",
        "url": "combobox/addnewitem",
        "title": {
          "kendo-ui": "Add new item in Kendo UI ComboBox"
        },
        "meta": {
          "kendo-ui": "Check out this demo to see how to create new item in Kendo UI ComboBox."
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "Custom data source",
        "url": "combobox/custom-datasource",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Events",
        "url": "combobox/events",
        "title": {
          "kendo-ui": "Examples of events in Kendo UI jQuery ComboBox component"
        },
        "meta": {
          "kendo-ui": "This demo demonstrates useful events which are triggered in Kendo UI ComboBox upon user's selection of an item from the drop-down list."
        }
      },
      {
        "text": "API",
        "url": "combobox/api",
        "title": {
          "kendo-ui": "Demo for Kendo UI ComboBox widget API"
        },
        "meta": {
          "kendo-ui": "This sample shows all API functions for Kendo UI ComboBox widget."
        }
      },
      {
        "text": "RTL support",
        "url": "combobox/right-to-left-support",
        "title": {
          "kendo-ui": "Right-to-left support in Kendo UI ComboBox widget"
        },
        "meta": {
          "kendo-ui": "Build your app with Kendo UI ComboBox. This demo shows how RTL feature is supported in the component."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "combobox/keyboard-navigation",
        "title": {
          "kendo-ui": "Keyboard nagivation in Kendo UI ComboBox | Kendo UI Web demos"
        },
        "meta": {
          "kendo-ui": "Kendo UI ComboBox widget for web app development supports easy keyboard navigation. Play with the demo to explore the functionality."
        }
      },
      {
        "text": "MVVM",
        "url": "combobox/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI ComboBox"
        },
        "meta": {
          "kendo-ui": "Enabled, events, source, value and visible MVVM binding support in Kendo UI ComboBox"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "combobox/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI ComboBox"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI ComboBox"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "DateInput",
    "name": "dateinput",
    "component": "dateinput",
    "api": { "all": "web/dateinput" },
    "documentation": {
      "kendo-ui": "controls/editors/dateinput/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/dateinput/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/dateinput/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/dateinput",
      "jsp-ui": "jsp/dateinput",
      "php-ui": "php/dateinput"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/dateinput",
      "jsp-ui": "jsp/dateinput",
      "php-ui": "php/dateinput"
    },
    "spriteCssClass": "dateInputIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "dateinput/index",
        "title": {
          "kendo-ui": "Kendo UI jQuery DateInput Demo"
        },
        "meta": {
          "kendo-ui": " "
        },
        "description": {
          "kendo-ui": "The DateInput widget enables you to enter date/time via direct input. It provides separate sections for day, month, year, hours and minutes. Furthermore, you can customize the date and time format."
        }
      },
      {
        "text": "API",
        "url": "dateinput/api",
        "title": {
          "kendo-ui": "Kendo UI DateInput API Demo"
        },
        "meta": {
          "kendo-ui": "DateInput API example shows how the API functions can be used to apply enable/disable functionality to jQuery-powered date input control or set/get the value."
        },
        "description": {
          "kendo-ui": "<p>Progress Kendo UI Dateinput provides API that enables you to customize it and enable/disable specific features of the component.</p><p>The example shows the usage of <strong>value</strong>, <strong>enable</strong> and <strong>readonly</strong> methods.</p><p>You can find more information on client-side API of DateInput <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/dateinput#methods\">here</a>.</p>"
        }
      },
      {
        "text": "Events",
        "url": "dateinput/events",
        "title": {
          "kendo-ui": "Attach an event to Kendo UI jQuery DateInput | Kendo UI Web Demos"
        },
        "meta": {
          "kendo-ui": "This example shows how to subscribe to the change event in the Kendo UI DateInput widget."
        },
        "description": {
          "kendo-ui": "<p>Telerik Kendo UI Dateinput provides API that enables you to customize it and enable/disable specific features of the component.</p><p>The example shows the usage of the <strong>change</strong> event. Note that the event is triggered after focus is removed from the component.</p><p>You can find more information on client-side API of DateInput <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/dateinput#events\">here</a>.</p>"
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "dateinput/keyboard-navigation",
        "title": {
          "kendo-ui": "Keyboard navigation in Kendo UI DateInput"
        },
        "meta": {
          "kendo-ui": "This example shows how the keyboard navigation functionality is supported in Kendo UI DateInput widget."
        },
        "description": {
          "kendo-ui": "This example shows how the keyboard navigation functionality is supported in Kendo UI DateInput widget."
        }
      },
      {
        "text": "MVVM",
        "url": "dateinput/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI DateInput"
        },
        "meta": {
          "kendo-ui": "Enabled, events, value and visible MVVM binding support in Kendo UI DateInput"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "RTL support",
        "url": "dateinput/right-to-left-support",
        "title": {
          "kendo-ui": "RTL support in Kendo UI DateInput widget | Kendo UI Demo"
        },
        "meta": {
          "kendo-ui": "See how Kendo UI DateInput component supports RTL functionality."
        },
        "description": {
          "kendo-ui": "This example shows how RTL functionality is supported in the Kendo UI DateInput widget."
        }
      },
      {
        "text": "Localization and Globalization",
        "url": "dateinput/localization-globalization",
        "title": {
          "kendo-ui": "Localization and Globalization in Kendo UI DateInput widget | Kendo UI Demo"
        },
        "meta": {
          "kendo-ui": "See how Kendo UI DateInput component supports Localization and Globalization."
        },
        "description": {
          "kendo-ui": "<p>This example shows Localization and Globalization supported by Kendo UI DateInput.</p><p>Localization is responsible for specifying the language of the component. Changing that option will change the placeholders.</p><p>Globalization is responsible for defining the format of the dates. Thus, changing the culture will modify the format in which the date is displayed.</p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "dateinput/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI DateInput"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI DateInput"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "DatePicker",
    "name": "datepicker",
    "component": "date-time-pickers",
    "api": { "all": "web/datepicker" },
    "documentation": {
      "kendo-ui": "getting-started/web/datepicker/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/datepicker/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/datepicker/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/date-time-pickers",
      "jsp-ui": "jsp/date-picker-pickers",
      "php-ui": "php/date-time-pickers"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/datepicker",
      "jsp-ui": "jsp/date-time-pickers",
      "php-ui": "php/date-time-pickers"
    },
    "spriteCssClass": "datePickerIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "datepicker/index",
        "title": {
          "kendo-ui": "Kendo UI jQuery DatePicker Demo"
        },
        "meta": {
          "kendo-ui": "The demo shows how users can effortessly edit and select dates in the calendar. Combine date editing functionality and animated dropdown in a jQuery Datepicker control for your web app."
        },
        "description": {
          "kendo-ui": "<p>The demo shows how users can effortessly edit and select dates in the calendar. Combine date editing functionality and animated dropdown in a jQuery DatePicker widget for your web application.</p><p>Since <strong>R2 2017</strong> the DatePicker can use <a href=\"http://demos.telerik.com/kendo-ui/dateinput/index\">DateInput</a> as a default input. The second DatePicker in the example is configured to use DateInput.</p>"
        }
      },
      {
        "text": "Range selection",
        "url": "datepicker/rangeselection",
        "title": {
          "kendo-ui": "Range selection in Kendo UI DatePicker | Kendo UI Web Demos"
        },
        "meta": {
          "kendo-ui": "This demo shows how the Datepicker component works for range selections. You can easily enable users to select a date range in a handy manner."
        }
      },
      {
        "text": "Customizing templates",
        "url": "datepicker/template",
        "title": {
          "kendo-ui": "Demo for customizing the template of Kendo UI DatePicker control"
        },
        "meta": {
          "kendo-ui": "This example demonstrates how you can use a custom template for your jQuery Kendo UI DatePicker control in your web app. Easily apply a special style for your template."
        }
      },
      {
        "text": "Events",
        "url": "datepicker/events",
        "title": {
          "kendo-ui": "Attach an event to Kendo UI jQuery DatePicker | Kendo UI Web Demos"
        },
        "meta": {
          "kendo-ui": "This sample shows how to access the events, attached to a date, as well as use Kendo UI Date Picker widget to pick a date or change it manually from the dropdown calendar."
        }
      },
      {
        "text": "Disable dates",
        "url": "datepicker/disable-dates",
        "title": {
          "kendo-ui": "Disable dates in the Kendo UI DatePicker widget | Kendo UI Web demos"
        },
        "meta": {
          "kendo-ui": "This demo shows how Kendo UI DatePicker allows you to disable dates."
        }
      },
      {
        "text": "Week Column",
        "url": "datepicker/week-column",
        "title": {
          "kendo-ui": "Week column in the Kendo UI DatePicker widget | Kendo UI Web demos"
        },
        "meta": {
          "kendo-ui": "This demo shows how Kendo UI DatePicker allows you to display week column."
        }
      },
      {
        "text": "API",
        "url": "datepicker/api",
        "title": {
          "kendo-ui": "Kendo UI DatePicker API Demo"
        },
        "meta": {
          "kendo-ui": "DatePicker API example shows how the API functions can be used to apply enable/disable functionality to jQuery-powered date picker control or open/close the calendar."
        }
      },
      {
        "packages": [
          "mvc-offline"
        ],
        "text": "Globalization",
        "url": "datepicker/globalization"
      },
      {
        "text": "RTL support",
        "url": "datepicker/right-to-left-support",
        "title": {
          "kendo-ui": "RTL support in Kendo UI DatePicker widget | Kendo UI Demo"
        },
        "meta": {
          "kendo-ui": "See how Kendo UI DatePicker component supports RTL functionality."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "datepicker/keyboard-navigation",
        "title": {
          "kendo-ui": "Keyboard navigation in Kendo UI DatePicker"
        },
        "meta": {
          "kendo-ui": "This example shows how the keyboard navigation functionality is supported in Kendo UI DatePicker widget."
        }
      },
      {
        "text": "MVVM",
        "url": "datepicker/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI DatePicker"
        },
        "meta": {
          "kendo-ui": "Enabled, events, value and visible MVVM binding support in Kendo UI DatePicker"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "datepicker/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI DatePicker"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI DatePicker"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "DateTimePicker",
    "component": "date-time-pickers",
    "name": "datetimepicker",
    "api": { "all": "web/datetimepicker" },
    "documentation": {
      "kendo-ui": "getting-started/web/datetimepicker/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/datetimepicker/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/datetimepicker/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/date-time-pickers",
      "jsp-ui": "jsp/date-picker-pickers",
      "php-ui": "php/date-time-pickers"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/datepicker",
      "jsp-ui": "jsp/date-time-pickers",
      "php-ui": "php/date-time-pickers"
    },
    "spriteCssClass": "dateTimePickerIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "datetimepicker/index",
        "title": {
          "kendo-ui": "Kendo UI Date and Time picker example"
        },
        "meta": {
          "kendo-ui": "Kendo UI DateTimePicker control handles both dates and times. Learn more about the time/date selection functionality by playing with this demo."
        }
      },
      {
        "text": "Range selection",
        "url": "datetimepicker/rangeselection",
        "title": {
          "kendo-ui": "Date range selection functionality in Kendo UI DateTimePicker"
        },
        "meta": {
          "kendo-ui": "In Kendo UI DateTimePicker control, dates and times are handled in two different input boxes so that the user can easily select different date ranges."
        }
      },
      {
        "text": "Customizing templates",
        "url": "datetimepicker/template",
        "title": {
          "kendo-ui": "Templates customization example | Kendo UI DateTimePicker widget"
        },
        "meta": {
          "kendo-ui": "This example shows how templates of Kendo HTML5-based DateTimePicker widget can be customized to fit your application."
        }
      },
      {
        "text": "Events",
        "url": "datetimepicker/events",
        "title": {
          "kendo-ui": "Events in Kendo UI Date and Timepicker component"
        },
        "meta": {
          "kendo-ui": "This example shows which events are triggered when you change the date and time in Kendo UI DateTimePicker component."
        }
      },
      {
        "text": "Disable dates",
        "url": "datetimepicker/disable-dates",
        "title": {
          "kendo-ui": "Disable dates in the Kendo UI DateTimePicker widget | Kendo UI Web demos"
        },
        "meta": {
          "kendo-ui": "This demo shows how Kendo UI DateTimePicker allows you to disable dates."
        }
      },
      {
        "text": "Week Column",
        "url": "datetimepicker/week-column",
        "title": {
          "kendo-ui": "Week column in the Kendo UI DateTimePicker widget | Kendo UI Web demos"
        },
        "meta": {
          "kendo-ui": "This demo shows how Kendo UI DateTimePicker allows you to display week column."
        }
      },
      {
        "text": "API",
        "url": "datetimepicker/api",
        "title": {
          "kendo-ui": "Kendo UI DateTimePicker API Demo"
        },
        "meta": {
          "kendo-ui": "Play with the demo to explore Kendo UI DateTimePicker API and all API functions."
        }
      },
      {
        "packages": [
          "mvc-offline"
        ],
        "text": "Globalization",
        "url": "datetimepicker/globalization"
      },
      {
        "text": "RTL support",
        "url": "datetimepicker/right-to-left-support",
        "title": {
          "kendo-ui": "Right-to-left support in Kendo UI DateTimePicker control | Kendo UI Demo"
        },
        "meta": {
          "kendo-ui": "Choose a date and see how the date and the time are displayed from right to left in Kendo UI DateTimePicker component."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "datetimepicker/keyboard-navigation",
        "title": {
          "kendo-ui": "Keyboard navigation in Kendo UI DateTimePicker widget"
        },
        "meta": {
          "kendo-ui": "By using the keyboard, you can easily select date and time in Kendo UI DateTimePicker, trigger an event or highlight a specific day."
        }
      },
      {
        "text": "MVVM",
        "url": "datetimepicker/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI DateTimePicker"
        },
        "meta": {
          "kendo-ui": "Enabled, events, value and visible MVVM binding support in Kendo UI DateTimePicker"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "datetimepicker/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI DateTimePicker"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI DateTimePicker"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "DropDownList",
    "component": "dropdownlist",
    "name": "dropdownlist",
    "api": { "all": "web/dropdownlist" },
    "documentation": {
      "kendo-ui": "getting-started/web/dropdownlist/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/dropdownlist/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/dropdownlist/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/dropdownlist",
      "jsp-ui": "jsp/dropdownlist",
      "php-ui": "php/dropdownlist"
    },
    "sources": {
      "kendo-ui": [
        {
          "name": "Sample service",
          "url": "~/content/service.html"
        }
      ]
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/dropdownlist",
      "jsp-ui": "jsp/dropdownlist",
      "php-ui": "php/dropdownlist"
    },
    "spriteCssClass": "dropDownListIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "dropdownlist/index",
        "title": {
          "kendo-ui": "Demo for jQuery-powered DropDownList widget in Kendo UI Web"
        },
        "meta": {
          "kendo-ui": "How to easily implement an interactive DropDownlist with user-friendly UI - look at the demo and play with Kendo UI DropDownList."
        }
      },
      {
        "text": "Binding to remote data",
        "url": "dropdownlist/remotedatasource",
        "title": {
          "kendo-ui": "Remote Data binding demo | Kendo UI DropDownList widget"
        },
        "meta": {
          "kendo-ui": "The dropdown list of Kendo HTML5 widget can load data from a remote source. This example shows binding to remote data functionality of the component."
        }
      },
      {
        "text": "Server filtering",
        "url": "dropdownlist/serverfiltering",
        "title": {
          "kendo-ui": "Example of Server filtering in Kendo UI DropDownList widget"
        },
        "meta": {
          "kendo-ui": "See how the auto-searchable dropdown list of Kendo UI DropDownList is filtered on the the server based on the input."
        }
      },
      {
        "text": "Virtualization",
        "url": "dropdownlist/virtualization",
        "title": {
          "kendo-ui": "Example of virtualization in Kendo UI DropDownList widget"
        },
        "meta": {
          "kendo-ui": "See how the virtual dropdown list of Kendo UI DropDownList is filtered on the the server based on the input."
        }
      },
      {
        "text": "Grouping",
        "url": "dropdownlist/grouping",
        "title": {
          "kendo-ui": "Example of grouping in Kendo UI DropDownList widget"
        },
        "meta": {
          "kendo-ui": "See how the virtual dropdown list of Kendo UI DropDownList is grouped."
        }
      },
      {
        "packages": [
          "mvc-offline"
        ],
        "text": "Client filtering",
        "url": "dropdownlist/clientfiltering"
      },
      {
        "text": "Customizing templates",
        "url": "dropdownlist/template",
        "title": {
          "kendo-ui": "Customize items in Kendo UI DropDownList component"
        },
        "meta": {
          "kendo-ui": "This example shows how you can customize the appearance of the items and easily customize templates in jQuery-based Kendo UI DropDownList widget."
        }
      },
      {
        "text": "Cascading DropDownList",
        "url": "dropdownlist/cascadingdropdownlist",
        "title": {
          "kendo-ui": "Example of cascading DropDownList | Kendo UI Dropdownlist Demo"
        },
        "meta": {
          "kendo-ui": "This demo shows how the cascading jQuery dropdown works in Kendo UI DropDownList widget."
        }
      },
      {
        "text": "Add new item",
        "url": "dropdownlist/addnewitem",
        "title": {
          "kendo-ui": "Add new item in Kendo UI DropDownList"
        },
        "meta": {
          "kendo-ui": "Check out this demo to see how to create new item in Kendo UI DropDownList."
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "Custom data source",
        "url": "dropdownlist/custom-datasource",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Events",
        "url": "dropdownlist/events",
        "title": {
          "kendo-ui": "Demo for events in Kendo UI DropDownList component"
        },
        "meta": {
          "kendo-ui": "This demo explains how the cascading jQuery dropdown works in Kendo UI DropDownList widget."
        }
      },
      {
        "text": "API",
        "url": "dropdownlist/api",
        "title": {
          "kendo-ui": "Example of Kendo UI jQuery DropDownList API"
        },
        "meta": {
          "kendo-ui": "Explore API functions of Kendo UI DropDownList to find how to enable or disable the dropdown list, open and close it or just manipulate the items."
        }
      },
      {
        "text": "RTL support",
        "url": "dropdownlist/right-to-left-support",
        "title": {
          "kendo-ui": "RTL feature in Kendo UI DropDownList"
        },
        "meta": {
          "kendo-ui": "In this Kendo UI demo, we illustrate how the RTL support is enabled in Kendo UI DropDownList component."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "dropdownlist/keyboard-navigation",
        "title": {
          "kendo-ui": "Kendo UI DropdownList | Keyboard navigation demo"
        },
        "meta": {
          "kendo-ui": "Kendo UI DropDownList supports keyboard navigation that lets you efforight-to-left-supportessly navigate in the dropdown widget by using the keyboard."
        }
      },
      {
        "text": "MVVM",
        "url": "dropdownlist/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI DropDownList"
        },
        "meta": {
          "kendo-ui": "Enabled, events, source, value and visible MVVM binding support in Kendo UI DropDownList"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "dropdownlist/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI DropDownList"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI DropDownList"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "DropDownTree",
    "component": "dropdowntree",
    "name": "dropdowntree",
    "api": { "all": "web/dropdowntree" },
    "documentation": {
      "kendo-ui": "getting-started/web/dropdowntree/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/dropdowntree/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/dropdowntree/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/dropdowntree",
      "jsp-ui": "jsp/dropdowntree",
      "php-ui": "php/dropdowntree"
    },
    "spriteCssClass": "dropDownTreeIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "dropdowntree/index",
        "title": {
          "kendo-ui": "Demo for jQuery-powered DropDownTree widget in Kendo UI Web"
        },
        "meta": {
          "kendo-ui": "How to easily implement an interactive DropDownTree with user-friendly UI - look at the demo and play with Kendo UI DropDownTree."
        }
      },
      {
        "text": "Checkboxes",
        "url": "dropdowntree/checkboxes",
        "title": {
          "kendo-ui": "Multiple Selection from a treeview with checkboxes | Kendo UI DropDownTree Demo"
        },
        "meta": {
          "kendo-ui": "This sample illustrates how you can easily create dropdowntree with multiple selection from a treeview with checkboxes by simply setting checkboxes to true."
        }
      },
      {
        "text": "Client Filtering",
        "url": "dropdowntree/client-filtering",
        "title": {
          "kendo-ui": "Client Filtering Kendo UI DropDownTree"
        },
        "meta": {
          "kendo-ui": "This sample illustrates how you can easily create dropdowntree with filtering enabled."
        }
      },
      {
        "text": "Binding to remote data",
        "url": "dropdowntree/remote-data-binding",
        "title": {
          "kendo-ui": "Binding Kendo UI tree component to remote data"
        },
        "sources": {
          "kendo-ui": [
            {
              "name": "Sample service",
              "url": "~/content/service.html"
            }
          ]
        },
        "meta": {
          "kendo-ui": "This example illustrates how the hierarchical tree can be bound to remote data and thus the items in the tree are populated from the external source."
        }
      },
      {
        "packages": [
          "!aspnet-mvc", "!aspnet-core", "!jsp", "!php"
        ],
        "text": "Binding to OData service",
        "url": "dropdowntree/odata-binding",
        "title": {
          "kendo-ui": "Example of binding Kendo UI DropDownTree to OData service"
        },
        "sources": {
          "kendo-ui": [
            {
              "name": "Sample service",
              "url": "~/content/service.html"
            }
          ]
        },
        "meta": {
          "kendo-ui": "This sample shows how Kendo UI DropDownTree widget can be bound to oData service."
        }
      },
      {
        "text": "Templates",
        "url": "dropdowntree/templates",
        "title": {
          "kendo-ui": "Example of templates for Kendo UI DropDownTree"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how tree nodes in Kendo UI DropDownTree component can be further customized by using templates."
        }
      },
      {
        "text": "Events",
        "url": "dropdowntree/events",
        "title": {
          "kendo-ui": "Demo for Kendo UI DropDownTree widget events"
        },
        "meta": {
          "kendo-ui": "This sample shows built-in events in Kendo jQuery tree widget. Events are triggered when the user opens or closes the dropdown, changes selection or filters."
        }
      },
      {
        "text": "API",
        "url": "dropdowntree/api",
        "title": {
          "kendo-ui": "Kendo UI DropDownTree API Example"
        },
        "meta": {
          "kendo-ui": "This demo shows the specific API functions, as well as DataSource interaction options, which control the behaviour of Kendo UI DropDownTree."
        }
      },
      {
        "text": "RTL support",
        "url": "dropdowntree/right-to-left-support",
        "title": {
          "kendo-ui": "RTL Support in Kendo UI DropDownTree component"
        },
        "meta": {
          "kendo-ui": "Get familiar with the RTL support in Kendo UI DropDownTree widget, look at the example and use the source code to play with the demo!"
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "dropdowntree/keyboard-navigation",
        "title": {
          "kendo-ui": "Kendo UI DropDownTree control | Keyboard support demo"
        },
        "meta": {
          "kendo-ui": "Look at the source code and play with the demo to find out more about the keyboard support feature in Kendo UI DropDownTree."
        }
      },
      {
        "text": "MVVM",
        "url": "dropdowntree/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI DropDownTree"
        },
        "meta": {
          "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI DropDownTree"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "dropdowntree/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI DropDownTree"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI DropDownTree"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "Dialog",
    "name": "dialog",
    "component": "dialog",
    "api": { "all": "web/dialog" },
    "documentation": {
      "kendo-ui": "getting-started/web/dialog/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/dialog/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/dialog/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/dialog",
      "jsp-ui": "jsp/dialog",
      "php-ui": "php/dialog"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/dialog",
      "jsp-ui": "jsp/dialog",
      "php-ui": "php/dialog"
    },
    "spriteCssClass": "dialogIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "dialog/index",
        "title": {
          "kendo-ui": "Kendo UI Dialog Example | Kendo UI Web Demos"
        },
        "description": {
          "kendo-ui": "<p>The <strong>Kendo UI Dialog</strong> is a modal popup that brings information to the user. It also provides actions through the action buttons to prompt the user for input or to ask for a decision. The component can also contain more complex UI elements that require the focus of the user. The Dialog widget is a subset of the <a href=\"http://www.telerik.com/kendo-ui/window\" target=\"_blank\">Kendo UI Window</a> widget where the most prominent difference is the added functionality for actions.</p><br /><p><strong>Key Features</strong></p> <ul style=\"list-style-type: disc;\"><li>Fully customizable visual appearance of the dialog title and body</li><li>Support for rich text content</li><li>Predefined Alert, Confirm, and Prompt Dialogs</li><li>Built-in modality and animations</li><li>Ability to create and add custom actions (buttons) at the bottom of the dialog</li><li>Rich API for maximum flexibility</li><li>Built-in themes</li><li>Accessibility, keyboard navigation and RTL Support</li><li>Rich cross-browser and mobile support</li></ul>"
        },
        "meta": {
          "kendo-ui": "This example demonstrates the basic usage of Kendo Dialog widget."
        }
      },
      {
        "text": "Predefined dialogs",
        "url": "dialog/predefined-dialogs",
        "title": {
          "kendo-ui": "Predefined dialogs of Kendo UI Dialog widget"
        },
        "description": {
          "kendo-ui": "This demo illustrates the use of the Kendo UI predefined dialogs. They are similar to the browser dialogs - alert, confirm and prompt. Through their stunning UI these dialogs integrate seamlessly with your web application."
        },
        "meta": {
          "kendo-ui": "This example shows how to use the predefined dialogs of Kendo Dialog widget."
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "MVVM",
        "url": "dialog/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Dialog"
        },
        "description": {
          "kendo-ui": "<p>The MVVM feature of the Kendo UI framework provides powerful two-way data binding capabilities, built on the popular Model-View-ViewModel concept. In this way you can easily make attribute values for widgets observable and modify them automatically when changes are applied in the data source, or alter the underlying data when the user interacts with the UI.</p> <p>In this example we show how to configure the Kendo UI Dialog to make use of the MVVM functionality exposed by the framework. For this purpose we create a <strong>viewmodel</strong> instance (with <strong>kendo.observable</strong> call), and instantiate the widget, its attributes and binding definition using <strong>data-</strong> attributes (on a div html element). The important detail to wire the viewmodel is to invoke <strong>kendo.bind</strong> to the container element of the dialog, passing the viewmodel as a second argument. Review the code snippets from the demo for more info.</p> <p>Details on the MVVM features of the Kendo UI framework can be obtained from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/mvvm/overview\">this chapter</a> of the documentation.</p>"
        },
        "meta": {
          "kendo-ui": "<p>The MVVM feature of the Kendo UI framework provides powerful two-way data binding capabilities, built on the popular Model-View-ViewModel concept. In this way you can easily make attribute values for widgets observable and modify them automatically when changes are applied in the data source, or alter the underlying data when the user interacts with the UI.</p> <p>In this example we show how to configure the Kendo UI Dialog to make use of the MVVM functionality exposed by the framework. For this purpose we create a <strong>viewmodel</strong> instance (with <strong>kendo.observable</strong> call), and instantiate the widget, its attributes and binding definition using <strong>data-</strong> attributes (on a div html element). The important detail to wire the viewmodel is to invoke <strong>kendo.bind</strong> to the container element of the dialog, passing the viewmodel as a second argument. Review the code snippets from the demo for more info.</p> <p>Details on the MVVM features of the Kendo UI framework can be obtained from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/mvvm/overview\">this chapter</a> of the documentation.</p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "dialog/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Dialog"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI Dialog"
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI Dialog features inborn integration with AngularJS using directives which are officially supported as part of the product. To make use of this integration, you need to reference the Angular scripts in your app and register the module incorporating the Kendo UI directives in the following way:</p><p> angular.module(\"KendoDemos\", [ \"kendo.directives\" ])</p><p>Thus you can utilize the AngularJS framework in combination with our editor for apps which could benefit from such integrations. Further, you can specify the editor html as a field in the $scope and then associate it via the relevant <b>k-</b> dialog Angular attribute definition. This is demonstrated in the demo at hand.</p><p>Additional information about how to use Kendo UI widgets with AngularJS you can gather from <a target=\"blank\" href=\"http://docs.telerik.com/kendo-ui/AngularJS/introduction#overview\">this help resource.</a></p></p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "Events",
        "url": "dialog/events",
        "title": {
          "kendo-ui": "Events in Kendo UI Dialog demo"
        },
        "meta": {
          "kendo-ui": "This demo shows how to fire events in Kendo UI jQuery dialog widget. Open and close are some of the events which you can trigger."
        },
        "requiresServer": "true"
      },
      {
        "text": "API",
        "url": "dialog/api",
        "title": {
          "kendo-ui": "Example of Kendo UI Dialog API"
        },
        "meta": {
          "kendo-ui": "This sample shows how you can use the API of kendoDialog widget to refresh the content of the dialog, open and close it."
        },
        "requiresServer": "true"
      },
      {
        "text": "RTL support",
        "url": "dialog/right-to-left-support",
        "title": {
          "kendo-ui": "Right-to-Left dialog position of Kendo UI Dialog control"
        },
        "meta": {
          "kendo-ui": "This demo shows how Kendo UI Dialog widget supports right-to-left direction of the dialog to provide best end-user experience."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "dialog/keyboard-navigation",
        "title": {
          "kendo-ui": "Keyboard navigation support | Kendo UI Dialog Demo"
        },
        "meta": {
          "kendo-ui": "The sample demonstrates how the keyboard navigation feature is integrated in the Kendo UI Dialog."
        }
      },
      {
        "text": "TreeView in Dialog",
        "url": "dialog/treeview-integration",
        "title": {
          "kendo-ui": "TreeView in Dialog | Kendo UI Dialog Demo"
        },
        "meta": {
          "kendo-ui": "This sample shows how you can use a TreeView in Dialog for picking values and pass them to an input element or a hidden field."
        },
        "packages": ["!aspnet-core"]
      },
      {
        "text": "TreeView in Dialog (AngularJS)",
        "url": "dialog/treeview-integration-angularjs",
        "title": {
          "kendo-ui": "TreeView in Dialog (AngularJS)| Kendo UI Dialog Demo"
        },
        "meta": {
          "kendo-ui": "This sample shows how you can use a TreeView in Dialog for picking values and pass them to an input element or a hidden field."
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "TreeList in Dialog",
        "url": "dialog/treelist-integration",
        "title": {
          "kendo-ui": "TreeList in Dialog | Kendo UI Dialog Demo"
        },
        "meta": {
          "kendo-ui": "This sample shows how you can use a TreeList in Dialog for picking values and pass them to an input element or a hidden field."
        },
        "packages": [ "!aspnet-core" ]
      }
    ],
    "category": "Layout"
  },
  {
    "text": "Editor",
    "name": "editor",
    "component": "editor",
    "pro": "true",
    "api": { "all": "web/editor" },
    "documentation": {
      "kendo-ui": "getting-started/web/editor/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/editor/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/editor/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/editor",
      "jsp-ui": "jsp/editor",
      "php-ui": "php/editor"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/editor",
      "jsp-ui": "jsp/editor",
      "php-ui": "php/editor"
    },
    "spriteCssClass": "editorIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "editor/index",
        "title": {
          "kendo-ui": "Demo for jQuery WYSIWYG editor in Kendo UI Web framework"
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI Editor is a powerful WYSIWYG component, which allows you and your users to create rich text content in a familiar and user friendly way. It provides a variety of tools for creating, editing and formatting text, paragraphs, lists, images, tables, hyperlinks and other HTML elements. The component outputs identical HTML across all major browsers, follows accessibility standards and provides API for content manipulation and export to PDF.</p> <p>You can find additional information on how to use the Kendo UI Editor in <a href=\"http://docs.telerik.com/kendo-ui/web/editor/overview\" target=\"_blank\">this section</a> of the product documentation.</p> <p><strong>Key Features</strong></p> <ul> <li>Intuitive UI for Rich Text Editing, Formatting and Styling</li> <li>UI for lists, tables, images and hyperlinks creation and formatting</li> <li>File attachment support</li> <li>Simple-to-Customize Look and Feel</li> <li>Ability to create and add custom buttons</li> <li>Rich API for maximum flexibility</li> <li>High performance</li> <li>Export to PDF</li> <li>Built-in themes</li> <li>Accessibility, keyboard navigation and RTL Support</li> <li>Rich cross-browser and mobile support</li> <li>Responsive HTML 5 Rendering</li> </ul> <p>More about <a href=\"http://www.telerik.com/kendo-ui/editor\">Editor for Kendo UI</a>"
        },
        "meta": {
          "kendo-ui": "This example of Kendo UI WYSIWYG editor component shows how you can implement this easy-to-use and beautiful editor in your web app."
        }
      },
      {
        "text": "MVVM",
        "url": "editor/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Editor"
        },
        "meta": {
          "kendo-ui": "Events, value and visible MVVM binding support in Kendo UI Editor"
        },
        "description": {
          "kendo-ui": "<p>The MVVM feature of the Kendo UI framework provides powerful two-way data binding capabilities, built on the popular Model-View-ViewModel concept. In this way you can easily make attribute values for widgets observable and modify them automatically when changes are applied in the data source, or alter the underlying data when the user interacts with the UI.</p> <p>In this example we show how to configure the Kendo UI Editor to make use of the MVVM functionality exposed by the framework. For this purpose we create a <strong>viewmodel</strong> instance (with <strong>kendo.observable</strong> call), and instantiate the widget, its attributes and binding definition using <strong>data-</strong> attributes (on a textarea html element). The important detail to wire the viewmodel is to invoke <strong>kendo.bind</strong> to the container element of the editor, passing the viewmodel as a second argument. Review the code snippets from the demo for more info.</p> <p>Details on the MVVM features of the Kendo UI framework can be obtained from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/mvvm/overview\">this chapter</a> of the documentation.</p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "editor/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Editor"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI Editor"
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI Editor features inborn integration with AngularJS using directives which are officially supported as part of the product. To make use of this integration, you need to reference the Angular scripts in your app and register the module incorporating the Kendo UI directives in the following way:</p><p> angular.module(\"KendoDemos\", [ \"kendo.directives\" ])</p><p>Thus you can utilize the AngularJS framework in combination with our editor for apps which could benefit from such integrations. Further, you can specify the editor html as a field in the $scope and then associate it via the relevant <b>k-</b> editor Angular attribute definition. This is demonstrated in the demo at hand.</p><p>Additional information about how to use Kendo UI widgets with AngularJS you can gather from <a target=\"blank\" href=\"http://docs.telerik.com/kendo-ui/AngularJS/introduction#overview\">this help resource.</a></p></p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "Inline editing",
        "url": "editor/inline-editing",
        "title": {
          "kendo-ui": "Inline editing functionality of Kendo UI WYSIWYG jQuery Editor"
        },
        "group": "Functionality",
        "description": {
          "kendo-ui": "<p>This example shows how you can use the Kendo UI Editor to edit parts of the page inline and simultaneously have an overview of the real layout and appearance.</p> <p>All you need to do to enable the inline editing is to set a css class with display: inline-block setting to an html element, where the element should be a valid <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Content_Editable\">contentEditable element</a> as the \"divs\" rendered in this demo. If such a configuration is not set, the WYSIWYG editor will be rendered in its default textarea mode.</p>"
        },
        "meta": {
          "kendo-ui": "This example shows how to use the Kendo UI Editor to edit parts of the page inline, allowing authors to see the page in its final state."
        }
      },
      {
        "text": "Custom tools",
        "url": "editor/custom-tools",
        "title": {
          "kendo-ui": "Custom tools for Kendo UI WYSIWYG jQuery Editor"
        },
        "meta": {
          "kendo-ui": "This example shows how you can easily customize some of Kendo UI Editor native tools. You can also create completely custom tools for the component."
        },
        "description": {
          "kendo-ui": "<p>This example illustrates how to customize some of the native Editor tools (font size, font name and block format) by modifying the tools' item collections, as well as how to create completely custom tools (Content Area Background Color and Insert a Horizontal Ruler).</p> <p>You can use the .concat() method for JavaScript arrays to modify the fontName, fontSize and Formatting settings.</p> <p>To add a new custom action item to the toolbar set the template option of the editor tool item.</p> <p>To execute a custom command when it is pressed, set the exec attribute to point to a JavaScript function that will be fired when the custom button is clicked.</p>"
        }
      },
      {
        "text": "File and image browser",
        "url": "editor/imagebrowser",
        "title": {
          "kendo-ui": "File and image browser in Kendo UI Editor | Kendo UI demo"
        },
        "meta": {
          "kendo-ui": "In this demo we will see how the sleek image browser is nicely implemented in Kendo UI Editor widget."
        },
        "description": {
          "kendo-ui": "<p>You can use the Image Browser and File Browser managers to upload or insert Image and Hyperlink objects into the content area of the Editor, respectively. Both dialogs consist of Address and Search fields, File Browser panel which shows the available files, File Upload, Create a New Folder and Delete features. Additionally, there is a file properties section with fields suitable for images: web address, alternate text, width and height, and for hyperlinks: web address and title.</p> <p>You can configure the Image browser tool through the imageBrowser configuration option and the File browser through the fileBrowser one. More information about the Image dialog can be found in this Kendo UI documentation article: <a href=\"http://docs.telerik.com/kendo-ui/web/editor/imagebrowser\">Image Browser</a>.</p>"
        },
        "packages": [
          "online",
          "mvc",
          "jsp",
          "php"
        ],
        "sources": {
          "kendo-ui": [
            {
              "name": "Sample service",
              "url": "~/content/service.html"
            }
          ]
        }
      },
      {
        "text": "All tools",
        "url": "editor/all-tools",
        "title": {
          "kendo-ui": "All tools demo in Kendo UI HTML5-based Editor widget"
        },
        "meta": {
          "kendo-ui": "This example illustrates the core HTML editing engine in Kendo UI Editor widget. Get familiar with all features of the component for any HTML5 website or web app."
        },
        "description": {
          "kendo-ui": "<p>This demo presents the whole set of tools supported by the Telerik Kendo UI Editor. You can easily add or hide each of them through the tools collection option of the widget.</p>"
        }
      },
      {
        "text": "Snippets",
        "url": "editor/snippets",
        "title": {
          "kendo-ui": "Demo for snippets feature of Kendo UI Editor widget"
        },
        "meta": {
          "kendo-ui": "This example demonstrates the snippet feature of Kendo UI Editor. See how you can quickly insert HTML code snippet into web-based editor in your app."
        },
        "description": {
          "kendo-ui": "<p>The snippets feature of the Kendo UI Editor allows you to quickly insert predefined HTML code snippets in the content area.</p> <p>The snippet tool can insert plain text or HTML content which you can configure using the tools -&gt; items -&gt; <b>text</b> and <b>value</b> attributes, where the value attribute holds the snippet content which will be injected in the editor content area.</p>"
    }
      },
      {
        "text": "Styles",
        "url": "editor/styles",
        "title": {
          "kendo-ui": "Style tool demo for Kendo UI HTML5-based web editor | Kendo UI Demos"
        },
        "meta": {
          "kendo-ui": "This example shows how you can use Kendo UI Editor's style tool to customize the content of the widget with CSS classes."
        },
        "description": {
          "kendo-ui": "<p>The demo outlines how to use the Editor's style tool which provides the ability to customize the widget content by means of custom CSS classes and styling, and a CSS file registered in the Editor iframe document.</p> <p>You can register and import your own CSS file into the content area through the stylesheets option.</p> <p> Use the tools -&gt; name -&gt; <strong>text</strong> and <strong>value</strong> options to populate the Format dropdown with options. Note that the specified CSS class should exist in the CSS file imported in the content area through the <b>stylesheets</b> attribute.</p>"
        }
      },
      {
        "text": "PDF Export",
        "url": "editor/pdf-export",
        "title": {
          "kendo-ui": "PDF export support in Kendo UI Editor"
        },
        "meta": {
          "kendo-ui": "With Kendo UI Editor you can allow end users to edit HTML5 in a user-friendly way. Check out this demo to learn more about the PDF export support in the widget."
        },
        "description": {
          "kendo-ui": "<p>Nowadays, the PDF format is very popular and widely used to present documents in a manner independent of application software, hardware and operating systems. This demo demonstrates how to export the Telerik Kendo UI Editor content to PDF.</p> <p>The approach is very straight-forward - to export the content to PDF include the corresponding command to the editor&rsquo;s toolbar&nbsp; tools collection and configure the export settings through the pdf attribute. For instance, you can specify the file name and whether to export all pages, margins, paper size, font, etc.</p>"
        }
      },
      {
        "text": "Paste Cleanup",
        "url": "editor/paste-cleanup",
        "title": {
          "kendo-ui": "Paste cleanup options demo for Kendo UI HTML5-based web editor | Kendo UI Demos"
        },
        "meta": {
          "kendo-ui": "This example shows how you can clean up the content users paste in Kendo UI Editor's"
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI Editor widget exposes several options for cleaning up the content users paste in the content area. This allows for better control on what content is entered and ensures consistent styling.</p>"
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "Immutable Elements",
        "url": "editor/immutable-elements",
        "title": {
          "kendo-ui": "Immutable Elements demo for Kendo UI HTML5-based web editor | Kendo UI Demos"
        },
        "meta": {
          "kendo-ui": "This example shows how you can use immutable elements in Kendo UI Editor's"
        },
        "description": {
          "kendo-ui": "<p>The <strong>Kendo UI Editor</strong> widget and its <strong>Immutable Elements</strong> feature enables you to predefine elements in the content area that cannot be edited by the end user.&nbsp;</p><p>This demo shows a use case where a mail form is to be edited. You can see also:</p><ol><li>How to enable the Immutable Elements—by using the&nbsp;<a href='http://docs.telerik.com/kendo-ui/api/javascript/ui/editor#configuration-immutables'>immutables option</a>;</li><li>How to define the HTML elements that cannot be edited—by adding the <strong>contenteditable='false'</strong> attribute;</li><li>How to use the <a href='http://docs.telerik.com/kendo-ui/api/javascript/ui/editor#configuration-immutables.serialization'>immutables.serialization</a>&nbsp;and&nbsp;<a href='http://docs.telerik.com/kendo-ui/api/javascript/ui/editor#configuration-immutables.deserialization'>immutables.deserialization</a>&nbsp;option to change the data shown in the&nbsp;<strong>viewHtml</strong> dialog and enable end user to control the CSS text-align property from there;</li><li>How to define default styles for the immutable elements;</li><li>And how to define styles when an immutable element is selected to improve UX.</li></ol>"
        },
        "packages": [
          "online",
          "mvc",
          "jsp",
          "php",
          "aspnet-core"
        ]
      },
      {
        "text": "Events",
        "url": "editor/events",
        "title": {
          "kendo-ui": "Example for events in Kendo UI Editor component"
        },
        "meta": {
          "kendo-ui": "This demo illustrates which events are fired when the editor is blurred, its content is changed or a command is executed."
        },
        "group": "API",
        "description": {
          "kendo-ui": "<p>Telerik Kendo UI Editor exposes rich API and events which provide easy configuration or extension points for customization on top of its built-in features.</p> <p>This particular demo shows how you can intercept the <strong>change</strong>, <strong>execute, select </strong>and <strong>paste </strong>events of the editor to output messages in the console when these events are raised. You can use these events for customizations or to execute custom logic, if necessary.</p>"
        }
      },
      {
        "packages": [
          "mvc-offline"
        ],
        "text": "Globalization",
        "url": "editor/globalization"
      },
      {
        "text": "API",
        "url": "editor/api",
        "title": {
          "kendo-ui": "API demo for Kendo UI Web Editor component"
        },
        "meta": {
          "kendo-ui": "This examples show how the API of Kendo UI Editor works in action and how the content in the editor can be easily manipulated via the API."
        },
        "description": {
          "kendo-ui": "<p>Telerik Kendo UI Editor exposes rich client-side API and events, which provide easy configuration or extension points for custom functionality on top of the built-in features.</p> <p>The example represents how you can get a reference to the editor&rsquo;s client-side object and obtain/replace its content using the provided <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/editor#methods-value\">editor.value()</a> method.</p> <p>You can find more information about the editor&rsquo;s client-side API <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/editor\">here</a>.</p>"
        }
      },
      {
        "text": "RTL support",
        "url": "editor/right-to-left-support",
        "title": {
          "kendo-ui": "RTL support in Kendo UI Editor"
        },
        "meta": {
          "kendo-ui": "With Kendo UI Editor you can allow end users to edit HTML5 in a user-friendly way. Check out this demo to learn more about the RTL support in the widget."
        },
        "group": "Accessibility and Internationalization",
        "description": {
          "kendo-ui": "<p>The Telerik Kendo UI Editor supports right-to-left languages and rendering. All you have to do is register the <strong>kendo.rtl.min.css</strong> file (located in the /styles installation folder) and wrap the editor in a container element with <strong>k-rtl </strong>class set for it, as demonstrated in this example.</p> <p>More information on the right-to-left support of the Kendo UI widgets can be found in <a href=\"http://docs.telerik.com/kendo-ui/accessibility/supporting-rtl-languages\" target=\"_blank\">this topic</a>.</p>"
        }
      },
      {
        "text": "Localization",
        "url": "editor/localization",
        "title": {
          "kendo-ui": "Localization support in Kendo UI Editor"
        },
        "meta": {
          "kendo-ui": "With Kendo UI Editor you can allow end users to edit HTML5 in a user-friendly way. Check out this demo to learn more about the localization support in the widget."
        },
        "description": {
          "kendo-ui": "<p>The Telerik Kendo UI Editor supports localization by specifying messages for its toolbar elements in the corresponding languages. You can apply these messages either directly through the editor messages attributes collection, or via kendo.messages.[language_abbreviation] file as presented in this example.</p> <p>More information about the localization support (by means of messages definitions) for the editor can be found in <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/editor#configuration-messages\" target=\"_blank\"> this section of the documentation</a> </p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "editor/keyboard-navigation",
        "title": {
          "kendo-ui": "Keyboard navigation in Kendo UI Editor"
        },
        "meta": {
          "kendo-ui": "Kendo UI Editor is another widget that supports keyboard navigation. Check out the demo to learn how to implement it in your app."
        },
        "description": {
          "kendo-ui": "<p>This example demonstrates the keyboard support of the Telerik Kendo UI Editor widget, which provides access to the available editor&rsquo;s toolbar buttons without the need of using a mouse.</p> <p>Once the focus goes on the first toolbar button, you can focus the next one by pressing the Tab key. You can go back onto the previous tool by pressing Shift+Tab. To execute the command of the selected tool press the Enter key.</p> <p>Further details about the Keyboard, Section 508 and WAI-ARIA support of the Kendo UI widgets can be found in the <a href=\"http://docs.telerik.com/kendo-ui/accessibility/accessibility-overview\">Accessibility Overview section</a> of the documentation.</p>"
        }
      }
    ],
    "category": "Editors"
  },
  {
    "text": "Grid",
    "name": "grid",
    "component": "grid",
    "pro": "true",
    "updated": "true",
    "api": { "all": "web/grid" },
    "documentation": {
      "kendo-ui": "getting-started/web/grid/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/grid/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/grid/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/grid",
      "jsp-ui": "jsp/grid",
      "php-ui": "php/grid"
    },
    "sources": {
      "kendo-ui": [
        {
          "name": "Sample service",
          "url": "~/content/service.html"
        }
      ]
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/grid",
      "jsp-ui": "jsp/grid",
      "php-ui": "php/grid"
    },
    "spriteCssClass": "gridIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "grid/index",
        "title": {
          "kendo-ui": "jQuery Grid - Basic Usage Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI which supports everything from paging, sorting, filtering and data editing to grouping and hierarchy."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI grid is a powerful widget which allows you to visualize and edit data via its table representation. It provides a variety of options about how to present and perform operations over the underlying data, such as paging, sorting, filtering, grouping, editing, etc. To feed the grid with data, you can supply either local or remote data via the Kendo UI DataSource component, used as a mediator.</p><br/><p>There are two possible ways to instantiate a Kendo UI grid:</p><ol><li>From an empty div element. In this case all the Grid settings are provided in the initialization script statement.</li><li>From an existing HTML table element. In this case some of the Grid settings can be inferred from the table structure and elements HTML attributes.</li></ol><br/><p>In both cases the grid is registered as a jQuery plugin</p><br/><p>In this demo you can see how you can easily configure the grid to display data and perform sorting, paging and grouping operations via its built-in settings. </p><br/><p>Additional information about how to use the Kendo UI grid widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/web/grid/introduction\" target=\"_blank\">this section</a> of the product documentation.</p>\n"
        }
      },
      {
        "text": "Initialization from table",
        "url": "grid/from-table",
        "title": {
          "kendo-ui": "jQuery Grid - Initialization from Table Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI and see how it gets initialized from HTML5 element with defined columns and table elements."
        },
        "description": {
          "kendo-ui": "<p>When grid is initialized from an existing HTML table, this table is presumably already populated with data. This improves accessibility and SEO, and warrants the data will be visible even when JavaScript is disabled or there's a JavaScript error on the page.</p> <p>Note that the Grid uses a Kendo UI DataSource instance even when it is created from a table. The cell content is \"fetched\" and thus the DataSource is fed with data. The data field names in the DataSource are either created from the header cell content or the data-field attributes of the header cells. The data field names should be valid Javascript identifiers, that's why it is recommended to use data-field attributes, otherwise the header cell content must obey several limitations:</p> <ul> <li>no spaces</li> <li>no special characters</li> <li>the first character should be a letter</li> </ul> <p>When creating the Grid from an existing table, the column settings can be defined via HTML attributes. <br /> <br /> More information regarding Kendo UI grid creation from data table can be found in the documentation <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/web/grid/introduction#create-a-grid-from-an-existing-html-table\">here</a>.</p>\n"
        },
        "packages": [
          "!aspnet-mvc",
          "!php",
          "!jsp",
          "!aspnet-core"
        ]
      },
      {
        "text": "MVVM",
        "url": "grid/mvvm",
        "title": {
          "kendo-ui": "jQuery Grid - MVVM Support Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI supporting events, source and visible MVVM bindings."
        },
        "description": {
          "kendo-ui": "<p>The MVVM feature of the Kendo UI framework provides powerful two-way data binding capabilities, built on the popular Model-View-ViewModel concept. In this way you can easily make attribute values for widgets observable and modify them automatically when changes are applied in the data source, or alter the underlying data when the user interacts with the UI.</p> <p>In this example we show how to configure the Kendo UI grid to make use of the MVVM functionality exposed by the framework. For this purpose we create a <strong>viewmodel instance </strong>(with <strong>kendo.observable</strong> call) which wraps the grid data source, and instantiate the grid, its attributes and binding definition using<strong> data-</strong> attributes. The important detail to wire the viewmodel is to invoke <strong>kendo.bind</strong> to the container element of the grid, passing the viewmodel as a second argument. Review the code snippets from the demo for more info.</p> <p>Details on the MVVM features of the Kendo UI framework can be obtained from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/mvvm/overview\">this chapter of the documentation</a>. </p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "grid/angular",
        "title": {
          "kendo-ui": "jQuery Grid - AngularJS Support Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI featuring inherent integration with AngularJS using officially supported directives."
        },
        "description": {
          "kendo-ui": "<p><a href=\"http://www.telerik.com/kendo-ui/grid\" target=\"_blank\">The Kendo UI grid</a> features inherent integration with AngularJS using directives which are officially supported as part of the product. To make use of this integration, you need to reference the Angular scripts in your app and register the module incorporating the Kendo UI directives in the following way:</p> <p>&nbsp;angular.module(\"KendoDemos\", [ \"kendo.directives\" ])</p> <p>Thus you can utilize the AngularJS framework in combination with our grid for apps which could benefit from such integrations. Further, you can specify the grid options as a field in the $scope and then associate them via the options attribute of the grid Angular definition. This is demonstrated in the demo at hand.</p> <p>Additional information about how to use the Kendo UI grid with AngularJS you can gather from <a href=\"http://docs.telerik.com/kendo-ui/AngularJS/the-grid-widget\" target=\"_blank\">this help resource</a>.</p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "Binding to local data",
        "url": "grid/local-data-binding",
        "sources": {
          "kendo-ui": [
            {
              "name": "products.js",
              "url": "~/content/shared/js/products.js"
            }
          ]
        },
        "title": {
          "kendo-ui": "jQuery Grid - Binding to Local Data Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI and learn how to bind the widget to local JSON data by using the DataSource component."
        },
        "group": "Data Binding",
        "description": {
          "kendo-ui": "<p>The Kendo UI grid suppports data binding and you can command the widget to display data either from local or remote data storage. For local data binding you simply need to supply an array of JavaScript objects/JSON via the dataSource data property of the grid, or utilize the Kendo UI DataSource as a mediator between the grid and the underlying data. </p> <br /> <p>In this example the grid fetches its data from a JavaScript file named products, registered via a script tag in the head section of the page. Note that in addition to the visualization, the grid provides built-in support for operations over data such as sorting, filtering and paging. </p> <br /> <p> There are two possible ways to instantiate a Kendo UI grid: </p> <ol> <li>From an empty div element. In this case all the Grid settings are provided in the initialization script statement.</li> <li>From an existing HTML table element. Thus some of the Grid settings can be inferred from the table structure and elements HTML attributes.</li> </ol> <br /> <p>In both cases the grid is registered as a standard jQuery plugin.</p> <br /><p>Additional information about how to utilize the data binding feature of the Kendo UI grid can be found in <a href=\"http://docs.telerik.com/kendo-ui/web/grid/walkthrough#data-binding---local\" target=\"_blank\">this section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "Binding to remote data",
        "url": "grid/remote-data-binding",
        "title": {
          "kendo-ui": "jQuery Grid - Binding to Remote Data Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI and learn how to bind the widget to remote data by using the DataSource component."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI grid supports data binding and you can command the widget to display data either from local or remote data storage. For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP, OData or XML format, and utilize the Kendo UI DataSource as a mediator between the grid and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <br/> <p>In this example the grid fetches its data from a remote endpoint using a web service (Northwind.svc) assigned via the dataSource -> transport -> read attribute. It also defines the schema model of the response from the web service, as well as the type of the service (odata) via the dataSource type property. Note that in addition to the visualization, the grid provides built-in support for operations over data such as sorting, filtering and paging. </p> <br/> <p> There are two possible ways to instantiate a Kendo UI grid: </p> <ol> <li>From an empty div element. In this case all the Grid settings are provided in the initialization script statement.</li> <li>From an existing HTML table element. Thus some of the Grid settings can be inferred from the table structure and elements HTML attributes.</li> </ol> <br/> <p>In both cases the grid is registered as a standard jQuery plugin.</p> <br/> <p>Additional information about how to utilize the data binding feature of the Kendo UI grid can be found in <a href=\"http://docs.telerik.com/kendo-ui/web/grid/walkthrough#data-binding--remote\" target=\"_blank\">this section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "Binding to Kinvey Backend Services",
        "url": "grid/kinvey",
        "title": {
          "kendo-ui": "jQuery Grid - Binding to Kinvey Backend Services Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI which can be bound to Kinvey Backend Services providing the backend functionality."
        },
        "description": {
          "kendo-ui": "<h4>What are the Kinvey Backend Services?</h4><p>Kinvey Backend Services are a set of cloud-based services that enable developers to build and manage mobile apps significantly faster, easier and more scalable way. Kinvey Backend Services can significantly speed-up development by providing your app with data storage, user management and server-code execution.</p><p style=\"padding-top: 1em;\">&raquo; <a class=\"hyperlink\" href=\"https://www.kinvey.com/\" title=\"Getting started with Kinvey Backend Services\">What are Kinvey Backend Services</a></p><p>&raquo; <a class=\"hyperlink\" href=\"https://devcenter.kinvey.com/html5/guides/getting-started\">Kinvey Backend Services HTML5 SDK</a></p><p>&raquo; <a class=\"hyperlink\" href=\"https://github.com/Kinvey/kinvey-kendo-data-source\" title=\"Introduction to Kendo UI and Kinvey Backend Services JavaScript integration\">Integration with Kendo UI</a></p><p class=\"demo-hint\" style=\"padding-top: 1em;\">Note: The Kinvey Backend Services data source is not supported on IE11 and below yet, because it relies on <a class=\"hyperlink\" href=\"http://en.wikipedia.org/wiki/Cross-origin_resource_sharing\">cross-origin resource sharing</a>.</p>"
        },
        "packages": [
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Binding to GraphQL Service",
        "new": "true",
        "url": "grid/graphql",
        "title": {
          "kendo-ui": "GraphQL integration with Kendo UI Grid"
        },
        "meta": {
          "kendo-ui": "GraphQL integration with Kendo UI Grid"
        },
        "description": {
          "kendo-ui": "<h4>What are the benefits of using a GraphQL service?</h4><p>A GraphQL service is served over HTTP through a single endpoint that responds using JSON and expresses the full set of capabilities of the API. The current example consumes data from an ASP.NET Core GraphQL Service that is available for review in the below linked repository.</p> <p class=\"demo-hint\" style=\"padding-top: 1em;\"><a class=\"hyperlink\" href=\"https://github.com/telerik/kendo-ui-demos-service/tree/master/graphql/graphql-aspnet-core\">GraphQL Service Repository</a>.</p></p>"
        }
      },
      {
        "text": "Binding to SignalR",
        "url": "grid/signalr",
        "title": {
          "kendo-ui": "jQuery Grid - Binding to SignalR Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI and learn how to bind the widget to SignalR Hub for real-time push notifications."
        },
        "description": {
          "kendo-ui": "<p>There are situations when you would like to perform real-time updates for all users which start a session with your web app. <br /> <br /> This is when you can utilize SignalR and the Kendo UI DataSource. The latter supports signalr dialect by setting its <strong>type </strong>attribute and<strong> transport-&gt;signalr </strong>configuration.&nbsp; In this way you instruct the data source to use SignalR protocol for transmitting and operating with data in real time on every page refresh, also known under the term long polling.</p> <p>This is especially useful for web applications which require high-frequency updates, for instance chat apps, real-time gaming, etc. More on the SignalR support of the Kendo UI DataSource can be found <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/data/datasource#configuration-transport.signalr\" target=\"_blank\">in this section of the docs.</a></p>"
        },
        "packages": [
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Binding to WebSocket",
        "url": "grid/web-socket",
        "title": {
          "kendo-ui": "jQuery Grid - Binding to WebSocket Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI and learn how to bind the widget to WebSocket for real-time push notifications."
        },
        "description": {
          "kendo-ui": "<p>There are situations when you would like to perform real-time updates for all users which start a session with your web app. <br /> <br /> This is when you can utilize WebSockets and the Kendo UI DataSource. The latter supports WebSockets by setting <strong>transport-&gt;push/read/update/destroy/create</strong> methods configuration for handling data requests in this way.&nbsp; In this way you tell the data source to use web sockets for transmitting and operating with data in real time on every page refresh, also known under the term long polling.</p> <p>This is especially useful for web applications which require high-frequency updates, for instance chat apps, real-time gaming, etc. More on the WebSockets support of the Kendo UI Data Source can be found <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/data/datasource#configuration-transport.push\" target=\"_blank\">in this section of the docs.</a></p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "Working Offline",
        "url": "grid/offline",
        "title": {
          "kendo-ui": "jQuery Grid - Working Offline Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI allowing you to modify data and store changes even when working offline."
        },
        "description": {
          "kendo-ui": "<p>In various scenarios users would like to keep interacting with their web app, modify data and store changes even when there's no internet connection available. Further, they would want to sync their changes with the server once the connection is restored and they are back online.</p> <p>With the power of the Kendo UI DataSource, this offline data storage and sync capability comes as built-in functionality for people making use of its features. This demo illustrates how you can edit, create or delete records in the grid while being offline, persist these changes while disconnected and the sync them when you are online again. This is done by the DataSource component which is the mediator between the grid and the underlying data. </p> <p>&nbsp;Important configuration setting for the DataSource when working with offline data is its <strong>offlineStorage </strong>option (by default <strong>localStorage </strong>is used) and utilizing its <strong>online </strong>and <strong>offlineData </strong>methods. Custom offline storage is also supported.</p> <p>More information on the offline data support of the data source is available in <a href=\"http://docs.telerik.com/kendo-ui/framework/datasource/offline\" target=\"=_blank\">this help article.</a></p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "Custom ajax binding",
        "url": "grid/customajaxbinding",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Custom data source",
        "url": "grid/custom-datasource",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "OData binding",
        "url": "grid/odata",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Web API binding",
        "url": "grid/webapi",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Server binding",
        "url": "grid/serverbinding",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Custom server binding",
        "url": "grid/customserverbinding",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Export to Excel",
        "url": "grid/excel-export",
        "title": {
          "kendo-ui": "jQuery Grid - Export to Excel Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI which provides options for exporting its data to Excel."
        },
        "group": "Exporting",
        "description": {
          "kendo-ui": "<p>When using grid, it is often useful and important to export your data to MS Excel in order to make it accessible offline, share it with your colleagues, etc. </p><p>The Kendo UI grid provides client Excel export functionality (server-agnostic) which can be directly utilized to serve the purpose to share data in the aforementioned ways. To enable it, include the corresponding command to the grid toolbar and configure the export settings accordingly. Alternatively, you can trigger Excel export by invoking the <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid.html#methods-saveAsExcel\">saveAsExcel</a> method from the client API of the grid. <br /><br />Additionally, you have the option to customize the rows/columns and cells of the exported file by intercepting the excelExport event. More information on this topic can be found in the <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/web/grid/excel-export\">following documentation article</a>.</p>"
        },
        "packages": [
          "!offline"
        ]
      },
      {
        "text": "Export to PDF",
        "url": "grid/pdf-export",
        "title": {
          "kendo-ui": "jQuery Grid - Export to PDF Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI which provides options for exporting its data as a PDF file."
        },
        "description": {
          "kendo-ui": "<p>When using grids, you may need to export your data to PDF in order to make it accessible on-the-go, share it with your boss or peers, etc. </p><p>The Kendo UI grid provides client Pdf export functionality (server-agnostic) which is powered by the underlying Drawing API engine of the Kendo UI framework. To enable it, include the corresponding command to the grid toolbar and configure the pdf export settings in par with your preferences. For instance, you can specify to export all pages, margins, paper size, font, etc. To initiate export programmatically, you can call the <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid.html#methods-saveAsPDF\">saveAsPdf</a> method from the client API. <br /><br />Furthermore, you have the ability to customize the look and feel of the exported grid table by wiring the pdfExport event of the grid. More information on the Pdf export feature of the widget is available in the <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/web/grid/print-export#exporting\">following help topic</a>.</p>"
        },
        "packages": [
          "!offline"
        ]
      },
      {
        "text": "Copy to Excel",
        "url": "grid/copy-to-excel",
        "title": {
          "kendo-ui": "jQuery Grid - Copy to Excel Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI and learn how to copy grid cell content from web apps and paste it in Excel."
        },
        "description": {
          "kendo-ui": "<p>Having used to the copy-paste functionality available in MS Excel, many users would want to copy grid cell content from web apps and paste in Excel, or some other place for further review, or just to duplicate it.</p> <p>With the Kendo UI grid this is built-in functionality which is supported by setting two properties: <strong>selectable-&gt;multi cell</strong> and <strong>allowCopy-&gt;true</strong>. As simple as that, your users will be able to utilize copy and paste between across their apps, using the browser clipboard for this purpose \"behind the scenes\". </p>"
        }
      },
      {
        "text": "Batch editing",
        "url": "grid/editing",
        "title": {
          "kendo-ui": "jQuery Grid - Batch Editing Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the editing functionality of the jQuery Grid by Kendo UI and learn how you can send changes to the server as a batch."
        },
        "group": "Data Editing",
        "description": {
          "kendo-ui": "<p>In numerous scenarios there's a requirement not only to visualize data in a table structure, but to have the ability to manipulate this data and save changes. </p> <p>The Kendo UI grid widget supports data editing operations (create, update, destroy) via a simple configuration of its data source. All you have to do to enable data editing capabilities for the widget is to:</p> <ul> <li>set the grid's <strong>editable </strong>configuration option</li> <li>declare field definitions through the <strong>DataSource schema</strong></li> <li>configure the DataSource for performing CRUD data operations defining its <strong>transport-&gt;create/update/destroy</strong> attributes</li> </ul> <p>If you want to enable new records insertion, you can do that by enabling the relevant option in the grid toolbar. For deleting items you need to include a delete command column.</p> <p>The focus of this demo is to present how to enable batch editing operations by specifying the <strong>batch-&gt;true</strong> option via the grid's data source settings. </p> <p>More details about the grid editing capabilities can be found in the documentation <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/web/grid/editing\">here</a>.</p>"
        }
      },
      {
        "text": "Batch editing OData-v4",
        "url": "grid/odatav4",

        "title": {
          "kendo-ui": "jQuery Grid - Batch Editing with OData-v4 Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the batch editing feature of a OData-v4 endpoint tied to the jQuery Grid by Kendo UI."
        },
        "description": {
          "kendo-ui": "<p>In numerous scenarios there's a requirement not only to visualize data in a table structure, but to have the ability to manipulate this data and save changes. </p> <p>The Kendo UI grid widget supports data editing operations (create, update, destroy) via a simple configuration of its data source. All you have to do to enable data editing capabilities for the widget is to:</p> <ul> <li>set the grid's <strong>editable </strong>configuration option</li> <li>declare field definitions through the <strong>DataSource schema</strong></li> <li>configure the DataSource for performing CRUD data operations defining its <strong>transport-&gt;create/update/destroy</strong> attributes</li> </ul> <p>If you want to enable new records insertion, you can do that by enabling the relevant option in the grid toolbar. For deleting items you need to include a delete command column.</p> <p>The focus of this demo is to present how to perform all CRUD operaions using a single request just by specifying the <strong>batch-&gt;true</strong> option via the grid's data source settings. </p> <p>More details about the grid editing capabilities can be found in the documentation <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/web/grid/editing\">here</a>.</p>"
        }
      },
      {
        "text": "Inline editing",
        "url": "grid/editing-inline",
        "title": {
          "kendo-ui": "jQuery Grid - Inline Editing Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI enabling you to create, edit, and delete data records inline."
        },
        "description": {
          "kendo-ui": "<p>In numerous scenarios there's a requirement not only to visualize data in a table structure, but to have the ability to manipulate this data and save changes. </p> <p>The Kendo UI grid widget supports data editing operations (create, update, destroy) via a simple configuration of its data source. All you have to do to enable data editing capabilities for the widget is to:</p> <ul> <li>set the grid's <strong>editable </strong>configuration option</li> <li>declare field definitions through the <strong>DataSource schema</strong></li> <li>configure the DataSource for performing CRUD data operations defining its <strong>transport-&gt;create/update/destroy</strong> attributes</li> </ul> <p>If you want to enable new records insertion, you can do that by enabling the relevant option in the grid toolbar. For deleting items you need to include a delete command column.</p> <p>This example aims to illustrate how to perform inline editing by setting the <strong>editable-&gt;inline</strong> option of the grid. </p> <p>More details about the grid editing capabilities can be found in the documentation <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/web/grid/editing\">here</a>.</p>"
        }
      },
      {
        "text": "Popup editing",
        "url": "grid/editing-popup",
        "title": {
          "kendo-ui": "jQuery Grid - Popup Editing Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI and learn how easy it is to edit data records in a popup dialog."
        },
        "description": {
          "kendo-ui": "<p>In numerous scenarios there's a requirement not only to visualize data in a table structure, but to have the ability to manipulate this data and save changes. </p> <p>The Kendo UI grid widget supports data editing operations (create, update, destroy) via a simple configuration of its data source. All you have to do to enable data editing capabilities for the widget is to:</p> <ul> <li>set the grid's <strong>editable </strong>configuration option</li> <li>declare field definitions through the <strong>DataSource schema</strong></li> <li>configure the DataSource for performing CRUD data operations defining its <strong>transport-&gt;create/update/destroy</strong> attributes</li> </ul> <p>If you want to enable new records insertion, you can do that by enabling the relevant option in the grid toolbar. For deleting items you need to include a delete command column.</p> <p>In this demo you can edit or insert new items via a popup form by setting the <strong>editable-&gt;popup</strong> option of the grid. </p> <p>More details about the grid editing capabilities can be found in the documentation <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/web/grid/editing\">here</a>.</p>"
        }
      },
      {
        "text": "Editing custom editor",
        "url": "grid/editing-custom",
        "title": {
          "kendo-ui": "jQuery Grid - Editing with Custom Editor Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the editing functionality of the jQuery Grid by Kendo UI providing the flexibility to further customize data with a custom editor."
        },
        "description": {
          "kendo-ui": "<p>In numerous scenarios there's a requirement not only to visualize data in a table structure, but to have the ability to manipulate this data and save changes. </p> <p>The Kendo UI grid widget supports data editing operations (create, update, destroy) via a simple configuration of its data source. All you have to do to enable data editing capabilities for the widget is to:</p> <ul> <li>set the grid's <strong>editable </strong>configuration option</li> <li>declare field definitions through the <strong>DataSource schema</strong></li> <li>configure the DataSource for performing CRUD data operations defining its <strong>transport-&gt;create/update/destroy</strong> attributes</li> </ul> <p>If you want to enable new records insertion, you can do that by enabling the relevant option in the grid toolbar. For deleting items you need to include a delete command column.</p> <p>This sample demonstrates how to set a custom editor (Kendo UI dropdown list in this case) as grid column editor by specifying the <strong>Category</strong> column's <strong>editor</strong> field. The value of this field points to a JavaScript function which instantiates the column editor for the corresponding column cells.</p> <p>More details about the grid editing capabilities can be found in the documentation <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/web/grid/editing\">here</a>.</p>"
        }
      },
      {
        "text": "Server editing",
        "url": "grid/serverediting",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Custom validator editing",
        "url": "grid/editing-custom-validation",
        "title": {
          "kendo-ui": "jQuery Grid - Custom Validator Editing Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI and learn how to implement custom validation rule."
        },
        "description": {
          "kendo-ui": "<p>In numerous scenarios there's a requirement not only to visualize data in a table structure, but to have the ability to manipulate this data and save changes. </p> <p>The Kendo UI grid widget supports data editing operations (create, update, destroy) via a simple configuration of its data source. All you have to do to enable data editing capabilities for the widget is to:</p> <ul> <li>set the grid's <strong>editable </strong>configuration option</li> <li>declare field definitions through the <strong>DataSource schema</strong></li> <li>configure the DataSource for performing CRUD data operations defining its <strong>transport-&gt;create/update/destroy</strong> attributes</li> </ul> <p>If you want to enable new records insertion, you can do that by enabling the relevant option in the grid toolbar. For deleting items you need to include a delete command column.</p> <p>Here you can see how defining a validation rule via the <strong>schema-&gt;model-&gt;fields-&gt;validation</strong> option of the grid data source forces a check for first capital letter for the Product Name column, when you edit the value in it. </p> <p>More details about the grid editing capabilities can be found in the documentation <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/web/grid/editing\">here</a>.</p>"
        }
      },
      {
        "text": "Virtualization of local data",
        "url": "grid/virtualization-local-data",
        "title": {
          "kendo-ui": "jQuery Grid - Virtualization of Local Data Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI which supports local data virtualization that alleviates any slowdowns when operating with huge volumes of data."
        },
        "group": "Scrolling",
        "description": {
          "kendo-ui": "<p>There are cases when you may need to operate with large amount of data in the grid, and fetching and processing this data at once would impose a performance penalty due to limited browser resources. </p> <p>Luckily, the Kendo UI grid has a solution called data virtualization that alleviates any slowdowns when operating with huge volumes of data. When enabled via the <strong>scrollable-&gt;virtual</strong> configuration option, it displays a vertical scrollbar for the grid content and renders only the number of items set via the<strong> pageSize</strong> property of the grid data source. After you drag the scrollbar and the pageSize is exceeded, it makes automatic requests to retrieve and render the next set of grid rows. </p> <p>Both local and remote data are supported with the grid virtualization feature, whereas in this demo the records are obtained locally.</p><p>Since <strong>R3 2017</strong> Grid Virtual scrolling is compatible with <strong>CRUD operations</strong> (Create, Update, Destroy). In the demo you can see how Virtualization works with Batch, Inline and Popup edit modes.</p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!php",
          "!jsp",
          "!aspnet-core"
        ]
      },
      {
        "text": "Virtualization of remote data",
        "url": "grid/virtualization-remote-data",
        "title": {
          "kendo-ui": "jQuery Grid - Virtualization of Remote Data Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI which supports remote data virtualization that alleviates any slowdowns when operating with huge volumes of data."
        },
        "description": {
          "kendo-ui": "<p>There are cases when you may need to operate with large amount of data in the grid, and fetching and processing this data at once would impose a performance penalty due to limited browser resources. </p> <p>Luckily, the Kendo UI grid has a solution called data virtualization that alleviates any slowdowns when operating with huge volumes of data. When enabled via the <strong>scrollable-&gt;virtual</strong> configuration option, it displays a vertical scrollbar for the grid content and renders only the number of items set via the<strong> pageSize</strong> property of the grid data source. After you drag the scrollbar and the pageSize is exceeded, it makes automatic requests to retrieve and render the next set of grid rows. </p> <p>Both local and remote data are supported with the grid virtualization feature, whereas in this demo the records are obtained from a remote endpoint.</p> <p>&nbsp;</p>"
        }
      },
      {
        "text": "Endless scrolling of local data",
        "url": "grid/endless-scrolling-local",
        "title": {
          "kendo-ui": "jQuery Grid - Endless Scrolling of Local Data Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the endless scrolling functionality of the jQuery Grid by Kendo UI enabling you to bind the widget to local data and append additional pages."
        },
        "description": {
          "kendo-ui": "<p>The endless scrolling functionality enables the Grid widget to display large amounts of data by appending additional pages of data on demand. Loading of new items happens when the scrollbar of the Grid reaches its end. When the data is returned, only the new items will be rendered and appended to the old ones.</p><p>Grid infinite scrolling works with local and remote data. This demo presents binding Grid to local data. In this scenario all data is serialized on the client. When the user scrolls to the end, new items are displayed.</p><p>The endless scroll is compatible with <strong>Grouping</strong>, <strong>Hierarchy</strong> and <strong>Editing</strong>.</p><p>&nbsp;</p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!php",
          "!jsp",
          "!aspnet-core"
        ]
      },
      {
        "text": "Endless scrolling of remote data",
        "url": "grid/endless-scrolling-remote",
        "title": {
          "kendo-ui": "jQuery Grid - Endless Scrolling of Remote Data Demo - Kendo UI "
        },
        "meta": {
          "kendo-ui": "Get started with the endless scrolling functionality of the jQuery Grid by Kendo UI enabling you to bind the widget to remote data and append additional pages."
        },
        "description": {
          "kendo-ui": "<p>The endless scrolling functionality enables the Grid widget to display large amounts of data by appending additional pages of data on demand. Loading of new items happens when the scrollbar of the Grid reaches its end. When the data is returned, only the new items will be rendered and appended to the old ones.</p><p>Grid infinite scrolling works with local and remote data. This demo presents binding Grid to remote data. In this scenario only the first page of data is serialized and rendered on the client. When the user reaches the end of the list, an Ajax request is made to fetch the next portion of data.</p><p>The endless scroll is compatible with <strong>Grouping</strong>, <strong>Hierarchy</strong> and <strong>Editing</strong>.</p><p>&nbsp;</p>"
        }
      },
      {
        "text": "Frozen columns",
        "url": "grid/frozen-columns",
        "title": {
          "kendo-ui": "jQuery Grid - Frozen Columns Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI which supports frozen columns by simply setting the locked attribute of the corresponding column to true."
        },
        "description": {
          "kendo-ui": "<p>There are apps which require to display grids with large number of columns on limited screen estates, and making a small subset of them static when scrolling the rest horizontally to bring them in the viewable area. The concept of pinned columns is mostly known from MS Excel, and many users would like to utilize it in web context as well.</p> <p>The Kendo UI grid widget supports static/frozen columns by a single configuration setting. Simply set the <strong>locked</strong> attribute of the corresponding column to true, and this will bring the column in the locked columns group positioned on the left in the grid. Here locked columns are OrderID and ShipName, while the rest of the columns can be scrolled horizontally. </p>"
        }
      },
      {
        "text": "Filter row",
        "url": "grid/filter-row",
        "title": {
          "kendo-ui": "jQuery Grid - Filter Row Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI and learn how to enable filter row in its header."
        },
        "group": "Filtering",
        "description": {
          "kendo-ui": "<p>With the Kendo UI grid you can enable filter row in its header by setting the grid's <strong>filterable-&gt;mode</strong> property to <strong>row</strong>. Thus based on the data type of the underlying columns data the grid will render textboxes for string values, numeric inputs or date pickers for filtering in the column headers, as illustrated in this example.</p> <p>Additionally, you can specify default filter operator to be applied when the user enters value in the filter textbox and presses Enter or Tab via the keyboard. This can be done using the <strong>filterable-&gt;cell-&gt;operator </strong>attribute of the corresponding column, as demonstrated for the ShipName and Freight columns here.</p> <p>More information on the filtering grid configuration can be found in <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid#configuration-filterable\">this documentation section</a>.</p> <p>&nbsp;</p>"
        }
      },
      {
        "text": "Filter Multi Checkboxes",
        "url": "grid/filter-multi-checkboxes",
        "title": {
          "kendo-ui": "jQuery Grid - Filter Multi Checkboxes Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI and learn how to enable filtering via checkbox list in the Grid filter menu."
        },
        "description": {
          "kendo-ui": "<p>You can enable filtering via checkbox list in the Kendo UI grid filter menu by specifying <strong>filterable-&gt;multi=true</strong> setting for the relevant grid columns you would like to use such a filter for. </p> <p>Furthermore, you have the ability to combine this filter with itemTemplate definition as it is done with the Country column in the second grid in this demo. Thus you can customize the items with checkboxes that will be visualized and available for selection to the end user. </p> <p>More information on the filtering grid configuration can be found in <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid#configuration-filterable\">this documentation section</a>.</p> <p>&nbsp;</p>"
        }
      },
      {
        "text": "Filter menu customization",
        "url": "grid/filter-menu-customization",
        "title": {
          "kendo-ui": "jQuery Grid - Filter Menu Customization Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI and learn how to customize its filter menu."
        },
        "description": {
          "kendo-ui": "<p>In this sample we showcase how you can apply common settings for the Kendo UI grid filter menu configuration, and customize its UI on a per column basis. This is straight-forward and easy using the exposed API for the column menu.</p> <p>First we specify a single filter criterion using the <strong>filterable-&gt;extra=false</strong> setting, and limit the filter operators for string columns to <strong>starts with, equal and not equal </strong>only. Then we define built-in date picker UI to filter the datetime column in the grid, and instantiate Kendo UI AutoComplete and DropDownList for the Title and City columns, respectively. <br /> <br /> To create the dropdown filters, we assign javascript functions to the <strong>filterable-&gt;ui </strong>attributes of the corresponding columns.</p>"
        }
      },
      {
        "text": "Sorting",
        "url": "grid/sorting",
        "title": {
          "kendo-ui": "jQuery Grid - Sorting Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the sorting functionality of the jQuery Grid by Kendo UI and learn how to sort single and multiple data-bound columns."
        },
        "group": "Functionality",
        "description": {
          "kendo-ui": "<p>This example demonstrates how to enable sorting for the Kendo UI grid. Since this functionality is built-in, all you have to do is to set the sorting configuration via the <strong>sortable </strong>grid attribute. Supported sorting modes are single and multiple.</p> <p>Check the relevant <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid#configuration-sortable\" target=\"_blank\">sorting API section</a> for more details.</p> <p>Check the <a href=\"http://docs.telerik.com/kendo-ui/controls/data-management/grid/how-to/Layout/add-background-sorted-columns-LESS-themes\" target=\"_blank\">Add a Background to the Sorted Columns with LESS Themes</a> How To article</p>"
        }
      },
      {
        "text": "Selection",
        "url": "grid/selection",
        "title": {
          "kendo-ui": "jQuery Grid - Selection Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI supporting selection of a single row or multiple rows."
        },
        "description": {
          "kendo-ui": "<p>There are situations when you would like to enable the end user to select rows or cells in the grid table, and process data from them or make calculations based on this selection. The Kendo UI grid supports selection by specifying its configuration via its selectable attribute. Accepted values are:</p> <ul> <li>true (enables row selection)</li> <li>row</li> <li>cell</li> <li>multiple, row</li> <li>multiple, cell</li> </ul><p>As of <strong>R2 2017</strong> you can persist the row selection after data operations by setting the <strong>persistSelection</strong> property to <strong>true</strong>.</p> <p>Further details are available in the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid#configuration-selectable\" target=\"_blank\">selectable API section</a> of the docs.</p>"
        }
      },
      {
        "text": "Checkbox selection",
        "url": "grid/checkbox-selection",
        "title": {
          "kendo-ui": "jQuery Grid - Checkbox Selection Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI and learn how to enable the built-in checkbox column and selection persistence of the Grid."
        },
        "description": {
          "kendo-ui": "<p>As of R2 2017 SP1, а checkbox based selection is provided by the grid. To enable this functionality you should define selectable column as shown below:</p> <p>&nbsp;columns: [{ selectable: true }]</p> <p>This column allows you to select grid rows automatically after changing the status of the checkbox to checked. A checkbox is also displayed in the column header to toggle the checked/selected state of all rows in the current page.</p> <p>Additionally in the demo you can see how to persist selected items across pages. This is achieved  by setting the <strong>persistSelection</strong> property to <strong>true</strong>.</p>"
        }
      },
      {
        "text": "Aggregates",
        "url": "grid/aggregates",
        "title": {
          "kendo-ui": "jQuery Grid - Aggregates Demo - Kendo UI"
        },
        "updated":  true,
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI allowing you to see the results from aggregate calculations at the bottom of the grid groups or columns."
        },
        "description": {
          "kendo-ui": "<p>Oftentimes when displaying numbers in the grid, users would like to be able to see the results from aggregate calculations at the bottom of the grid groups or columns. </p><p>This is a no-brainer with the Kendo UI grid since it has support for the mostly used aggregate functions. All you need to do is specify the pertinent aggregate function name via the<strong> columns-&gt;aggregates </strong>, <strong>groupFooterTemplate</strong>, <strong>groupHeaderColumnTemplate</strong> or <strong>footerTemplate</strong> attributes of the grid, and the <strong>group </strong> and <strong>aggregate </strong>fields of its data source instance. Review the code snippets in the demo for further details.</p><p>Please check the <a href=\"https://docs.telerik.com/kendo-ui/controls/data-management/grid/Templates/group-templates\" target=\"_blank\">Group Templates</a> article to learn more about different types of group templates available for the Kendo UI Grid widget.</p>"
        }
      },
      {
        "text": "Server aggregates",
        "url": "grid/serveraggregates",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Paging",
        "url": "grid/paging",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Hierarchy",
        "url": "grid/hierarchy",
        "title": {
          "kendo-ui": "jQuery Grid - Hierarchy Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI allowing you to implement hierarchy in order to visualize relations between parent and child records."
        },
        "description": {
          "kendo-ui": "<p>There are projects which require to display table data in hierarchical-like fashion, in order to visualize relations between parent and child records. <br /> <br /> This is where the Kendo UI grid hierarchy feature comes into play. To implement hierarchy with the grid widget, you need to wire its <strong>detailInit </strong>event and filter the records in the child table based on the parent key field value. Note that the <strong>e.data.[keyFieldValue]</strong> argument holds the actual key value from the parent record.</p> <p>Additional info about the detailInit event args is available in the <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid#events-detailInit\">API docs</a>. </p>"
        }
      },
      {
        "text": "Server hierarchy",
        "url": "grid/serverhierarchy",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Persist state",
        "url": "grid/persist-state",
        "title": {
          "kendo-ui": "jQuery Grid - Persist State Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI and learn how to use the setOptions and getOptions methods to manipulate the state of the widget."
        },
        "description": {
          "kendo-ui": "<p>A common requirement for web apps is to save the user customization and settings when interacting with your app, and then restore them once he/she logs back at some point in the future. </p> <p>The Kendo UI grid exposes the capability to save and restore settings that were previously applied to its structure using the <strong>getOptions </strong>and <strong>setOptions </strong>methods from its API. These methods allow you to serialize the grid current state, when needed, and then recover it at certain point in time. In this particular example we use localStorage key/value pair to save and load grid settings. </p> <p>Further info on the setOptions and getOptions methods is available in <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid#methods-setOptions\">this API section</a>. </p>"
        }
      },
      {
        "text": "Pager Visibility",
        "url": "grid/pager-visibility",
        "title": {
          "kendo-ui": "jQuery Grid - Pager Visibility Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI allowing you to hide the pager when the total amount of items are less than the pageSize."
        },
        "description": {
          "kendo-ui": "<p>It often turns out that all items in the gird can fit into a single page and then showing the pager might not be necessary.</p><p> Starting from Kendo UI 2017 R3 release grid toggles the pager visibility using the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid#configuration-pageable.alwaysVisible\" target=\"_blank\">pageable.alwaysVisible</a> configuration property. By default the grid will show the pager even when total amount of items in the DataSource is less than the pageSize.</p><p> If value is set to <strong>false</strong> the behavior will be as follows:</p><ul><li>when the total amount of items initially set in the DataSource is less than the pageSize number the pager will be hidden.</li><li>when the total amount of items initially set in the DataSource is greater than or equal to the pageSize number the pager will be shown.</li><li>when the total amount of items in the DataSource becomes less than the pageSize number (after delete, filter operation or pageSize change) the pager will be hidden.</li><li>when the total amount of items in the DataSource becomes greater than or equal to the pageSize number (after an insert, filter operation or pageSize change) the pager will be shown.</li></ul><p>In the demo alwaysVisible checkbox enables/disables the pageable.alwaysVisible option for the grid.</p>"
        }
      },
      {
        "text": "Responsive Columns",
        "url": "grid/responsive-columns",
        "new": "true",
        "title": {
          "kendo-ui": "Kendo Grid Responsive Columns Demo"
        },
        "meta": {
          "kendo-ui": "This demo shows how to configure the Kendo UI Grid to control the visibility of the columns, use their media property."
        },
        "description": {
          "kendo-ui": "<p>To control the visibility of the columns, use their <a target=\"_blank\" href=\"https://docs.telerik.com/kendo-ui/api/javascript/ui/grid/configuration/columns.media\">media</a> property. The property accepts valid strings for the <a target=\"_blank\" href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia\">matchMedia</a> browser API and toggles the visibility of the columns based on the media queries.</p>"
        }
      },
      {
        "text": "Toolbar template",
        "url": "grid/toolbar-template",
        "title": {
          "kendo-ui": "jQuery Grid - Toolbar Template Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI and learn how to add custom toolbars to the grid and create toolbar templates."
        },
        "group": "Templates",
        "description": {
          "kendo-ui": "<p>The Kendo UI grid exposes the option to define a template for the content of its toolbar, which can vary based on your requirements or preferences. </p> <p>Here we present a sample implementation of a toolbar template incorporating a Kendo UI dropdown to list the records in the grid by category. The dropdown is populated with the list of categories and the filter is applied on its change event by invoking the <strong>grid.dataSource.filter(params) </strong>method from the API. <br /> <br /> Note that the toolbar template is instantiated by calling the <strong>kendo.template </strong>method and assigning the returned value to the <strong>toolbar </strong>attribute of the grid instance. </p>"
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "Column header template",
        "url": "grid/headertemplate",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Row template",
        "url": "grid/rowtemplate",
        "title": {
          "kendo-ui": "jQuery Grid - Row Template Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI allowing flexible customization of its rows in terms of layout and appearance by exposing row template feature."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI grid allows flexible customization of its rows in terms of layout and appearance by exposing row template feature for this purpose.</p> <p>In this example we present how you can specify your own custom layout for the rows in the grid using images and property bindings from its underlying data source. The templates are defined via script tags with ids associated with rendered html table row elements in the grid.<br /> <br /> Note that the row and altrow templates are instantiated by calling the <strong>kendo.template </strong>method and assigning the returned value to the <strong>rowTemplate </strong>and <strong>altRowTemplate </strong>attributes of the grid instance. </p>"
        }
      },
      {
        "text": "Detail template",
        "url": "grid/detailtemplate",
        "title": {
          "kendo-ui": "jQuery Grid - Detail Template Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI and learn how to utilize the detail template feature when implementing hierarchical table presentation."
        },
        "description": {
          "kendo-ui": "<p>This example demonstrates how you can utilize the detail template feature of the Kendo UI grid when implementing hierarchical table presentation. The key steps here are to:</p> <ul> <li> specify <strong>detailTemplate</strong> definition for the grid</li> <li>intercept its <strong>detailInit </strong>event in order to populate the details for the expanded item </li> </ul> <p>In the scenario presented above we inject a tabstrip widget with two tabs in the detail template - the first holding the orders of the pertinent employee, and the second containing the contact information of that employee. The orders are populated inside the detailInit event handler applying filter by EmployeeID of the expanded grid row.</p>"
        }
      },
      {
        "text": "Server detail template",
        "url": "grid/serverdetails",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Server row template",
        "url": "grid/serverrowtemplate",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Multi-column headers",
        "url": "grid/multicolumnheaders",
        "title": {
          "kendo-ui": "jQuery Grid - Multi-Column Headers Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI which supports multi-column headers by specifying column groups which incorporate inner column structures."
        },
        "group": "Columns",
        "description": {
          "kendo-ui": "<p>The Kendo UI grid supports multi-column headers by specifying column groups which incorporate inner column structures. Here the Contact Info and Location columns have nested columns, depicted via an array of column definitions. </p> <p>Operations like sorting and filtering are supported on each column level, regardless of the chosen multi-header pattern.</p>"
        }
      },
      {
        "text": "Column reordering",
        "url": "grid/column-reordering",
        "title": {
          "kendo-ui": "jQuery Grid - Column Reordering Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI and learn how to enable column reordering with the help of a simple configuration setting."
        },
        "description": {
          "kendo-ui": "<p>You can enable column reordering for the Kendo UI grid via a simple configuration setting. All you have to do is set its <strong>reorderable</strong> attribute to <strong>true</strong>, which will automatically make its columns draggable and reorderable, as illustrated in this example.</p>"
        }
      },
      {
        "text": "Column resizing",
        "url": "grid/column-resizing",
        "title": {
          "kendo-ui": "jQuery Grid - Column Resizing Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI and learn how resizing of columns can be enabled in order to change the width or height of a column."
        },
        "description": {
          "kendo-ui": "<p>You can enable column resizing for the Kendo UI grid via a simple configuration setting. All you have to do is set its <strong>resizable</strong> attribute to <strong>true</strong>, which will make its columns resizable by displaying drag handles/hints when you hover in between their headers. </p>"
        }
      },
      {
        "text": "Column menu",
        "url": "grid/column-menu",
        "title": {
          "kendo-ui": "jQuery Grid - Column Menu Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI with built-in support for triggering column operations via a dedicated menu."
        },
        "description": {
          "kendo-ui": "<p>When you interact with grid columns, you may want to be able to trigger column operations via a dedicated menu for this purpose.<br /> <br /> The Kendo UI grid has built-in support for such a feature, which can be enabled via a single configuration setting, i.e. <strong>columnMenu=true</strong>. Thus an option to display a column menu will be rendered in the grid column headers, which when activated allows&nbsp; you to sort, filter or change the visibility of the column. <br /> <br /> Furthermore, this menu takes into account whether a certain column operation is disabled via the column definition, and excludes the corresponding UI from its rendering. In this showcase this is done for the ShipAddress column where filtering is disabled. <br /> <br /> Further information about the available columnMenu API can be collected from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid#configuration-columnMenu\">this article</a>.</p>"
        }
      },
      {
        "text": "Column Settings",
        "url": "grid/columnsettings",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "ForeignKey column",
        "url": "grid/foreignkeycolumn",
        "title": {
          "kendo-ui": "jQuery Grid - Foreign Key Column Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI and learn how to use the foreign key column functionality to cross-reference tables."
        },
        "description": {
          "kendo-ui": "<p>In this demo we showcase how to implement foreign key column in the Kendo UI grid, hosting dropdown list editor for data editing. </p> <p>The column in question is defined via a key field (CategoryID). Through the column definition you set the key field as <strong>Field </strong>attribute, and the <strong>values </strong>attribute points to the source data for the items displayed in the dropdown list editor of that column. The editor items should have matching values of the same type as the key field (CategoryID in this case).</p> <p>See the <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid#configuration-columns.values\">relevant API section</a> of the docs for more info.</p>"
        }
      },
      {
        "text": "Custom command",
        "url": "grid/custom-command",
        "title": {
          "kendo-ui": "jQuery Grid - Custom Command Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI and learn how to implement custom command handling for records."
        },
        "description": {
          "kendo-ui": "<p>This sample represents how you can implement custom command handling for records in the Kendo UI grid.&nbsp; <br /> <br /> For this purpose you need to include a command column in the grid which will render a button in the column cells that triggers the command. Through the column definition you can specify the text for the button and wire its click event to a JavaScript function, which receives the corresponding grid data item as an argument. Then in this function definition you can handle the command.</p> <p>In this demo we use Window widget instance to display details about the chosen row (Person) in the grid.</p> More information about handling custom commands can be found in <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/grid#configuration-columns.command\">this section</a> of the docs."
        }
      },
      {
        "text": "Events",
        "url": "grid/events",
        "title": {
          "kendo-ui": "jQuery Grid - Events Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI which exposes rich API and events providing easy configuration or extension points for custom functionality."
        },
        "group": "API",
        "description": {
          "kendo-ui": "<p>The Kendo UI grid exposes rich API and events which provide easy configuration or extension points for custom functionality on top of the built-in features. </p> <p>This particular example shows how you can intercept the change, dataBinding and dataBound events of the grid to output messages in the console when these events are raised. They can also be hooked for customizations or to execute custom logic, if necessary.</p> <p>Find more info about the supported grid events by clicking the API Reference button below.</p>"
        }
      },
      {
        "text": "API",
        "url": "grid/api",
        "title": {
          "kendo-ui": "jQuery Grid - API Demo - Kendo UI"
        },
        "updated": true,
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI and see how API Functions can manipulate the content and behavior of the widget."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI grid exposes rich API and events which provide easy configuration or extension points for custom functionality on top of the built-in features. </p> <p>In this sample we demonstrate how you can collect numeric value entered by the user and use this value to select, expand/collapse grid rows or resize columns using the select, expandGroup/collapseGroup and resizeColumn methods of the widget. </p> <p>Find more info about the supported grid events by clicking the API Reference button below.</p>"
        }
      },
      {
        "text": "Globalization",
        "url": "grid/globalization",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Localization",
        "url": "grid/localization",
        "title": {
          "kendo-ui": "jQuery Grid - Localization Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI which supports localization of the text in its UI elements."
        },
        "group": "Accessibility and Internationalization",
        "description": {
          "kendo-ui": "<p>The Kendo UI grid supports localization for the texts in its UI elements. You can either define the texts for these elements using the respective messages configuration via the API, or employ culture files for this purpose (which are shipped with the product distribution).</p> <p>Further information on how to our grid widget supports localization can be found in these articles: <br /> <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/web/grid/localization\">Localization via messages</a><br /> <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/globalization/overview\">Localization with culture files</a> </p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!php",
          "!jsp",
          "!aspnet-core"
        ]
      },
      {
        "text": "RTL support",
        "url": "grid/right-to-left-support",
        "title": {
          "kendo-ui": "jQuery Grid - Right-to-Left Support Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI which supports right-to-left languages and rendering via built-in configuration."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI grid supports right-to-left languages and rendering via built-in configuration. All you have to do is to register the <strong>kendo.rtl.[min].css</strong> file and wrap the grid in a container element with <strong>k-rtl </strong>class set for it, as demonstrated in this example.</p> <p>More information on the right-to-left support of the Kendo UI widgets can be extracted from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/accessibility/supporting-rtl-languages\">this topic</a>.</p>"
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "grid/keyboard-navigation",
        "title": {
          "kendo-ui": "jQuery Grid - Keyboard Navigation Demo - Kendo UI"
        },
        "meta": {
          "kendo-ui": "Get started with the jQuery Grid by Kendo UI and learn how to use different keyboard combinations to navigate in the component."
        },
        "description": {
          "kendo-ui": "<p>This demo illustrates the keyboard support of the Kendo UI grid widget, which provides quick access to available grid features without the need to interact with mouse. Furthermore, applications which must cover accessibility standards for people with disabilities can directly benefit from it. </p> <p>You can focus the grid using the <strong>ALT + W</strong> key combination, and then use the keyboard key shortcuts visualized above to interact with the widget. </p> <p>Further details about the keyboard support of the Kendo UI grid widgets can be found in the <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/accessibility/keyboard-support\">Accessibility section</a> of the documentation.</p>"
        }
      }
    ],
    "category": "Data Management"
  },
  {
    "text": "Spreadsheet",
    "name": "spreadsheet",
    "component": "spreadsheet",
    "pro": "true",
    "api": {
      "all": "web/spreadsheet",
      "php-ui": "api/php/Kendo/UI/Spreadsheet"
    },
    "documentation": {
      "kendo-ui": "getting-started/web/spreadsheet/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/spreadsheet/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/spreadsheet/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/spreadsheet",
      "jsp-ui": "jsp/spreadsheet",
      "php-ui": "php/spreadsheet"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/spreadsheet",
      "jsp-ui": "jsp/spreadsheet",
      "php-ui": "php/spreadsheet"
    },
    "spriteCssClass": "spreadsheetIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "spreadsheet/index",
        "title": {
          "kendo-ui": "jQuery Spreadsheet control example | Kendo UI Spreadsheet Demos"
        },
        "meta": {
          "kendo-ui": "This demo for Kendo UI jQuery-based Spreadsheet component shows how you can make your static HTML tables and raw data much more interactive to match your modern web app."
        }
      },
      {
        "text": "Sorting and Filtering",
        "url": "spreadsheet/sorting-filtering",
        "title": {
          "kendo-ui": "Sorting and filtering"
        },
        "meta": {
          "kendo-ui": "This demo shows the sorting and filtering support that Kendo UI Spreadsheet provides"
        }
      },
      {
        "text": "Server Import/Export",
        "url": "spreadsheet/server-side-import-export",
        "title": {
          "kendo-ui": "Kendo Spreadsheet integration with the Telerik Document Processing Library"
        },
        "meta": {
          "kendo-ui": "Export to and import from Microsoft Excel (.xlsx), CSV, Text and JSON files"
        },
        "packages": [
          "!offline",
          "!aspnet-core"
        ],
        "sources": {
          "kendo-ui": [
            {
              "name": "Sheets settings",
              "url": "~/content/web/spreadsheet/prices.json"
            }
          ]
        }
      },
      {
        "text": "Server Export to PDF",
        "url": "spreadsheet/server-side-pdf-export",
        "title": {
          "kendo-ui": "Kendo Spreadsheet PDF Export with the Telerik Document Processing Library"
        },
        "meta": {
          "kendo-ui": "Export to print-ready PDF files"
        },
        "packages": [
          "!offline",
          "!aspnet-core"
        ]
      },
      {
        "text": "DataSource binding",
        "url": "spreadsheet/datasource",
        "title": {
          "kendo-ui": "DataSource binding"
        },
        "meta": {
          "kendo-ui": "This demo shows the integration with the DataSource component that Kendo UI Spreadsheet provides"
        }
      },
      {
        "text": "Disabled cells",
        "url": "spreadsheet/disabled-cells",
        "title": {
          "kendo-ui": "Disabled cells"
        },
        "meta": {
          "kendo-ui": "This demo shows how to disable/enable editing in Kendo UI Spreadsheet provides for particular range"
        }
      },
      {
        "text": "Custom cell editors",
        "url": "spreadsheet/custom-editors",
        "title": {
          "kendo-ui": "Custom editors"
        },
        "meta": {
          "kendo-ui": "This demo shows how to define your own custom cell editors"
        }
      },
      {
        "text": "Events",
        "url": "spreadsheet/events",
        "title": {
          "kendo-ui": "Events in Kendo UI Spreadsheet widget"
        },
        "meta": {
          "kendo-ui": "This example shows events which are triggered in Kendo UI Spreadsheet widget."
        }
      },
      {
        "text": "Validation",
        "url": "spreadsheet/validation",
        "title": {
          "kendo-ui": "Data validation in Kendo UI Spreadsheet widget"
        },
        "meta": {
          "kendo-ui": "This example shows the data validation in Kendo UI Spreadsheet widget."
        }
      }
    ],
    "category": "Data Management"
  },
  {
    "text": "ListBox",
    "name": "listbox",
    "component": "listbox",
    "api": {
      "all": "web/listbox"
    },
    "documentation": {
      "kendo-ui": "controls/editors/listbox/overview",
      "jsp-ui": "api/jsp/listbox/draggable",
      "php-ui": "api/php/Kendo/UI/ListBox"
    },
    "forum": {
      "kendo-ui": "kendo-ui/listbox",
      "jsp-ui": "jsp/listbox",
      "php-ui": "php/listbox"
    },
    "sources": {
      "kendo-ui": [
        {
          "name": "Sample service",
          "url": "~/content/service.html"
        }
      ]
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/listbox",
      "jsp-ui": "jsp/listbox",
      "php-ui": "php/listbox"
    },
    "spriteCssClass": "listBoxIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "listbox/index",
        "title": {
          "kendo-ui": "jQuery ListBox control example| KendoListBox Demo"
        },
        "meta": {
          "kendo-ui": ""
        },
        "description": {
          "kendo-ui": "<p>The <strong>Kendo UI ListBox</strong> is a widget that displays a list of items. It allows for multiple selection of items, reorder and transfer between two listboxes. Drag and drop is fully supported as well. You can easily control the appearance by arranging the buttons in different layouts or changing their text.</p><br /><p><strong>Key Features</strong></p> <ul style=\"list-style-type: disc;\"><li>Single or Multiple selection</li><li>Reordering of selected items</li><li>Drag & Drop functionality</li><li>Item templates</li><li>Connecting multiple ListBox widgets</li><li>Built-in themes</li><li>Accessibility, keyboard navigation and RTL Support</li></ul>"
        }
      },
      {
        "text": "Drag & Drop",
        "url": "listbox/drag-and-drop",
        "title": {
          "kendo-ui": "ListBox Drag & drop"
        },
        "meta": {
          "kendo-ui": ""
        }
      },
      {
        "text": "Templates",
        "url": "listbox/templates",
        "title": {
          "kendo-ui": "ListBox templates"
        },
        "meta": {
          "kendo-ui": ""
        }
      },
      {
        "text": "Events",
        "url": "listbox/events",
        "title": {
          "kendo-ui": "ListBox Events"
        },
        "meta": {
          "kendo-ui": ""
        }
      },
      {
        "text": "API",
        "url": "listbox/api",
        "title": {
          "kendo-ui": "API Functions Demo for Kendo UI ListBox"
        },
        "meta": {
          "kendo-ui": "API Functions Demo for Kendo UI ListBox"
        }
      },
      {
        "text": "RTL support",
        "url": "listbox/right-to-left-support",
        "title": {
          "kendo-ui": "RTL support in Kendo UI ListBox widget"
        },
        "meta": {
          "kendo-ui": "This demo shows how the right-to-left feature is supported in Kendo UI ListBox component."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "listbox/keyboard-navigation",
        "title": {
          "kendo-ui": "Keyboard navigation in Kendo UI ListBox widget"
        },
        "meta": {
          "kendo-ui": "In this example we will look at the supported keys and user actions in Kendo UI ListBox control."
        }
      },
      {
        "text": "MVVM",
        "url": "listbox/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI ListBox"
        },
        "meta": {
          "kendo-ui": "MVVM support in Kendo UI ListBox"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "listbox/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI ListBox"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI ListBox"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "ListView",
    "name": "listview",
    "component": "listview",
    "api": { "all": "web/listview" },
    "documentation": {
      "kendo-ui": "getting-started/web/listview/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/listview/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/listview/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/listview",
      "jsp-ui": "jsp/listview",
      "php-ui": "php/listview"
    },
    "sources": {
      "kendo-ui": [
        {
          "name": "Sample service",
          "url": "~/content/service.html"
        }
      ]
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/listview",
      "jsp-ui": "jsp/listview",
      "php-ui": "php/listview"
    },
    "spriteCssClass": "listViewIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "listview/index",
        "title": {
          "kendo-ui": "jQuery ListView control example| KendoListView Demo"
        },
        "meta": {
          "kendo-ui": "This KendoListView example demonstrates the basic functionality of the widget. With jQuery-based ListView widget in Kendo UI, you can specify custom layout for the items in the control."
        }
      },
      {
        "text": "Binding to remote data",
        "url": "listview/remote-data-binding",
        "title": {
          "kendo-ui": "Example for Jquery Listview binding to remote data | Kendo UI demos"
        },
        "meta": {
          "kendo-ui": "This Kendo UI ListView demo shows how the control can be bound to remote data by using Kendo UI DataSource component."
        }
      },
      {
        "text": "Custom data source",
        "url": "listview/custom-datasource",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Editing",
        "url": "listview/editing",
        "title": {
          "kendo-ui": "Editing records in Kendo UI ListView widget"
        },
        "meta": {
          "kendo-ui": "This example demonstrates the option to easily edit records in Kendo UI ListView widget. Learn how to edit records and manipulate the behavior of the contents."
        }
      },
      {
        "text": "Selection",
        "url": "listview/selection",
        "title": {
          "kendo-ui": "Items selection demo for Kendo UI ListView widget"
        },
        "meta": {
          "kendo-ui": "This demo shows items in KendoListView can be selected. Find how to select multiple items and configure the behavior of the widget."
        }
      },
      {
        "text": "RTL support",
        "url": "listview/right-to-left-support",
        "title": {
          "kendo-ui": "RTL support in Kendo UI ListView"
        },
        "meta": {
          "kendo-ui": "This demo shows how the right-to-left feature is supported in Kendo UI ListView component."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "listview/keyboard-navigation",
        "title": {
          "kendo-ui": "Keyboard navigation in Kendo UI ListView widget"
        },
        "meta": {
          "kendo-ui": "In this example we will look at the supported keys and user actions in Kendo UI ListView control."
        }
      },
      {
        "text": "MVVM",
        "url": "listview/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI ListView"
        },
        "meta": {
          "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI ListView"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "listview/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI ListView"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI ListView"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Data Management"
  },
  {
    "text": "PivotGrid",
    "name": "pivotgrid",
    "component": "pivotgrid",
    "pro": "true",
    "api": { "all": "web/pivotgrid" },
    "documentation": {
      "kendo-ui": "getting-started/web/pivotgrid/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/pivotgrid/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/pivotgrid/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/pivotgrid",
      "jsp-ui": "jsp/pivotgrid",
      "php-ui": "php/pivotgrid"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/pivotgrid",
      "jsp-ui": "jsp/pivotgrid",
      "php-ui": "php/pivotgrid"
    },
    "spriteCssClass": "pivotGridIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "pivotgrid/index",
        "title": {
          "kendo-ui": "jQuery PivotGrid control example | Kendo UI PivotGrid Demos"
        },
        "meta": {
          "kendo-ui": "This demo for Kendo UI jQuery-based PivotGrid component shows how you can make a data summarization tool."
        }
      },
      {
        "text": "KPI measures",
        "url": "pivotgrid/kpi",
        "title": {
          "kendo-ui": "Define KPI measures in Kendo UI PivotGrid"
        },
        "meta": {
          "kendo-ui": "This demo for Kendo UI jQuery-based PivotGrid component shows how you can define KPI measures."
        }
      },
      {
        "text": "Remote binding",
        "url": "pivotgrid/remote-flat-data-binding",
        "title": {
          "kendo-ui": "Binding Pivot Grid to flat remote data"
        },
        "sources": {
          "kendo-ui": [
            {
              "name": "Sample service",
              "url": "~/content/service.html"
            }
          ]
        },
        "meta": {
          "kendo-ui": "This demo for Kendo UI jQuery-based PivotGrid component shows how you can poplate the widget with remote flat data."
        }
      },
      {
        "text": "Local binding",
        "url": "pivotgrid/local-flat-data-binding",
        "title": {
          "kendo-ui": "Binding Pivot Grid to local data"
        },
        "meta": {
          "kendo-ui": "This demo for Kendo UI jQuery-based PivotGrid component shows how you can poplate the widget with local flat data."
        }
      },
      {
        "text": "Templates",
        "url": "pivotgrid/templates",
        "title": {
          "kendo-ui": "Customizing Pivot Grid apperience"
        },
        "meta": {
          "kendo-ui": "This demo for Kendo UI jQuery-based PivotGrid component shows how you can customize the widget apperience."
        }
      },
      {
        "text": "Export to Excel",
        "url": "pivotgrid/excel-export",
        "title": {
          "kendo-ui": "Exporting to MS Excel"
        },
        "meta": {
          "kendo-ui": "Export Kendo UI PivotGrid as Microsoft Excel file"
        },
        "packages": [
          "!offline"
        ]
      },
      {
        "text": "Export to PDF",
        "url": "pivotgrid/pdf-export",
        "title": {
          "kendo-ui": "Exporting to PDF"
        },
        "meta": {
          "kendo-ui": "Export Kendo UI PivotGrid as PDF"
        },
        "packages": [
          "!offline"
        ]
      },
      {
        "text": "AngularJS",
        "url": "pivotgrid/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI PivotGrid"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI PivotGrid"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Data Management"
  },
  {
    "text": "MaskedTextBox",
    "name": "maskedtextbox",
    "component": "maskedtextbox",
    "api": { "all": "web/maskedtextbox" },
    "documentation": {
      "kendo-ui": "getting-started/web/maskedtextbox/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/maskedtextbox/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/maskedtextbox/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/maskedtextbox",
      "jsp-ui": "jsp/maskedtextbox",
      "php-ui": "php/maskedtextbox"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/maskedtextbox",
      "jsp-ui": "jsp/maskedtextbox",
      "php-ui": "php/maskedtextbox"
    },
    "spriteCssClass": "maskedtextboxIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "maskedtextbox/index",
        "title": {
          "kendo-ui": "Primary features of Kendo UI Mask Input | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "This demo shows the core functionality of KendoMaskedTextBox component."
        }
      },
      {
        "text": "Events",
        "url": "maskedtextbox/events",
        "title": {
          "kendo-ui": "Events in Kendo UI MaskedTextBox widget"
        },
        "meta": {
          "kendo-ui": "This example shows events which are triggered in Kendo UI MaskedTextBox widget."
        }
      },
      {
        "text": "API",
        "url": "maskedtextbox/api",
        "title": {
          "kendo-ui": "API Functions Demo for KendoMaskedTextBox"
        },
        "meta": {
          "kendo-ui": "This demo shows specific API functions for KendoMaskedTextBox component."
        }
      },
      {
        "text": "Globalization",
        "url": "maskedtextbox/globalization",
        "title": {
          "kendo-ui": "Globalization Demo for KendoMaskedTextBox"
        },
        "meta": {
          "kendo-ui": "This demo shows KendoMaskedTextBox globalization support for decimal point, thousand separator and currency symbol."
        }
      },
      {
        "text": "RTL support",
        "url": "maskedtextbox/right-to-left-support",
        "title": {
          "kendo-ui": "RTL support in Kendo UI MaskedTextBox widget"
        },
        "meta": {
          "kendo-ui": "This demo shows how right-to-left input is implemented in Kendo UI MaskedTextBox component to ensure the satisfaction of RTL language users."
        }
      },
      {
        "text": "MVVM",
        "url": "maskedtextbox/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI MaskedTextBox"
        },
        "meta": {
          "kendo-ui": "Enabled, events, value and visible MVVM binding support in Kendo UI MaskedTextBox"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "Validation",
        "url": "maskedtextbox/validation",
        "title": {
          "kendo-ui": "Validation Demo for Kendo UI MaskedTextBox"
        },
        "meta": {
          "kendo-ui": "This demo shows how to validate an incomplete widget value"
        }
      },
      {
        "text": "AngularJS",
        "url": "maskedtextbox/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI MaskedTextBox"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI MaskedTextBox"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "MediaPlayer",
    "name": "mediaplayer",
    "component": "mediaplayer",
    "api": { "all": "web/mediaplayer" },
    "documentation": {
      "kendo-ui": "getting-started/web/mediaplayer/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/mediaplayer"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/mediaplayer"
    },
    "spriteCssClass": "mediaPlayerIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "mediaplayer/index",
        "title": {
          "kendo-ui": "jQuery MediaPlayer control example | KendoMediaPlayer Demo"
        },
        "meta": {
          "kendo-ui": "This KendoMediaPlayer example demonstrates the basic functionality of the widget. With jQuery-based MediaPlayer widget in Kendo UI, you can add media content to your web site"
        },
        "description": {
          "kendo-ui": "<p>The <strong>Kendo UI MediaPlayer</strong> widget plays video files from static sources or streams online YouTube videos and enriches your website with dynamic content in a user-friendly interface. It provides a styled video UI functionality by using the HTML5 <code>&ltvideo&gt</code> element and brings powerful media capabilities to your applications.</p>"
        }
      },
      {
        "text": "Playlist",
        "url": "mediaplayer/playlist",
        "title": {
          "kendo-ui": "jQuery MediaPlayer control with ListView as Playlist | KendoMediaPlayer Demo"
        },
        "meta": {
          "kendo-ui": "This example of KendoMediaPlayer demonstrates how to use ListView as playlist."
        },
        "description": {
          "kendo-ui": "<p>The <strong>MediaPlayer</strong> widget provides convenient API to change its source dynamically and dictate the flow of the video. This sample uses a ListView widget to create a practical Playlist which displays the available videos right next to the MediaPlayer element.</p>"
        }
      },
      {
        "text": "Events",
        "url": "mediaplayer/events",
        "title": {
          "kendo-ui": "Kendo UI jQuery KendoMediaPlayer Events Sample | KendoMediaPlayer Demos"
        },
        "meta": {
          "kendo-ui": "This sample shows KendoMediaPlayer events which are enabled and the demo source code guides you how you can handle the events in your media player."
        }
      },
      {
        "text": "API",
        "url": "mediaplayer/api",
        "title": {
          "kendo-ui": "API functions demo for KendoMediaPlayer"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how API functions of KendoMediaPlayer widget operate and how you can use them in your project."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "mediaplayer/keyboard-navigation",
        "title": {
          "kendo-ui": "Keyboard Support demo for KendoMediaPlayer"
        },
        "meta": {
          "kendo-ui": "This demo demonstrates the built-in Keyboard Shortcuts provided by the KendoMediaPlayer widget to ease the user navigation."
        }
      }
    ],
    "category": "Media"
  },
  {
    "text": "Menu",
    "name": "menu",
    "component": "menu",
    "api": { "all": "web/menu" },
    "documentation": {
      "kendo-ui": "getting-started/web/menu/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/menu/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/menu/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/menu",
      "jsp-ui": "jsp/menu",
      "php-ui": "php/menu"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/menu",
      "jsp-ui": "jsp/menu",
      "php-ui": "php/menu"
    },
    "spriteCssClass": "menuIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "menu/index",
        "title": {
          "kendo-ui": "Basic usage of Kendo UI Menu Navigation widget | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "In this Kendo UI Menu demo we will demonstrates the rich features of the component and its basic usage for your app."
        }
      },
      {
        "text": "Images",
        "url": "menu/images",
        "title": {
          "kendo-ui": "Images in KendoMenu control | Kendo UI Demo"
        },
        "meta": {
          "kendo-ui": "This KendoMenu example shows the feature which allows you to use menu with images. They can be loaded from a specific URL or be arranged in image sprite CSS class."
        }
      },
      {
        "text": "Direction",
        "url": "menu/direction",
        "title": {
          "kendo-ui": "Kendo UI Menu direction demo"
        },
        "meta": {
          "kendo-ui": "This demo shows how the pop-up direction of the items in Kendo UI dropdown jQuery menu can be changed, depending on your web app development needs."
        }
      },
      {
        "text": "Orientation",
        "title": {
          "kendo-ui": "Orientation of dropdown menus in Kendo UI Menu widget"
        },
        "url": "menu/orientation",
        "meta": {
          "kendo-ui": "In this example we will see how the orientation of the Kendo UI Menu can be easily modified through the orientation settings."
        }
      },
      {
        "text": "Scrollable",
        "title": {
          "kendo-ui": "Kendo UI Menu scrollable demo"
        },
        "url": "menu/scrollable",
        "meta": {
          "kendo-ui": "This Kendo UI Menu example shows the feature that allows you to scroll the menu items."
        }
      },
      {
        "text": "Bind Custom Attributes",
        "title": {
          "kendo-ui": "Bind Custom Attributes in Kendo UI Menu widget"
        },
        "url": "menu/menu-bind-attributes",
        "meta": {
          "kendo-ui": "In this example you can see how you can bind custom attributes in the Menu items and populate them with data. Which can be later used for executing your own logic."
        },
        "description": {
          "kendo-ui": "<p>The <strong>Menu</strong> widget enables you to bind JSON data through the <a href='http://docs.telerik.com/kendo-ui/api/javascript/ui/menu#configuration-dataSource' target='_blank'>dataSource option</a> exposed.</p><p>This demo shows how you can process data fecthed through remote binding, using <strong>DataSource</strong>, and populate the <strong>Menu Items</strong> with it. Additionally, to accomplish specific functionality requirments you can bind the items' attributes in order and use the values bound later to run operations based on the end user's selection.</p>"
        }
      },
      {
        "packages": [
          "mvc-offline"
        ],
        "text": "SiteMapBinding",
        "url": "menu/sitemapbinding"
      },
      {
        "packages": [
          "mvc-offline"
        ],
        "text": "ModelBinding",
        "url": "menu/modelbinding"
      },
      {
        "text": "Animation effects",
        "url": "menu/animation",
        "title": {
          "kendo-ui": "Animation effects example in KendoMenu widget"
        },
        "meta": {
          "kendo-ui": "This sample demonstrates how KendoMenu HTML dropdown control supports animation effects which can be easily customized to change the desired animation effect."
        }
      },
      {
        "text": "Events",
        "url": "menu/events",
        "title": {
          "kendo-ui": "Kendo UI jQuery Menu Events Sample | KendoMenu Demos"
        },
        "meta": {
          "kendo-ui": "This sample shows KendoMenu events which are enabled and the demo source code guides you how you can handle the events in your dropdown menu."
        }
      },
      {
        "text": "API",
        "url": "menu/api",
        "title": {
          "kendo-ui": "API functions demo for KendoMenu"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how API functions of KendoMenu control operate and how you can configure them for your web project."
        }
      },
      {
        "text": "Context Menu",
        "url": "menu/context-menu",
        "title": {
          "kendo-ui": "Kendo UI Context Menu example"
        },
        "meta": {
          "kendo-ui": "This example demonstrates how to use a Kendo UI ContextMenu widget."
        }
      },
      {
        "text": "RTL support",
        "url": "menu/right-to-left-support",
        "title": {
          "kendo-ui": "Right-to-left support in Kendo UI Menu control | Kendo UI Web Demo"
        },
        "meta": {
          "kendo-ui": "Review how the RTL feature is enabled for the dropdown items in Kendo UI Menu and in the menu labels of the widget."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "menu/keyboard-navigation",
        "title": {
          "kendo-ui": "Keyboard navigation in Kendo UI Menu"
        },
        "meta": {
          "kendo-ui": "This example demonstrates how the keyboard navigation is a supported feature in Kendo UI Menu widget."
        }
      },
      {
        "text": "MVVM",
        "url": "menu/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Menu"
        },
        "meta": {
          "kendo-ui": "Events and visible MVVM binding support in Kendo UI Menu"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "MVVM - ContextMenu",
        "url": "menu/context-menu-mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI ContextMenu"
        },
        "meta": {
          "kendo-ui": "MVVM support for Kendo UI ContextMenu"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "menu/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Menu"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI Menu"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS - ContextMenu",
        "url": "menu/context-menu-angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI ContextMenu"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI ContextMenu"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Navigation"
  },
  {
    "text": "MultiColumnComboBox",
    "name": "multicolumncombobox",
    "new": true,
    "component": "multicolumncombobox",
    "api": { "all": "web/multicolumncombobox" },
    "documentation": {
      "kendo-ui": "controls/editors/multicolumncombobox/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/multicolumncombobox/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/multicolumncombobox/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/multicolumncombobox",
      "jsp-ui": "jsp/multicolumncombobox",
      "php-ui": "php/multicolumncombobox"
    },
    "sources": {
      "kendo-ui": [
        {
          "name": "Sample service",
          "url": "~/content/service.html"
        }
      ]
    },
    "spriteCssClass": "multiColumnComboBoxIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "multicolumncombobox/index",
        "title": {
          "kendo-ui": "jQuery-based MultiColumnComboBox widget Demo | Kendo UI Web Demos"
        },
        "meta": {
          "kendo-ui": "This MultiColumnComboBox UI example shows how you can easily apply an editable text box with flexible auto-searchable functionality of the dropdown list into your web app."
        }
      },
      {
        "text": "Server filtering",
        "url": "multicolumncombobox/serverfiltering",
        "title": {
          "kendo-ui": "Server filtering in Kendo UI MultiColumnComboBox"
        },
        "meta": {
          "kendo-ui": "Check out this demo to see how the server filtering functionality works in Kendo UI MultiColumnComboBox."
        }
      },
      {
        "text": "Virtualization",
        "url": "multicolumncombobox/virtualization",
        "title": {
          "kendo-ui": "Virtualization in Kendo UI MultiColumnComboBox"
        },
        "meta": {
          "kendo-ui": "Check out this demo to see how the virtualization functionality works in Kendo UI MultiColumnComboBox."
        }
      },
      {
        "text": "Grouping",
        "url": "multicolumncombobox/grouping",
        "title": {
          "kendo-ui": "Grouping in Kendo UI MultiColumnComboBox"
        },
        "meta": {
          "kendo-ui": "Check out this demo to see how the grouping functionality works in Kendo UI MultiColumnComboBox."
        }
      },
      {
        "packages": [
          "mvc-offline"
        ],
        "text": "Client filtering",
        "url": "multicolumncombobox/clientfiltering"
      },
      {
        "text": "Templates",
        "url": "multicolumncombobox/template",
        "title": {
          "kendo-ui": "Demo for customizing jQuery MultiColumnComboBox Templates | Kendo UI Web Demos"
        },
        "meta": {
          "kendo-ui": "This Kendo UI MultiColumnComboBox demo shows how the template of the control can be customized to change the appearance of items in the auto-searchable list."
        }
      },
      {
        "text": "Cascading MultiColumnComboBox",
        "url": "multicolumncombobox/cascadingmulticolumncombobox",
        "title": {
          "kendo-ui": "Cascading jQuery MultiColumnComboBox sample | Kendo UI Web demos"
        },
        "meta": {
          "kendo-ui": "This demo shows how the cascading Kendo UI MultiColumnComboBox control would fit any web application or website."
        }
      },
      {
        "text": "Add new item",
        "url": "multicolumncombobox/addnewitem",
        "title": {
          "kendo-ui": "Add new item in Kendo UI MultiColumnComboBox"
        },
        "meta": {
          "kendo-ui": "Check out this demo to see how to create new item in Kendo UI MultiColumnComboBox."
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "Custom data source",
        "url": "multicolumncombobox/custom-datasource",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Events",
        "url": "multicolumncombobox/events",
        "title": {
          "kendo-ui": "Examples of events in Kendo UI jQuery MultiColumnComboBox component"
        },
        "meta": {
          "kendo-ui": "This demo demonstrates useful events which are triggered in Kendo UI MultiColumnComboBox upon user's selection of an item from the drop-down list."
        }
      },
      {
        "text": "API",
        "url": "multicolumncombobox/api",
        "title": {
          "kendo-ui": "Demo for Kendo UI MultiColumnComboBox widget API"
        },
        "meta": {
          "kendo-ui": "This sample shows all API functions for Kendo UI MultiColumnComboBox widget."
        }
      },
      {
        "text": "RTL support",
        "url": "multicolumncombobox/right-to-left-support",
        "title": {
          "kendo-ui": "Right-to-left support in Kendo UI MultiColumnComboBox widget"
        },
        "meta": {
          "kendo-ui": "Build your app with Kendo UI MultiColumnComboBox. This demo shows how RTL feature is supported in the component."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "multicolumncombobox/keyboard-navigation",
        "title": {
          "kendo-ui": "Keyboard nagivation in Kendo UI MultiColumnComboBox | Kendo UI Web demos"
        },
        "meta": {
          "kendo-ui": "Kendo UI MultiColumnComboBox widget for web app development supports easy keyboard navigation. Play with the demo to explore the functionality."
        }
      },
      {
        "text": "MVVM",
        "url": "multicolumncombobox/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI MultiColumnComboBox"
        },
        "meta": {
          "kendo-ui": "Enabled, events, source, value and visible MVVM binding support in Kendo UI MultiColumnComboBox"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "multicolumncombobox/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI MultiColumnComboBox"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI MultiColumnComboBox"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "MultiSelect",
    "name": "multiselect",
    "component": "multi-select",
    "api": { "all": "web/multiselect" },
    "documentation": {
      "kendo-ui": "getting-started/web/multiselect/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/multiselect/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/multiselect/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/multi-select",
      "jsp-ui": "jsp/multi-select",
      "php-ui": "php/multi-select"
    },
    "sources": {
      "kendo-ui": [
        {
          "name": "Sample service",
          "url": "~/content/service.html"
        }
      ]
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/multiselect",
      "jsp-ui": "jsp/multiselect",
      "php-ui": "php/multiselect"
    },
    "spriteCssClass": "multiselectIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "multiselect/index",
        "title": {
          "kendo-ui": "Kendo UI MultiSelect widget demo | Kendo UI Web Demos"
        },
        "meta": {
          "kendo-ui": "Play with this demo to see the core functionality of Kendo UI MultiSelect component in Kendo UI Web framework."
        }
      },
      {
        "text": "Server filtering",
        "url": "multiselect/serverfiltering",
        "title": {
          "kendo-ui": "Example of Server filtering in Kendo UI MultiSelect widget"
        },
        "meta": {
          "kendo-ui": "See how the auto-searchable dropdown list of Kendo UI MultiSelect is filtered on the the server based on the input."
        }
      },
      {
        "text": "Virtualization",
        "url": "multiselect/virtualization",
        "title": {
          "kendo-ui": "Example of virtualization in Kendo UI MultiSelect widget"
        },
        "meta": {
          "kendo-ui": "See how the auto-searchable dropdown list of Kendo UI MultiSelect is virtualized."
        }
      },
      {
        "text": "Grouping",
        "url": "multiselect/grouping",
        "title": {
          "kendo-ui": "Example of grouping in Kendo UI MultiSelect widget"
        },
        "meta": {
          "kendo-ui": "See how the auto-searchable dropdown list of Kendo UI MultiSelect displays grouped data."
        }
      },
      {
        "packages": [
          "mvc-offline"
        ],
        "text": "Client filtering",
        "url": "multiselect/clientfiltering"
      },
      {
        "text": "Customizing templates",
        "url": "multiselect/template",
        "title": {
          "kendo-ui": "Templates customization of Kendo UI MultiSelect widget"
        },
        "meta": {
          "kendo-ui": "This Kendo UI MultiSelect demo shows how the template of the widget can be customized to change the appearance of items and tags."
        }
      },
      {
        "text": "Add new item",
        "url": "multiselect/addnewitem",
        "title": {
          "kendo-ui": "Add new item in Kendo UI MultiSelect"
        },
        "meta": {
          "kendo-ui": "Check out this demo to see how to create new item in Kendo UI MultiSelect."
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "Events",
        "url": "multiselect/events",
        "title": {
          "kendo-ui": "Events in Kendo UI MultiSelect Component | Kendo UI Demo"
        },
        "meta": {
          "kendo-ui": "This demo demonstrates the events which are triggered in Kendo UI MultiSelect upon user's selection of an item from the drop-down list."
        }
      },
      {
        "text": "API",
        "url": "multiselect/api",
        "title": {
          "kendo-ui": "API of Kendo UI MultiSelect component | Kendo UI Demo"
        },
        "meta": {
          "kendo-ui": "In this demo you will find more about the API functions of Kendo UI MultiSelect widget."
        }
      },
      {
        "text": "Tag mode",
        "url": "multiselect/tag-mode",
        "title": {
          "kendo-ui": "Tag mode of Kendo UI MultiSelect component | Kendo UI Demo"
        },
        "meta": {
          "kendo-ui": "In this demo you will find more about the Tag mode feature of Kendo UI MultiSelect widget."
        }
      },
      {
        "text": "RTL support",
        "url": "multiselect/right-to-left-support",
        "title": {
          "kendo-ui": "RTL support in Kendo UI MultiSelect widget | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "This example shows how RTL support is enabled in Kendo UI MultiSelect. Any application or mobile website will be now intuitive for RTL language users."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "multiselect/keyboard-navigation",
        "title": {
          "kendo-ui": "Keyboard navigation in Kendo UI MultiSelect component | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "This demo shows how the keyboard navigation for Kendo UI MultiSelect widget works. Learn more how to use the keyboard shortcuts for easier navigation."
        }
      },
      {
        "text": "MVVM",
        "url": "multiselect/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI MultiSelect"
        },
        "meta": {
          "kendo-ui": "Enabled, events, source, value and visible MVVM binding support in Kendo UI MultiSelect"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "multiselect/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI MultiSelect"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI MultiSelect"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "Notification",
    "name": "notification",
    "component": "notification",
    "api": { "all": "web/notification" },
    "documentation": {
      "kendo-ui": "getting-started/web/notification/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/notification/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/notification/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/notification",
      "jsp-ui": "jsp/notification",
      "php-ui": "php/notification"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/notification",
      "jsp-ui": "jsp/notification",
      "php-ui": "php/notification"
    },
    "spriteCssClass": "notificationIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "notification/index",
        "title": {
          "kendo-ui": "Overview of Kendo UI Notification | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "This demo shows the core functionality of Kendo UI Notification component."
        }
      },
      {
        "text": "Position and stacking",
        "url": "notification/position-stacking",
        "title": {
          "kendo-ui": "Position and stacking of Kendo UI Notification | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "This demo shows the position and stacking behavior of the Kendo UI Notification component."
        }
      },
      {
        "text": "Templates",
        "url": "notification/templates",
        "title": {
          "kendo-ui": "Templates of Kendo UI Notification | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "Demo about using templates with the Kendo UI Notification component."
        }
      },
      {
        "text": "Events",
        "url": "notification/events",
        "title": {
          "kendo-ui": "Events of Kendo UI Notification | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "Demo about using events and handlers with the Kendo UI Notification component."
        }
      },
      {
        "text": "API",
        "url": "notification/api",
        "title": {
          "kendo-ui": "API of Kendo UI Notification | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "Demo about using the API of the Kendo UI Notification component."
        }
      },
      {
        "text": "RTL support",
        "url": "notification/right-to-left-support",
        "title": {
          "kendo-ui": "RTL Support of Kendo UI Notification | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "Demo about the RTL support of the Kendo UI Notification component."
        }
      },
      {
        "text": "MVVM",
        "url": "notification/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Notification"
        },
        "meta": {
          "kendo-ui": "MVVM support for Kendo UI Notification"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "notification/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI notification"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI Notification"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Layout"
  },
  {
    "text": "NumericTextBox",
    "name": "numerictextbox",
    "component": "numeric-textbox",
    "api": { "all": "web/numerictextbox" },
    "documentation": {
      "kendo-ui": "getting-started/web/numerictextbox/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/numerictextbox/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/numerictextbox/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/numeric-textbox",
      "jsp-ui": "jsp/numeric-textbox",
      "php-ui": "php/numeric-textbox"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/numerictextbox",
      "jsp-ui": "jsp/numerictextbox",
      "php-ui": "php/numerictextbox"
    },
    "spriteCssClass": "numericTextBoxIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "numerictextbox/index",
        "title": {
          "kendo-ui": "Primary features of Kendo UI Numeric TextBox | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "This demo shows the core functionality of KendoNumericTextBox component."
        }
      },
      {
        "text": "Precision",
        "url": "numerictextbox/precision",
        "packages": [
          "!aspnet-mvc",
          "!aspnet-core"
        ],
        "title": {
          "kendo-ui": "The precision features of Kendo UI Numeric TextBox | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "This demo shows the precision functionality of KendoNumericTextBox component."
        }
      },
      {
        "text": "Events",
        "url": "numerictextbox/events",
        "title": {
          "kendo-ui": "Events in Kendo UI NumericTextBox widget"
        },
        "meta": {
          "kendo-ui": "This example shows events which are triggered in Kendo UI NumericTextBox widget."
        }
      },
      {
        "text": "API",
        "url": "numerictextbox/api",
        "title": {
          "kendo-ui": "API Functions Demo for KendoNumericTextBox"
        },
        "meta": {
          "kendo-ui": "This demo shows specific API functions for KendoNumericTextBox component."
        }
      },
      {
        "packages": [
          "mvc-offline"
        ],
        "text": "Globalization",
        "url": "numerictextbox/globalization"
      },
      {
        "text": "RTL support",
        "url": "numerictextbox/right-to-left-support",
        "title": {
          "kendo-ui": "RTL support in Kendo UI NumericTextBox widget"
        },
        "meta": {
          "kendo-ui": "This demo shows how right-to-left input is implemented in Kendo UI Numeric TextBox component to ensure the satisfaction of RTL language users."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "numerictextbox/keyboard-navigation",
        "title": {
          "kendo-ui": "Keyboard navigation in Kendo UI NumericTextBox"
        },
        "meta": {
          "kendo-ui": "The value in Kendo UI NumericTextBox can be increased or decreased by using keyboard navigation combinations. Take a look at the demo to learn how."
        }
      },
      {
        "text": "Range Validation",
        "url": "numerictextbox/validation",
        "title": {
          "kendo-ui": "Range validation in Kendo UI NumericTextBox"
        },
        "meta": {
          "kendo-ui": "The value in Kendo UI NumericTextBox can be restricted between min and max value using a custom Kendo UI Validator rules. Take a look at the demo to learn how."
        },
        "packages": [ "!aspnet-core", "!aspnet-mvc" ]
      },
      {
        "text": "MVVM",
        "url": "numerictextbox/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI NumericTextBox"
        },
        "meta": {
          "kendo-ui": "Enabled, events, value and visible MVVM binding support in Kendo UI NumericTextBox"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "numerictextbox/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI NumericTextBox"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI NumericTextBox"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "PanelBar",
    "name": "panelbar",
    "component": "panelbar",
    "api": { "all": "web/panelbar" },
    "documentation": {
      "kendo-ui": "getting-started/web/panelbar/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/panelbar/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/panelbar/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/panelbar",
      "jsp-ui": "jsp/panelbar",
      "php-ui": "php/panelbar"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/panelbar",
      "jsp-ui": "jsp/panelbar",
      "php-ui": "php/panelbar"
    },
    "spriteCssClass": "panelBarIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "panelbar/index",
        "title": {
          "kendo-ui": "Basic usage of Kendo UI PanelBar widget"
        },
        "meta": {
          "kendo-ui": "This example shows the core features of Kendo UI jQuery-based Accordion widget."
        }
      },
      {
        "text": "Images",
        "url": "panelbar/images",
        "title": {
          "kendo-ui": "Example of images in Kendo PanelBar widget"
        },
        "meta": {
          "kendo-ui": "This demo shows how images and sprites can implemented in Kendo Expandable PanelBar component."
        }
      },
      {
        "text": "Loading content with AJAX",
        "url": "panelbar/ajax",
        "title": {
          "kendo-ui": "Example of loading content with AJAX in Kendo UI Accordion"
        },
        "meta": {
          "kendo-ui": "This example shows how content is loaded in Kendo PanelBar component with AJAX."
        },
        "requiresServer": "true"
      },
      {
        "text": "Animation effects",
        "url": "panelbar/animation",
        "title": {
          "kendo-ui": "Animation effects example in Kendo UI Accordion component"
        },
        "meta": {
          "kendo-ui": "This demo shows how animations effects can be easily implemented into Kendo PanelBar widget."
        }
      },
      {
        "text": "Binding to local data",
        "url": "panelbar/local-data-binding",
        "title": {
          "kendo-ui": "Binding to local data demo for Kendo UI PanelBar widget"
        },
        "meta": {
          "kendo-ui": "This demo shows how items in the tree are displayed with the default settings of Kendo UI PanelBar and how the component can be easily bound to local data."
        },
        "packages": [
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Binding to remote data",
        "url": "panelbar/remote-data-binding",
        "title": {
          "kendo-ui": "Binding Kendo UI PanelBar to remote data"
        },
        "sources": {
          "kendo-ui": [
            {
              "name": "Sample service",
              "url": "~/content/service.html"
            }
          ]
        },
        "meta": {
          "kendo-ui": "This example illustrates how Kendo UI PanelBar can be bound to remote data to populate PanelBar items from external source."
        },
        "packages": [
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Templates",
        "url": "panelbar/templates",
        "title": {
          "kendo-ui": "Example of templates for Kendo UI PanelBar"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how tree nodes in Kendo UI PanelBar component can be further customized by using templates."
        },
        "packages": [
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Events",
        "url": "panelbar/events",
        "title": {
          "kendo-ui": "Events in Kendo UI accordion widget | Kendo PanelBar demo"
        },
        "meta": {
          "kendo-ui": "This example demonstrates how events in Kendo PanelBar widget work and you can set them to expand the content area of the accordion."
        },
        "requiresServer": "true"
      },
      {
        "text": "API",
        "url": "panelbar/api",
        "title": {
          "kendo-ui": "Kendo UI Accordion Widget API Demo"
        },
        "meta": {
          "kendo-ui": "This sample shows the API functions of Kendo UI PanelBar component."
        }
      },
      {
        "text": "RTL support",
        "url": "panelbar/right-to-left-support",
        "title": {
          "kendo-ui": "Keyboard navigation in Kendo UI PanelBar widget | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "See how directions of the arrows in Kendo UI PanelBar are easily changed when moving from right to left."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "panelbar/keyboard-navigation",
        "title": {
          "kendo-ui": "Demo for keyboard navigation feature in Kendo UI PanelBar"
        },
        "meta": {
          "kendo-ui": "Users can navigate in Kendo UI PanelBar by using the keyboard and different keyboard combinations. Play with the demo and implement the feature in your app."
        }
      },
      {
        "text": "MVVM",
        "url": "panelbar/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI PanelBar"
        },
        "meta": {
          "kendo-ui": "Events and visible MVVM binding support in Kendo UI PanelBar"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "panelbar/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI PanelBar"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI PanelBar"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Navigation"
  },
  {
    "packages": [
      "aspnet-core",
      "online"
    ],
    "text": "Drag and Drop",
    "name": "dragdrop",
    "component": "drag-and-drop",
    "api": { "all": "framework/draggable" },
    "documentation": {
      "kendo-ui": "getting-started/framework/draganddrop/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/drag-and-drop"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/draganddrop"
    },
    "spriteCssClass": "dragDropIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "dragdrop/index",
        "title": {
          "kendo-ui": "Demo for Drag & Drop Component in Kendo UI jQuery framework"
        },
        "meta": {
          "kendo-ui": "This example illustrates the basic functionality of Kendo UI Drag & Drop component which provides a cross-browser, touch-friendly way to handle mouse and touch drag events."
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Container",
        "url": "dragdrop/container",
        "title": {
          "kendo-ui": "Example of Kendo UI Drag and Drop Component in a container"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how Kendo UI Drag and Drop component is used for draggable items in a container."
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "Area",
        "url": "dragdrop/area",
        "title": {
          "kendo-ui": "Example of jQuery Draggable Area | Kendo UI MVVM Demo"
        },
        "meta": {
          "kendo-ui": "This demo shows how the draggable functionality in an area is enabled in Kendo UI MVVM framework."
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "Events",
        "url": "dragdrop/events",
        "title": {
          "kendo-ui": "Events example for Kendo UI jQuery Draggable functionality"
        },
        "meta": {
          "kendo-ui": "Learn more about draggable interaction with this events example for Kendo UI Draggable in Kendo UI MVVM."
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "dragdrop/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Drag & Drop"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI Drag & Drop"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Interactivity & UX"
  },
  {
    "packages": [
      "!aspnet-mvc",
      "!jsp",
      "!php",
      "!aspnet-core"
    ],
    "text": "Effects",
    "component": "effects",
    "name": "fx",
    "api": { "all": "framework/kendo" },
    "documentation": {
      "kendo-ui": "getting-started/framework/fx/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/effects"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/effects"
    },
    "spriteCssClass": "effectsIcon",
    "items": [
      {
        "text": "Expand",
        "url": "fx/expand",
        "title": {
          "kendo-ui": "Kendo UI Expand Effect Demo | Kendo UI Web framework"
        },
        "meta": {
          "kendo-ui": "This example demonstrates how the expand effect is applied to jQuery widgets in Kendo UI Web framework."
        }
      },
      {
        "text": "Fade",
        "url": "fx/fade",
        "title": {
          "kendo-ui": "Effects in Kendo UI Framework | Fade Away Demo"
        },
        "meta": {
          "kendo-ui": "This Kendo UI Web example demonstrates how the elements gradually fade away once the user has clicked on them."
        }
      },
      {
        "text": "Slide In",
        "url": "fx/slidein",
        "title": {
          "kendo-ui": "Demo for slide-in effect in Kendo UI framework for building HTML5 apps"
        },
        "meta": {
          "kendo-ui": "This example demonstrates how the slide-in effect is applied in Kendo UI Web framework."
        }
      },
      {
        "text": "Flip",
        "url": "fx/flip",
        "title": {
          "kendo-ui": "Interactive Flip Effect in Kendo UI Web framework"
        },
        "meta": {
          "kendo-ui": "In this Kendo UI Web demo you can play with the powerful flip effect which is supported in the web framework."
        }
      },
      {
        "text": "Transfer",
        "url": "fx/transfer",
        "title": {
          "kendo-ui": "Transfer effect demo in Kendo UI framework for web development"
        },
        "meta": {
          "kendo-ui": "This example demonstrates how the transfer effect is applied in Kendo UI Web."
        }
      },
      {
        "text": "Zoom",
        "url": "fx/zoom",
        "title": {
          "kendo-ui": "Zoom effect in Kendo UI Web framework | Kendo UI Web Demo"
        },
        "meta": {
          "kendo-ui": "Just hover the mouse over the image and you will see how the zoom effect is implemented in Kendo UI Web framework."
        }
      },
      {
        "text": "Page Turn",
        "url": "fx/pageturn",
        "title": {
          "kendo-ui": "Page turn effect in Kendo UI Web app framework | Kendo UI Web Demo"
        },
        "meta": {
          "kendo-ui": "In this interactive demo you will see how the blazing fast page turn effect is supported in Kendo UI Web framework for building apps and modern websites."
        }
      },
      {
        "text": "Tile",
        "url": "fx/tile",
        "title": {
          "kendo-ui": "Kendo UI Web framework effects | Interactive tile demo"
        },
        "meta": {
          "kendo-ui": "This Kendo UI Web example shows how the tile effect is implemented to enhance end-user experience."
        }
      },
      {
        "text": "Replace",
        "url": "fx/replace",
        "title": {
          "kendo-ui": "Replace effect"
        },
        "meta": {
          "kendo-ui": "This demo showcases how to create custom CSS class based transition between two HTML elements using Kendo UI Replace effect"
        }
      },
      {
        "text": "Combined Effects",
        "url": "fx/combined",
        "title": {
          "kendo-ui": "Combined Effects Demo in Kendo UI Web"
        },
        "meta": {
          "kendo-ui": "This demo shows how different combined effects can be used while building apps with Kendo UI Web framework in order to deliver rich end-user experience."
        }
      },
      {
        "text": "Semantic Zoom",
        "url": "fx/semantic-zoom",
        "title": {
          "kendo-ui": "Semantic Zoom effect"
        },
        "meta": {
          "kendo-ui": "This demo showcases how to implement semantic zoom between views in a single-page Kendo UI application"
        }
      }
    ],
    "category": "Interactivity & UX"
  },
  {
    "text": "ProgressBar",
    "name": "progressbar",
    "component": "progressbar",
    "api": { "all": "web/progressbar" },
    "documentation": {
      "kendo-ui": "getting-started/web/progressbar/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/progressbar/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/progressbar/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/progressbar",
      "jsp-ui": "jsp/progressbar",
      "php-ui": "php/progressbar"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/progressbar",
      "jsp-ui": "jsp/progressbar",
      "php-ui": "php/progressbar"
    },
    "spriteCssClass": "progressBarIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "progressbar/index",
        "title": {
          "kendo-ui": "Basic usage of Kendo UI ProgressBar widget"
        },
        "meta": {
          "kendo-ui": "This example shows the core widget features"
        }
      },
      {
        "text": "Chunk ProgressBar",
        "url": "progressbar/chunk",
        "title": {
          "kendo-ui": "Displaying a progress in chunks"
        },
        "meta": {
          "kendo-ui": "See how you can display chunks of progress in Kendo UI ProgressBar."
        }
      },
      {
        "text": "Vertical ProgressBar",
        "url": "progressbar/vertical",
        "title": {
          "kendo-ui": "Displaying a vertical progress"
        },
        "meta": {
          "kendo-ui": "Kendo UI ProgressBar can be oriented both horizontally and vertically. See how and play with the demo."
        }
      },
      {
        "text": "Custom Label",
        "url": "progressbar/customlabel",
        "title": {
          "kendo-ui": "Displaying a custom progress label in Kendo UI ProgressBar"
        },
        "meta": {
          "kendo-ui": "This demo shows how you can display custom progress label in Kendo UI HTML5 ProgressBar to indicate the level of progress."
        }
      },
      {
        "text": "Events",
        "url": "progressbar/events",
        "title": {
          "kendo-ui": "Events in Kendo UI ProgressBar widget"
        },
        "meta": {
          "kendo-ui": "This example demonstrates how events work in Kendo UI ProgressBar control."
        }
      },
      {
        "text": "API",
        "url": "progressbar/api",
        "title": {
          "kendo-ui": "Kendo UI ProgressBar API demo"
        },
        "meta": {
          "kendo-ui": "This sample shows the API functions of Kendo UI ProgressBar component."
        }
      },
      {
        "text": "RTL Support",
        "url": "progressbar/right-to-left-support",
        "title": {
          "kendo-ui": "Kendo UI ProgressBar RTL Support"
        },
        "meta": {
          "kendo-ui": "Demo about the right-to-left (RTL) support of the Kendo UI ProgressBar component."
        }
      },
      {
        "text": "MVVM",
        "url": "progressbar/mvvm",
        "title": {
          "kendo-ui": "MVVM support for Kendo UI ProgressBar"
        },
        "meta": {
          "kendo-ui": ""
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "progressbar/angular",
        "title": {
          "kendo-ui": "AngularJS support for Kendo UI ProgressBar"
        },
        "meta": {
          "kendo-ui": ""
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Interactivity & UX"
  },
  {
    "text": "Gantt",
    "name": "gantt",
    "component": "gannt",
    "api": { "all": "web/gantt" },
    "pro": "true",
    "documentation": {
      "kendo-ui": "getting-started/web/gantt/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/gantt/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/gantt/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/gantt",
      "jsp-ui": "jsp/gantt",
      "php-ui": "php/gantt"
    },
    "sources": {
      "kendo-ui": [
        {
          "name": "Sample service",
          "url": "~/content/service.html"
        }
      ]
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/gantt",
      "jsp-ui": "jsp/gantt",
      "php-ui": "php/gantt"
    },
    "spriteCssClass": "ganttIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "gantt/index",
        "title": {
          "kendo-ui": "Example of Kendo UI jQuery-based Gantt chart"
        },
        "meta": {
          "kendo-ui": "Explore the example of HTML5 gantt chart widget, included in Kendo UI Web, to find how easy it is to add a gantt chart to your website or web app."
        }
      },
      {
        "text": "MVVM",
        "url": "gantt/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Gantt"
        },
        "meta": {
          "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Gantt"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "gantt/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Gantt"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI Gantt"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "Column resizing",
        "url": "gantt/column-resizing",
        "title": {
          "kendo-ui": "Columns resizing in Kendo UI Gantt control | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "This demo shows the column resizing feature of the KendoGantt control."
        },
        "group": "Functionality"
      },
      {
        "text": "Export to PDF",
        "url": "gantt/pdf-export",
        "title": {
          "kendo-ui": "Exporting to PDF"
        },
        "meta": {
          "kendo-ui": "Export Kendo UI gantt as PDF file"
        },
        "packages": [
          "!offline"
        ]
      },
      {
        "text": "Resources",
        "url": "gantt/resources",
        "title": {
          "kendo-ui": "Resources in Kendo UI Gantt"
        },
        "meta": {
          "kendo-ui": "This demo shows how to assign resources to gantt tasks."
        }
      },
      {
        "text": "Task Template",
        "url": "gantt/task-template",
        "title": {
          "kendo-ui": "Task template support of Kendo UI Gantt"
        },
        "meta": {
          "kendo-ui": "This demo shows the Task template support of Kendo UI Gantt."
        }
      },
      {
        "text": "Selected Date and Range",
        "url": "gantt/selected-date-and-range",
        "title": {
          "kendo-ui": "Setting selected date and selected visible range of Kendo UI Gantt"
        },
        "meta": {
          "kendo-ui": "This demo shows how to select date and visible range, using the corresponding Kendo UI Gantt properties."
        }
      },
      {
        "text": "Events",
        "url": "gantt/events",
        "title": {
          "kendo-ui": "Example of using events in Kendo UI Gantt control"
        },
        "meta": {
          "kendo-ui": "This example demonstrates different events which are available in KendoGantt widget and the code explains how you can use them for your project."
        },
        "group": "API"
      },
      {
        "text": "API",
        "url": "gantt/api",
        "title": {
          "kendo-ui": "Kendo UI Gantt API Functions Example"
        },
        "meta": {
          "kendo-ui": "This demo shows API Functions of Kendo Gantt. Demo Source Code will show you how to call methods on the widget instance to script its behavior."
        }
      },
      {
        "text": "RTL Support",
        "url": "gantt/right-to-left-support",
        "title": {
          "kendo-ui": "Right-to-left (RTL) support of Kendo UI Gantt"
        },
        "meta": {
          "kendo-ui": "This demo shows the Right-to-left (RTL) support of Kendo UI Gantt."
        },
        "group": "Accessibility and Internationalization"
      },
      {
        "text": "Keyboard navigation",
        "url": "gantt/keyboard-navigation",
        "title": {
          "kendo-ui": "Keyboard navigation in Kendo UI Gantt"
        },
        "meta": {
          "kendo-ui": "Look at this Kendo UI Gantt demo to learn how different keyboard combinations could be used to navigate in the component."
        }
      },
      {
        "text": "Server binding",
        "url": "gantt/serverbinding",
        "group": "Data Binding",
        "packages": [
          "mvc-offline"
        ]
      }
    ],
    "category": "Scheduling"
  },
  {
    "text": "Responsive Panel",
    "name": "responsive-panel",
    "component": "responsivepanel",
    "api": {
      "all": "web/responsivepanel",
      "php-ui": "api/php/Kendo/UI/ResponsivePanel"
    },
    "documentation": {
      "kendo-ui": "getting-started/web/responsivepanel/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/responsivepanel/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/responsivepanel/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/responsivepanel",
      "jsp-ui": "jsp/responsivepanel",
      "php-ui": "php/responsivepanel"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/responsivepanel",
      "jsp-ui": "jsp/responsivepanel",
      "php-ui": "php/responsivepanel"
    },
    "spriteCssClass": "responsivePanelIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "responsive-panel/index",
        "title": {
          "kendo-ui": "Kendo jQuery ResponsivePanel Control Demo"
        },
        "meta": {
          "kendo-ui": "This demo shows the basic functionality of Kendo UI ResponsivePanel widget, included in Kendo UI Web framework."
        },
        "packages": [
          "!aspnet-core"
        ]
      }
    ],
    "category": "Layout"
  },
  {
    "text": "Scheduler",
    "name": "scheduler",
    "component": "scheduler",
    "pro": "true",
    "api": { "all": "web/scheduler" },
    "documentation": {
      "kendo-ui": "getting-started/web/scheduler/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/scheduler/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/scheduler/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/scheduler",
      "jsp-ui": "jsp/scheduler",
      "php-ui": "php/scheduler"
    },
    "sources": {
      "kendo-ui": [
        {
          "name": "Sample service",
          "url": "~/content/service.html"
        }
      ]
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/scheduler",
      "jsp-ui": "jsp/scheduler",
      "php-ui": "php/scheduler"
    },
    "spriteCssClass": "schedulerIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "scheduler/index",
        "title": {
          "kendo-ui": "Kendo jQuery Scheduler Control Demo"
        },
        "meta": {
          "kendo-ui": "This demo shows the basic functionality of Kendo UI Scheduler widget, included in Kendo UI Web framework."
        },
        "description": {
          "kendo-ui": "<p>The Telerik Kendo UI Scheduler allows you to easily schedule, display and edit appointments. You can display day, week, month, timeline and agenda views, group horizontally and vertically and enjoy out-of-the-box templates.</p> <p>You can find additional information on how to use the Scheduler in <a href=\"http://docs.telerik.com/kendo-ui/web/scheduler/overview\" target=\"_blank\">this section</a> of the product documentation.</p> <p><strong>Key Features</strong></p> <ul> <li>Day, Week, Work Week, Month, Agenda and Timeline views</li> <li>Multiple Resources and Resource Grouping</li> <li>Templates for Appointments</li> <li>Time Zone Support</li> <li>Simple-to-Customize Look and Feel</li> <li>Rich API for maximum flexibility</li> <li>Export to PDF</li> <li>Accessibility, keyboard navigation and RTL Support</li> <li>Rich cross-browser and mobile support</li> <li>Responsive HTML 5 Rendering</li> </ul> <p>More about <a href=\"http://docs.telerik.com/kendo-ui/web/scheduler/overview\">Scheduler for Kendo UI</a></p>"
        }
      },
      {
        "text": "MVVM",
        "url": "scheduler/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Scheduler"
        },
        "description": {
          "kendo-ui": "<p>The MVVM feature of the Kendo UI framework provides powerful two-way data binding capabilities, built on the popular Model-View-ViewModel concept. In this way you can easily make attribute values for widgets observable and modify them automatically when changes are applied in the data source, or alter the underlying data when the user interacts with the UI.</p> <p>In this example we show how to configure the Kendo UI scheduler to make use of the MVVM functionality exposed by the framework. For this purpose we create a <strong>viewmodel</strong> instance (with <strong>kendo.observable</strong> call) which wraps the scheduler data source, and instantiate the scheduler, its attributes and binding definition using <strong>data-</strong> attributes. The important detail to wire the viewmodel is to invoke <strong>kendo.bind</strong> to the container element of the chart, passing the viewmodel as a second argument. Review the code snippets from the demo for more info.</p> <p>Details on the MVVM features of the Kendo UI framework can be obtained from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/mvvm/overview\">this chapter</a> of the documentation.</p>"
        },
        "meta": {
          "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Scheduler"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "scheduler/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Scheduler"
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI scheduler features inherent integration with AngularJS using directives which are officially supported as part of the product. To make use of this integration, you need to reference the Angular scripts in your app and register the module incorporating the Kendo UI directives in the following way:</p> <p>&nbsp;angular.module(\"KendoDemos\", [ \"kendo.directives\" ])</p> <p>Thus you can utilize the AngularJS framework in combination with our scheduler for apps which could benefit from such integrations. Further, you can specify the scheduler options as a field in the $scope and then associate them via the options attribute of the scheduler Angular definition. This is demonstrated in the demo at hand.</p> <p>Additional information about how to use the Kendo UI widgets with AngularJS you can gather from <a href=\"http://docs.telerik.com/kendo-ui/AngularJS/introduction\" target=\"_blank\">this help resource</a>.</p>"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI Scheduler"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "Timeline view",
        "url": "scheduler/timeline",
        "title": {
          "kendo-ui": "Timeline view in Kendo UI Scheduler"
        },
        "meta": {
          "kendo-ui": "This demo shows the Timeline, Timeline Week and Timeline Work Week views."
        },
        "group": "Functionality",
        "description": {
          "kendo-ui": "<p>The Kendo UI Scheduler Timeline view allows you to display a variable number of appointment slots and define their duration. You can use the Timeline to provide end-users with an overview for scheduling purposes.</p> <p>You can define and show the available time line views through the views attribute collection. Further customization for these views can be applied by setting their startTime, endTime, majorTick, showWorkHours, workDayStart, workDayEnd, workWeekStart, workWeekEnd, etc. properties.</p>"
        }
      },
      {
        "text": "Timeline Overnight view",
        "url": "scheduler/timeline-night",
        "title": {
          "kendo-ui": "Timeline view configured with overnight major slots in Kendo UI Scheduler"
        },
        "meta": {
          "kendo-ui": "This demo shows the Timeline and Timeline Week to show overnight major slots."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI Scheduler Timeline view allows you to display overnight major slots by configuring the startTime and the endTime of the view.</p>"
        }
      },
      {
        "text": "Selection",
        "url": "scheduler/event-selection",
        "title": {
          "kendo-ui": "Multiple selection in Kendo UI Scheduler"
        },
        "meta": {
          "kendo-ui": "This demo shows the multiple selection and drag drop functionality of the Scheduler"
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI Scheduler allows you to select several events at once, and move them simultaneously by drag & drop.</p>"
        }
      },
      {
        "text": "Export to PDF",
        "url": "scheduler/pdf-export",
        "title": {
          "kendo-ui": "Exporting to PDF"
        },
        "meta": {
          "kendo-ui": "Export Kendo UI scheduler as PDF file"
        },
        "description": {
          "kendo-ui": "<p>Nowadays, the PDF format is very popular and widely used to present documents in a manner independent of application software, hardware and operating systems. This example illustrates how to export the Telerik Kendo UI Scheduler contents to PDF.</p> <p>The approach is very straight-forward - to export the content to PDF include the corresponding command to the scheduler&rsquo;s toolbar<span> </span>and configure the export settings through the Pdf attribute. You can specify the file name and whether to export all pages, margins, paper size, font and other.</p>"
        },
        "packages": [
          "!offline"
        ]
      },
      {
        "text": "Resources",
        "url": "scheduler/resources",
        "title": {
          "kendo-ui": "Resources in Kendo UI Scheduler"
        },
        "meta": {
          "kendo-ui": "This demo shows how to assign resources to scheduler events."
        },
        "description": {
          "kendo-ui": "<p>The Telerik Kendo UI Scheduler enables you to assign scheduler events to a set of predefined resources. The resources can be divided on:</p> <ul> <li>Single Instance Resources &ndash; when only one instance can be assigned to a scheduler event. This is for example a list of meetings (Scheduler events), which are held in two rooms (resources). Since a meeting can be held in only one room it can be considered a single resource.</li> <li>Multiple Instance Resources<span> - </span>when more than one instance can be assigned to a scheduler event. For example when there is a list of meetings and meeting attendees. Since more than one attendee can participate in a meeting, it is a multiple instance resource. You can enable this feature through the resources -&gt; multiple: true setting.</li> </ul> <p>The Scheduler supports also unlimited resource types. For example, you can combine single and multiple resource as shown in this demo.</p> <p>You can find more information on how to define and configure Scheduler resources in this <a href=\"http://docs.telerik.com/kendo-ui/web/scheduler/resources\">documentation article</a>.</p>"
        }
      },
      {
        "text": "Horizontal Grouping",
        "url": "scheduler/resources-grouping-horizontal",
        "title": {
          "kendo-ui": "Horizontal resources grouping in Kendo UI Scheduler"
        },
        "meta": {
          "kendo-ui": "This demo shows how to group resources horizontally in scheduler widget."
        },
        "description": {
          "kendo-ui": "<p>This demo illustrates how you can group the resources horizontally in Kendo UI Scheduler. The direction of the grouping can be controlled with the group -&gt;orientation property (default value is horizontal).</p> <p>The available options of the scheduler group orientation are horizontal and vertical, having in mind that the agenda view is always in vertical orientation.</p>"
        }
      },
      {
        "text": "Vertical Grouping",
        "url": "scheduler/resources-grouping-vertical",
        "title": {
          "kendo-ui": "Vertical resources grouping in Kendo UI Scheduler"
        },
        "meta": {
          "kendo-ui": "This demo shows how to group resources vertically in scheduler widget."
        },
        "description": {
          "kendo-ui": "<p>In this example you can see how to group the scheduler&rsquo;s resources vertically. The direction of the grouping can be controlled with the group -&gt;orientation property (default value is horizontal). <p>The available orientation options are horizontal and vertical, having in mind that the agenda view is always in vertical orientation.</p>"
        }
      },
      {
        "text": "Date Grouping",
        "url": "scheduler/date-grouping",
        "title": {
          "kendo-ui": "Date grouping in Kendo UI Scheduler"
        },
        "meta": {
          "kendo-ui": "This demo shows horizontal and vertical grouping by Date in scheduler widget."
        },
        "description": {
          "kendo-ui": "<p>This demo shows horizontal and vertical grouping by Date in scheduler widget. The direction of the grouping can be controlled with the group -&gt;orientation property (default value is horizontal). <p>The available orientation options are horizontal and vertical, having in mind that the agenda view is always in vertical orientation.</p>"
        }
      },

      {
        "text": "Templates",
        "url": "scheduler/templates",
        "title": {
          "kendo-ui": "Templates in Kendo UI Scheduler"
        },
        "meta": {
          "kendo-ui": "This demo shows how to use templates to customize the appearance of scheduler events"
        },
        "description": {
          "kendo-ui": "<p>This example illustrates how to use templates to customize the appearance of the scheduler events. You can use the eventTemplate setting to create a template for the scheduler&rsquo;s events. Other template settings provided by the widget are allDayEventTemplate, dateHeaderTemplate, groupHeaderTemplate, majorTimeHeaderTemplate and minorTimeHeaderTemplate.</p> <p>Templates use a simple templating syntax where the hash # symbol is used to mark areas in a template that should be replaced with data when the template is executed. The # character is also used to signify the beginning and end of custom JavaScript code inside the template.</p> <p>There are three ways to use the hash syntax:</p> <ol> <li>Render values as HTML: #= # </li> <li>Uses HTML encoding to display values: #: # </li> <li>Execute arbitrary JavaScript code: # if (true) { # ... non-script content here ... # } # </li> </ol> <p>You can find more information about the templates in this article: <a href=\"http://docs.telerik.com/kendo-ui/framework/templates/overview\">Kendo UI Templates Overview</a>.</p>"
        }
      },
      {
        "text": "Restrictions",
        "url": "scheduler/restriction",
        "title": {
          "kendo-ui": "Restricting events resizing and moving"
        },
        "meta": {
          "kendo-ui": "This demo shows how to restrict the events in Kendo UI Scheduler"
        },
        "description": {
          "kendo-ui": "<p>This demo shows how you can restrict the events and better control your resources in the Telerik Kendo UI Scheduler using its API. You can prevent not only the drag and resize capabilities of the appointments, but also allow or not the creation of a new event or the modification of an existing one by criteria defined by you.</p> <p>For example, double click on the \"Call Charlie about the project\" event, change the attendee to Bob and click SAVE. This will result in an error: \"This person is not available in this time period.\"</p> <p>You will also get an error \"This person is not available in this time period.\", if you change the start date of the \"HR Lecture\" event to 10:30 AM.</p> <p>The logic which enforces the restrictions in this example resides in the resize, move, add and save event handlers of the scheduler. Review their definitions for further info.</p>"
        }
      },
      {
        "text": "Event move & resize",
        "url": "scheduler/move-resize",
        "title": {
          "kendo-ui": "Moving and resizing events"
        },
        "meta": {
          "kendo-ui": "This demo shows the move and resize feature of Kendo UI Scheduler"
        },
        "description": {
          "kendo-ui": "<p>The Telerik Kendo UI Scheduler allows you and your users to move and resize its events. In addition to this, you can also specify whether the scheduler will either snap events to the nearest slot during dragging (resizing or moving), or it will allow free moving and resizing of events. You can do that through the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/scheduler#configuration-snap\">snap client-side bool property</a> of the scheduler as shown in this example.</p>"
        }
      },
      {
        "text": "Binding to SignalR",
        "url": "scheduler/signalr",
        "title": {
          "kendo-ui": "Real-time Binding to SignalR Hub"
        },
        "meta": {
          "kendo-ui": "This example shows how the Kendo UI Scheduler can be bound to SignalR Hub for real-time push notifications"
        },
        "group": "Data Binding",
        "description": {
          "kendo-ui": "<p>This demo shows how the Kendo UI Scheduler can be bound to a <a href=\"https://www.asp.net/signalr\">SignalR</a> Hub for real-time push notifications. This is useful for web applications (chat, calendar and scheduling, gaming and other apps) which require high-frequency updates where you usually want to perform data updates in real-time on all connected clients.</p> <p>To configure the SignalR binding, set the transport -&gt;signalr settings in the scheduler data source configuration. In this way you instruct the data source to use SignalR protocol for transmitting and operating with data in real time.</p>"
        },
        "packages": [
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Binding to Kinvey Backend Services",
        "url": "scheduler/kinvey",
        "title": {
          "kendo-ui": "Binding to Kinvey Backend Services | Kendo UI Scheduler demo"
        },
        "meta": {
          "kendo-ui": "This example shows how the Kendo UI Scheduler can be bound to Kinvey which will provide the backend functionality"
        },
        "description": {
          "kendo-ui": "<h4>What are the Kinvey Backend Services?</h4><p>Kinvey Backend Services are a set of cloud-based services that enable developers to build and manage mobile apps significantly faster, easier and more scalable way. Kinvey Backend Services can significantly speed-up development by providing your app with data storage, user management and server-code execution.</p><p style=\"padding-top: 1em;\">&raquo; <a class=\"hyperlink\" href=\"https://www.kinvey.com/\" title=\"Getting started with Kinvey Backend Services\">What are Kinvey Backend Services</a></p><p>&raquo; <a class=\"hyperlink\" href=\"https://devcenter.kinvey.com/html5/guides/getting-started\">Kinvey Backend Services HTML5 SDK</a></p><p>&raquo; <a class=\"hyperlink\" href=\"https://github.com/Kinvey/kinvey-kendo-data-source\" title=\"Introduction to Kendo UI and Kinvey Backend Services JavaScript integration\">Integration with Kendo UI</a></p><p class=\"demo-hint\" style=\"padding-top: 1em;\">Note: The Kinvey Backend Services data source is not supported on IE11 and below yet, because it relies on <a class=\"hyperlink\" href=\"http://en.wikipedia.org/wiki/Cross-origin_resource_sharing\">cross-origin resource sharing</a>.</p>"
        },
        "packages": [
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Web API binding",
        "url": "scheduler/webapi",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Custom data source",
        "url": "scheduler/custom-datasource",
        "packages": [
          "mvc-offline"
        ]
      },
      {
        "text": "Events",
        "url": "scheduler/events",
        "title": {
          "kendo-ui": "Events in Kendo UI Scheduler"
        },
        "meta": {
          "kendo-ui": "This demo shows how events are handled and triggered in Kendo UI Scheduler."
        },
        "group": "API",
        "description": {
          "kendo-ui": "<p>Telerik Kendo UI Scheduler exposes rich API and events which provide easy configuration or extension points for customization on top of its built-in features.</p> <p>This example demonstrates how you can intercept the scheduler's events to output messages in the console when these events are raised. You can use these events for customizations or to execute custom logic, if necessary.</p>"
        }
      },
      {
        "text": "API",
        "url": "scheduler/api",
        "title": {
          "kendo-ui": "API in Kendo UI Scheduler"
        },
        "meta": {
          "kendo-ui": "This demo shows the API of Kendo UI Scheduler."
        },
        "description": {
          "kendo-ui": "<p>The Telerik Kendo UI Scheduler exposes rich client-side API and events, which provide easy configuration or extension points for custom functionality on top of the built-in features.</p> <p>In this demo, you can see how to get a reference to the scheduler's client-side object and using its date() and view() methods to update its current date and current view.</p> <p>You can find more information about its API <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/scheduler\">here</a>.</p>"
        }
      },
      {
        "text": "RTL Support",
        "url": "scheduler/right-to-left-support",
        "title": {
          "kendo-ui": "Right-to-left (RTL) support of Kendo UI Scheduler"
        },
        "meta": {
          "kendo-ui": "This demo shows the Right-to-left (RTL) support of Kendo UI Scheduler."
        },
        "group": "Accessibility and Internationalization",
        "description": {
          "kendo-ui": "<p>The Telerik Kendo UI Scheduler supports right-to-left languages and rendering. All you need to do is to register the <strong>kendo.rtl.min.css</strong> file (located in the /styles folder of the distribution) and wrap the scheduler in a container element with <strong>k-rtl</strong> class set for it, as demonstrated in this particular example.</p> <p>You can learn more about the right-to-left support of the Kendo UI widgets from <a href=\"http://docs.telerik.com/kendo-ui/accessibility/supporting-rtl-languages\" target=\"_blank\">this article</a>.</p>"
        }
      },
      {
        "text": "Keyboard Navigation",
        "url": "scheduler/selection",
        "title": {
          "kendo-ui": "Selection and Keyboard navigation in Kendo UI Scheduler"
        },
        "meta": {
          "kendo-ui": "This demo shows the selection and the different keyboard combinations that could be used to navigate in Kendo UI Scheduler."
        },
        "description": {
          "kendo-ui": "<p>The Scheduler offers extended keyboard navigation which allows you to focus the control, navigate over its cells, to select an appointment and modify it, to create new appointments, to switch between the available views and many more. This is especially useful for the visually impaired users. </p> <p>For more information on the supported keyboard shortcuts see the provided information box.</p>"
        }
      },
      {
        "text": "Localization",
        "url": "scheduler/localization",
        "title": {
          "kendo-ui": "Kendo UI Scheduler localization demo"
        },
        "meta": {
          "kendo-ui": "This demo shows how Kendo UI Scheduler widget can be localized."
        },
        "description": {
          "kendo-ui": "<p>The Telerik Kendo UI Scheduler supports localization by specifying messages for its elements in the corresponding languages. You can apply these messages either directly through the scheduler messages attributes collection, or via kendo.messages.[language_abbreviation] file as presented in this example.</p> <p>More information about the localization support (by means of messages definitions) of the scheduler can be found in <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/scheduler#configuration-messages\" target=\"_blank\"> this section of the documentation</a> </p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "Globalization",
        "url": "scheduler/globalization",
        "packages": [
          "mvc-offline"
        ]
      }
    ],
    "category": "Scheduling"
  },
  {
    "text": "Slider",
    "name": "slider",
    "component": "slider",
    "api": { "all": "web/slider" },
    "documentation": {
      "kendo-ui": "getting-started/web/slider/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/slider/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/slider/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/slider",
      "jsp-ui": "jsp/slider",
      "php-ui": "php/slider"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/slider",
      "jsp-ui": "jsp/slider",
      "php-ui": "php/slider"
    },
    "spriteCssClass": "sliderIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "slider/index",
        "title": {
          "kendo-ui": "Kendo jQuery Slider Control Demo"
        },
        "meta": {
          "kendo-ui": "This demo shows the basic functionality of Kendo UI slider widget, included in Kendo UI Web framework."
        }
      },
      {
        "text": "Events",
        "url": "slider/events",
        "title": {
          "kendo-ui": "Events demo in Kendo UI Slider Widget"
        },
        "meta": {
          "kendo-ui": "This demo shows how events are handled and triggered in Kendo UI HTML&jQuery Slider."
        }
      },
      {
        "text": "API",
        "url": "slider/api",
        "title": {
          "kendo-ui": "Kendo UI Slider API Functions Example"
        },
        "meta": {
          "kendo-ui": "This demo shows API Functions of KendoSlider. Demo Source Code will help you find out how to handle events and the behavior of the component."
        }
      },
      {
        "text": "RTL support",
        "url": "slider/right-to-left-support",
        "title": {
          "kendo-ui": "Right-to-left support in Kendo UI Slider | Kendo UI Web Demos"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how the right-to-left feature is enabled in Kendo UI Slider widget."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "slider/keyboard-navigation",
        "title": {
          "kendo-ui": "Keyboard navigation in Kendo UI Slider | Kendo UI Web Demos"
        },
        "meta": {
          "kendo-ui": "This demo illustrates the keyboard navigation feature of Telerik Kendo UI Slider control."
        }
      },
      {
        "text": "MVVM",
        "url": "slider/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Slider"
        },
        "meta": {
          "kendo-ui": "Enabled, events, value and visible MVVM binding support in Kendo UI Slider"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "slider/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Slider"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI Slider"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "Sortable",
    "name": "sortable",
    "component": "sortable",
    "api": { "all": "web/sortable" },
    "documentation": {
      "kendo-ui": "getting-started/web/sortable/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/sortable/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/sortable/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/sortable",
      "jsp-ui": "jsp/sortable",
      "php-ui": "php/sortable"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/sortable",
      "jsp-ui": "jsp/sortable",
      "php-ui": "php/sortable"
    },
    "spriteCssClass": "sortableIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "sortable/index",
        "title": {
          "kendo-ui": "Demo for Sortable Component in Kendo UI jQuery framework"
        },
        "meta": {
          "kendo-ui": "This example illustrates the basic functionality of Kendo UI Sortable component which provides a cross-browser, touch-friendly way to reorder HTML elements via drag and drop."
        }
      },
      {
        "text": "Filter / Disable items",
        "url": "sortable/filter-disable",
        "title": {
          "kendo-ui": "Demo for filter and disable items functionality of Kendo UI Sortable Component"
        },
        "meta": {
          "kendo-ui": "This example illustrates the filter and disable items functionality of Kendo UI Sortable component which provides a cross-browser, touch-friendly way to reorder HTML elements via drag and drop."
        }
      },
      {
        "text": "Handlers",
        "url": "sortable/handlers",
        "title": {
          "kendo-ui": "Demo for handler functionality of Kendo UI Sortable Component"
        },
        "meta": {
          "kendo-ui": "This example illustrates the handler feature of Kendo UI Sortable component which provides a cross-browser, touch-friendly way to reorder HTML elements via drag and drop."
        }
      },
      {
        "text": "Axis / Container constraints",
        "url": "sortable/constraints",
        "title": {
          "kendo-ui": "Demo for axis / container functionality of Kendo UI Sortable Component"
        },
        "meta": {
          "kendo-ui": "This example illustrates the axis / container restriction feature of Kendo UI Sortable component which provides a cross-browser, touch-friendly way to reorder HTML elements via drag and drop."
        }
      },
      {
        "text": "Linked Lists",
        "url": "sortable/linkedlists",
        "title": {
          "kendo-ui": "Demo for linked list functionality of Kendo UI Sortable Component"
        },
        "meta": {
          "kendo-ui": "This example illustrates the linked lists feature of Kendo UI Sortable component which provides a cross-browser, touch-friendly way to reorder HTML elements via drag and drop."
        }
      },
      {
        "text": "Events",
        "url": "sortable/events",
        "title": {
          "kendo-ui": "Events example for Kendo UI Sortable Component"
        },
        "meta": {
          "kendo-ui": "This example shows events of Kendo UI Sortable widget."
        }
      },
      {
        "text": "Sortable panels",
        "url": "sortable/sortable-panels",
        "title": {
          "kendo-ui": "Panels example for Kendo UI Sortable Component"
        },
        "meta": {
          "kendo-ui": "This example demonstrates the usage of Kendo UI Sortable widget."
        }
      },
      {
        "text": "Integration - Grid",
        "url": "sortable/integration-grid",
        "title": {
          "kendo-ui": "Kendo UI Grid integration with Sortable Component"
        },
        "meta": {
          "kendo-ui": "This example demonstrates Kendo UI Grid integration with Sortable Component."
        }
      },
      {
        "text": "Integration - ListView",
        "url": "sortable/integration-listview",
        "title": {
          "kendo-ui": "Kendo UI ListView integration with Sortable Component"
        },
        "meta": {
          "kendo-ui": "This example demonstrates Kendo UI ListView integration with Sortable Component."
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "Integration - TabStrip",
        "url": "sortable/integration-tabstrip",
        "title": {
          "kendo-ui": "Kendo UI TabStrip integration with Sortable Component"
        },
        "meta": {
          "kendo-ui": "This example demonstrates Kendo UI TabStrip integration with Sortable Component."
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "sortable/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Sortable"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI Sortable"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Interactivity & UX"
  },
  {
    "text": "Splitter",
    "name": "splitter",
    "component": "splitter",
    "api": { "all": "web/splitter" },
    "documentation": {
      "kendo-ui": "getting-started/web/splitter/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/splitter/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/splitter/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/splitter",
      "jsp-ui": "jsp/splitter",
      "php-ui": "php/splitter"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/splitter",
      "jsp-ui": "jsp/splitter",
      "php-ui": "php/splitter"
    },
    "spriteCssClass": "splitterIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "splitter/index",
        "title": {
          "kendo-ui": "Features, supported in Kendo UI Splitter widget | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "This demo illustrates the basic usage and core functionality of Kendo UI Splitter."
        }
      },
      {
        "text": "Loading content with AJAX",
        "url": "splitter/ajax",
        "title": {
          "kendo-ui": "AJAX Content in Kendo UI Splitter widget | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "This demo shows how AJAX content is loaded in the container's display area of Kendo UI Splitter control."
        },
        "requiresServer": "true"
      },
      {
        "text": "Events",
        "url": "splitter/events",
        "title": {
          "kendo-ui": "Events in Kendo UI Splitter widget | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "This demo shows the events which change the behavior of Kendo UI Splitter. Find more about resize events and Javascript function names to be called before the panel is collapsed."
        },
        "requiresServer": "true"
      },
      {
        "text": "API",
        "url": "splitter/api",
        "title": {
          "kendo-ui": "Kendo UI Splitter API Demo"
        },
        "meta": {
          "kendo-ui": "This example shows how API of Kendo UI Splitter widget works. Find all API functions to expand/collapse content and resize the pane."
        },
        "requiresServer": "true"
      },
      {
        "text": "RTL support",
        "url": "splitter/right-to-left-support",
        "title": {
          "kendo-ui": "Right-to-left support in Kendo UI Splitter control | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "In this demo we will play with the right-to-left text input and visualization which is enabled in Kendo UI Splitter widget."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "splitter/keyboard-navigation",
        "title": {
          "kendo-ui": "Keyboard navigation support in Kendo UI Slider"
        },
        "meta": {
          "kendo-ui": "Users can easily manipulate the behaviour of Kendo UI Slider by using different keyboard keys and combinations."
        }
      },
      {
        "text": "MVVM",
        "url": "splitter/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Splitter"
        },
        "meta": {
          "kendo-ui": "Events and visible MVVM binding support in Kendo UI Splitter"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "splitter/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Splitter"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI Splitter"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Layout"
  },
  {
    "text": "TabStrip",
    "name": "tabstrip",
    "component": "tabstrip",
    "api": { "all": "web/tabstrip" },
    "documentation": {
      "kendo-ui": "getting-started/web/tabstrip/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/tabstrip/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/tabstrip/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/tabstrip",
      "jsp-ui": "jsp/tabstrip",
      "php-ui": "php/tabstrip"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/tabstrip",
      "jsp-ui": "jsp/tabstrip",
      "php-ui": "php/tabstrip"
    },
    "spriteCssClass": "tabStripIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "tabstrip/index",
        "title": {
          "kendo-ui": "Kendo UI TabStrip Demo"
        },
        "meta": {
          "kendo-ui": "This demo shows how Kendo UI jQuery Tabs control works. KendoTabStrup divides the content into multiple sections which the user can navigate through clicking on the tab pane."
        }
      },
      {
        "text": "Images",
        "url": "tabstrip/images",
        "title": {
          "kendo-ui": "Kendo UI TabStrip widget with images | Kendo UI Web"
        },
        "meta": {
          "kendo-ui": "This example shows how images are displayed in Kendo UI TabStrip component."
        }
      },
      {
        "text": "Loading content with AJAX",
        "url": "tabstrip/ajax",
        "title": {
          "kendo-ui": "AJAX loaded content demo in Kendo UI TabStrip widget"
        },
        "meta": {
          "kendo-ui": "This sample shows how the tabs in Kendo UI TabStrip control are dynamically loaded with AJAX upon selection of a tab."
        },
        "requiresServer": "true"
      },
      {
        "text": "Animation effects",
        "url": "tabstrip/animation",
        "title": {
          "kendo-ui": "Kendo UI jQuery TabStrip animation effects demo"
        },
        "meta": {
          "kendo-ui": "This sample shows the supported animation effects in Kendo UI TabStrip. You can play with the sample by changing the settings of the animation."
        }
      },
      {
        "text": "Tab position",
        "url": "tabstrip/tab-position",
        "title": {
          "kendo-ui": "Kendo UI jQuery TabStrip tab position demo"
        },
        "meta": {
          "kendo-ui": "This sample shows different tab position options for the Kendo UI TabStrip."
        }
      },
      {
        "text": "Scrollable tabs",
        "url": "tabstrip/scrollable-tabs",
        "title": {
          "kendo-ui": "Kendo UI jQuery TabStrip scrollable tabs demo"
        },
        "meta": {
          "kendo-ui": "This sample shows auto scrollable tabs in the Kendo UI TabStrip."
        }
      },
      {
        "text": "Sortable closable tabs",
        "url": "tabstrip/sortable-closable",
        "title": {
          "kendo-ui": "Sortable closable tabs in Kendo UI TabStrip"
        },
        "meta": {
          "kendo-ui": "This Kendo UI demo shows how implement custom logic that allows end users to reorder or close a tab in Kendo UI TabStrip."
        },
        "packages": [
          "!aspnet-mvc",
          "!aspnet-core"
        ]
      },
      {
        "text": "Events",
        "url": "tabstrip/events",
        "title": {
          "kendo-ui": "Example of Kendo UI TabStrip Events"
        },
        "meta": {
          "kendo-ui": "This sample shows how you can trigger select event in Kendo UI TabStrip. Find demo source code for all types of events in KendoTabStrip."
        },
        "requiresServer": "true"
      },
      {
        "text": "API",
        "url": "tabstrip/api",
        "title": {
          "kendo-ui": "API example for Kendo UI TabStrip widget"
        },
        "meta": {
          "kendo-ui": "This sample shows how API functions in KendoTabStrip control work. Find the demo source code to play with Kendo UI TabStrip API."
        }
      },
      {
        "text": "RTL support",
        "url": "tabstrip/right-to-left-support",
        "title": {
          "kendo-ui": "RTL support in Kendo UI TabStrip widget | Kendo UI Web Demos"
        },
        "meta": {
          "kendo-ui": "This demo shows the right-to-left feature, enabled in Kendo UI TabStrip. Now users can easily reorder the tabs from right to left."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "tabstrip/keyboard-navigation",
        "title": {
          "kendo-ui": "Keyboard navigation in Kendo UI TabStrip"
        },
        "meta": {
          "kendo-ui": "This Kendo UI demo shows how end users of your app can intuitively use keyboard navigation in Kendo UI TabStrip."
        }
      },
      {
        "text": "MVVM",
        "url": "tabstrip/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI TabStrip"
        },
        "meta": {
          "kendo-ui": "Events and visible MVVM binding support in Kendo UI TabStrip"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "tabstrip/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI TabStrip"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI TabStrip"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Navigation"
  },
  {
    "text": "TimePicker",
    "name": "timepicker",
    "component": "date-time-pickers",
    "api": { "all": "web/timepicker" },
    "documentation": {
      "kendo-ui": "getting-started/web/timepicker/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/timepicker/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/timepicker/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/date-time-pickers",
      "jsp-ui": "jsp/date-picker-pickers",
      "php-ui": "php/date-time-pickers"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/datepicker",
      "jsp-ui": "jsp/date-time-pickers",
      "php-ui": "php/date-time-pickers"
    },
    "spriteCssClass": "timePickerIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "timepicker/index",
        "title": {
          "kendo-ui": "Kendo UI jQuery Time Picker Example"
        },
        "meta": {
          "kendo-ui": "This demo shows the basic usage and core functionality of Kendo UI TimePicker widget."
        }
      },
      {
        "text": "Range selection",
        "url": "timepicker/rangeselection",
        "title": {
          "kendo-ui": "Kendo UI jQuery TimePicker Demo for selecting a time range"
        },
        "meta": {
          "kendo-ui": "This example shows the flexible functionality of Kendo UI TimePicker. You can specify a range of visible hours and enable the user to select them from the dropdown list."
        }
      },
      {
        "text": "Events",
        "url": "timepicker/events",
        "title": {
          "kendo-ui": "Events demo for Kendo UI jQuery TimePicker"
        },
        "meta": {
          "kendo-ui": "This sample shows all events which are triggered upon time select, close and time change in Kendo UI TimePicker widget."
        }
      },
      {
        "text": "API",
        "url": "timepicker/api",
        "title": {
          "kendo-ui": "API demo for Kendo UI Time Picker"
        },
        "meta": {
          "kendo-ui": "This example shows API functions of Kendo UI HTML5 TimePicker component."
        }
      },
      {
        "packages": [
          "mvc-offline"
        ],
        "text": "Globalization",
        "url": "timepicker/globalization"
      },
      {
        "text": "RTL support",
        "url": "timepicker/right-to-left-support",
        "title": {
          "kendo-ui": "Right-to-left time input in Kendo UI TimePicker"
        },
        "meta": {
          "kendo-ui": "See how end users of your webapp can type and change time values from the right to the left. Enhance the experience with RTL support in Kendo UI TimePicker."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "timepicker/keyboard-navigation",
        "title": {
          "kendo-ui": "Keyboard navigation in Kendo UI TimePicker"
        },
        "meta": {
          "kendo-ui": "Users can intuitively select time in Kendo UI TimePicker by simply using the keyboard support of the widget."
        }
      },
      {
        "text": "MVVM",
        "url": "timepicker/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI TimePicker"
        },
        "meta": {
          "kendo-ui": "Enabled, events, value and visible MVVM binding support in Kendo UI TimePicker"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "timepicker/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI TimePicker"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI TimePicker"
        },
        "packages": [
          "!jsp",
          "!php",
          "!aspnet-core",
          "!aspnet-mvc"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "ToolBar",
    "name": "toolbar",
    "component": "toolbar",
    "api": { "all": "web/toolbar" },
    "documentation": {
      "kendo-ui": "getting-started/web/toolbar/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/toolbar/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/toolbar/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/toolbar",
      "jsp-ui": "jsp/toolbar",
      "php-ui": "php/toolbar"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/toolbar",
      "jsp-ui": "jsp/toobar",
      "php-ui": "php/toolbar"
    },
    "spriteCssClass": "toolbarIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "toolbar/index",
        "title": {
          "kendo-ui": "Basic usage of Kendo UI ToolBar Widget | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "Play with this Kendo UI ToolBar demo to get familiar with the supported commands and core functionality."
        }
      },
      {
        "text": "Resizing",
        "url": "toolbar/resizing",
        "title": {
          "kendo-ui": "Resizing demo of Kendo UI ToolBar Widget | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "Play with this Kendo UI ToolBar demo to get familiar with the resizing functionality."
        }
      },
      {
        "text": "Events",
        "url": "toolbar/events",
        "title": {
          "kendo-ui": "Events demo of Kendo UI ToolBar Widget | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "Play with this Kendo UI ToolBar demo to get familiar with supported events."
        }
      },
      {
        "text": "API",
        "url": "toolbar/api",
        "title": {
          "kendo-ui": "API demo of Kendo UI ToolBar Widget | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "Play with this Kendo UI ToolBar demo to get familiar with supported API methods."
        }
      },
      {
        "text": "Integration with Editors",
        "url": "toolbar/integration",
        "title": {
          "kendo-ui": "Integration demo of Kendo UI ToolBar Widget | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "Play with this Kendo UI ToolBar demo to learn how to include Kendo UI Editor widgets in the ToolBar."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "toolbar/keyboard-navigation",
        "title": {
          "kendo-ui": "Kendo UI ToolBar control | Keyboard support demo"
        },
        "meta": {
          "kendo-ui": "Look at the source code and play with the demo to find out more about the keyboard support feature in Kendo UI ToolBar."
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "toolbar/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI ToolBar"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support in Kendo UI Toolbar"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "RTL Support",
        "disableInMobile": "true",
        "url": "toolbar/right-to-left-support",
        "title": {
          "kendo-ui": "Right-to-left support for Kendo UI ToolBar"
        },
        "meta": {
          "kendo-ui": "Enhance the experience with RTL support in Kendo UI Toolbar."
        },
        "packages": [
          "!aspnet-core"
        ]
      }
    ],
    "category": "Navigation"
  },
  {
    "text": "Tooltip",
    "name": "tooltip",
    "component": "tooltip",
    "api": { "all": "web/tooltip" },
    "documentation": {
      "kendo-ui": "getting-started/web/tooltip/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/tooltip/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/tooltip/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/tooltip",
      "jsp-ui": "jsp/tooltip",
      "php-ui": "php/tooltip"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/tooltip",
      "jsp-ui": "jsp/tooltip",
      "php-ui": "php/tooltip"
    },
    "spriteCssClass": "tooltipIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "tooltip/index",
        "title": {
          "kendo-ui": "Basic usage of Kendo UI Tooltip Widget | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "Play with this Kendo UI Tooltip demo to get familiar with the performance of the component and its core functionality."
        }
      },
      {
        "text": "Loading content with AJAX",
        "url": "tooltip/ajax",
        "title": {
          "kendo-ui": "AJAX loaded content with Kendo UI Tooltip widget"
        },
        "meta": {
          "kendo-ui": "This example illustrates how the content in Kendo UI Tooltip widget can be loaded, using AJAX."
        },
        "requiresServer": "true"
      },
      {
        "text": "Content template",
        "url": "tooltip/template",
        "title": {
          "kendo-ui": "Content template in Kendo UI Tooltip widget | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "This example illustrates how the template can be used as content of Kendo UI Tooltip widget."
        }
      },
      {
        "text": "Events",
        "url": "tooltip/events",
        "title": {
          "kendo-ui": "Events in Kendo UI Tooltip | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "In this demo we will see how all events are triggered in Kendo UI Tooltip widget."
        }
      },
      {
        "text": "API",
        "url": "tooltip/api",
        "title": {
          "kendo-ui": "API for Kendo UI Tooltip component | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "This example shows how the API functions are enabled in Kendo UI Tooltip widget."
        }
      },
      {
        "text": "MVVM",
        "url": "tooltip/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Tooltip"
        },
        "meta": {
          "kendo-ui": "Events MVVM binding support in Kendo UI Tooltip"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "tooltip/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Tooltip"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI Tooltip"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Layout"
  },
  {
    "text": "TreeList",
    "name": "treelist",
    "component": "treelist",
    "pro": "true",
	"updated":  "true",
    "api": { "all": "web/treelist" },
    "documentation": {
      "kendo-ui": "getting-started/web/treelist/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/treelist/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/treelist/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/treelist",
      "jsp-ui": "jsp/treelist",
      "php-ui": "php/treelist"
    },
    "sources": {
      "kendo-ui": [
        {
          "name": "Sample service",
          "url": "~/content/service.html"
        }
      ]
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/treelist",
      "jsp-ui": "jsp/treelist",
      "php-ui": "php/treelist"
    },
    "spriteCssClass": "treeListIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "treelist/index",
        "updated": true,
        "title": {
          "kendo-ui": "Kendo UI TreeList widget | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "This demo illustrates the basic usage and functionality of Kendo UI jQuery TreeList widget which represents items in a hierarchical tree structure."
        }
      },
      {
        "text": "Binding to local data",
        "url": "treelist/local-data-binding",
        "title": {
          "kendo-ui": "Binding Kendo UI TreeList component to local data"
        },
        "meta": {
          "kendo-ui": "This example illustrates how the treelist can be bound to local data, so that all information is available."
        },
        "packages": [
          "!aspnet-mvc",
          "!aspnet-core"
        ]
      },
      {
        "text": "Binding to remote data",
        "url": "treelist/remote-data-binding",
        "title": {
          "kendo-ui": "Binding Kendo UI TreeList component to remote data"
        },
        "meta": {
          "kendo-ui": "This example illustrates how the treelist can be bound to remote data and each level is requested asynchronously."
        }
      },
      {
        "text": "Binding to OData-v4 service",
        "url": "treelist/odata",
        "title": {
          "kendo-ui": "Binding Kendo UI TreeList component to an OData-v4 service"
        },
        "meta": {
          "kendo-ui": "This example illustrates how the treelist can be bound to an OData-v4 service."
        },
        "description": {
          "kendo-ui": "<p>The TreeList widget supports binding to various endpoints. This example illustrates how you can use an OData-v4 service to populate the tree. The main points in the implementation are: <br/><br/> 1. Initially requesting only the top level items(root items). In the particular case a bound function is used. <br/> 2. Requesting only the child nodes for a given node, on expand, using the <b>id</b> field value defined in the model.</p>"
        }
      },
      {
        "text": "Drag & drop",
        "url": "treelist/dragdrop",
        "title": {
          "kendo-ui": "Kendo UI TreeList widget | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how to use drag & drop to allow users to rearrange treelist items"
        }
      },
      {
        "text": "Editing",
        "url": "treelist/editing",
        "title": {
          "kendo-ui": "Kendo UI TreeList widget | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how editing works within the Kendo UI jQuery TreeList widget which represents items in a hierarchical tree structure."
        }
      },
      {
        "text": "InCell editing",
        "url": "treelist/editing-incell",
        "new": true,
        "title": {
          "kendo-ui": "InCell data editing example for Kendo UI TreeList widget"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how the records in KendoTreeList can be easily modified with InCell editing."
        },
        "description": {
          "kendo-ui": "<p>In numerous scenarios there's a requirement not only to visualize data in a table structure, but to have the ability to manipulate this data and save changes. </p> <p>The Kendo UI TreeList widget supports data editing operations (create, update, destroy) via a simple configuration of its data source. All you have to do to enable data editing capabilities for the widget is to:</p> <ul> <li>set the TreeList's <strong>editable </strong>configuration option</li> <li>declare field definitions through the <strong>DataSource schema</strong></li> <li>configure the DataSource for performing CRUD data operations defining its <strong>transport-&gt;create/update/destroy</strong> attributes</li> </ul> <p>If you want to enable new records insertion, you can do that by enabling the relevant option in the TreeList toolbar. For deleting items you need to include a delete command column.</p> <p>The focus of this demo is to present how to enable batch editing operations by specifying the <strong>batch-&gt;true</strong> option via the TreeList's data source settings and enabling the batch editing for the TreeList by setting its <strong>editable</strong> property to <strong>incell</strong>. </p> <p>More details about the TreeList editing capabilities can be found in the documentation <a target=\"_blank\" href=\"https://docs.telerik.com/kendo-ui/controls/data-management/treelist/editing\">here</a>.</p>"
        }
      },
      {
        "text": "Popup editing",
        "url": "treelist/editing-popup",
        "title": {
          "kendo-ui": "Popup data editing example for Kendo UI TreeList widget"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how the records in KendoTreeList can be easily modified in a pop-up dialog."
        }
      },
      {
        "text": "Column resizing",
        "url": "treelist/column-resizing",
        "title": {
          "kendo-ui": "Columns resizing in Kendo UI TreeList control | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "This demo shows the column resizing feature of the KendoTreeList control."
        }
      },
      {
        "text": "Column reordering",
        "url": "treelist/column-reordering",
        "title": {
          "kendo-ui": "Columns reordering in Kendo UI TreeList control | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "This demo shows column moving and reordering feature of KendoTreeList control."
        }
      },
      {
        "text": "Column menu",
        "url": "treelist/column-menu",
        "title": {
          "kendo-ui": "Column menu in Kendo UI TreeList"
        },
        "meta": {
          "kendo-ui": "This demo shows column menu functionality of KendoTreeList widget."
        }
      },
      {
        "text": "Multi-column headers",
        "url": "treelist/multicolumnheaders",
        "new": true,
        "title": {
          "kendo-ui": "Multi-column headers in Kendo UI TreeList"
        },
        "meta": {
          "kendo-ui": "This demo shows multi-column headers functionality of KendoTreeList widget."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI TreeList supports multi-column headers by specifying column groups which incorporate inner column structures. Here the Personal Info and Location columns have nested columns, depicted via an array of column definitions. </p> <p>Operations like sorting and filtering are supported on each column level, regardless of the chosen multi-header pattern.</p>"
        }
      },
      {
        "text": "Frozen columns",
        "url": "treelist/frozen-columns",
        "title": {
          "kendo-ui": "Static columns of Kendo UI TreeList control | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "This demo shows locked columns feature of KendoTreeList control."
        }
      },
      {
        "text": "Aggregates",
        "url": "treelist/aggregates",
        "title": {
          "kendo-ui": "Aggregating option demo for Kendo TreeList jQuery control"
        },
        "meta": {
          "kendo-ui": "This example demonstrates the aggregate option for KendoTreeList. Use demo source code to enable the TreeList to calculate aggregated values."
        }
      },
      {
        "text": "Export to Excel",
        "url": "treelist/excel-export",
        "title": {
          "kendo-ui": "Exporting to MS Excel"
        },
        "meta": {
          "kendo-ui": "Export Kendo UI TreeList as Microsoft Excel file"
        },
        "packages": [
          "!offline",
          "!jsp",
          "!php",
          "!offline"
        ]
      },
      {
        "text": "Export to PDF",
        "url": "treelist/pdf-export",
        "title": {
          "kendo-ui": "Exporting to PDF"
        },
        "meta": {
          "kendo-ui": "Export Kendo UI TreeList as PDF file"
        },
        "packages": [
          "!offline",
          "!jsp",
          "!php"
        ]
      },
      {
        "text": "Events",
        "url": "treelist/events",
        "title": {
          "kendo-ui": "Example of using events in Kendo UI TreeList control"
        },
        "meta": {
          "kendo-ui": "This example demonstrates different events which are available in KendoTreeList widget and the code explains how you can use them for  your project."
        }
      },
      {
        "text": "API",
        "url": "treelist/api",
        "title": {
          "kendo-ui": "Kendo TreeList API Demo"
        },
        "meta": {
          "kendo-ui": "This demo shows how API Functions can manipulate the contents and behavior of Kendo UI TreeList widget."
        }
      },
      {
        "text": "MVVM",
        "url": "treelist/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI TreeList"
        },
        "meta": {
          "kendo-ui": "MVVM support for Kendo UI TreeList"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "treelist/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI TreeList"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI TreeList"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "Client-side Paging",
        "url": "treelist/client-side-paging",
        "new": true,
        "title": {
          "kendo-ui": "Kendo UI TreeList client-side paging demo"
        },
        "meta": {
          "kendo-ui": "This demo shows how Kendo UI TreeList supports client-side paging."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI treelist supports client-side paging for large sets of data. To enable the paging functionality configure the <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/api/javascript/ui/treelist/configuration/pageable\">pageable property</a>.</p>"
        }
      },
      {
        "text": "Localization",
        "url": "treelist/localization",
        "title": {
          "kendo-ui": "Kendo UI TreeList localization demo"
        },
        "meta": {
          "kendo-ui": "This demo shows how Kendo UI TreeList widget can be localized."
        },
        "group": "Accessibility and Internationalization",
        "description": {
          "kendo-ui": "<p>The Kendo UI treelist supports localization for the texts in its UI elements. You can either define the texts for these elements using the respective messages configuration via the API, or employ culture files for this purpose (which are shipped with the product distribution).</p>"
        },
        "packages": [
          "!php",
          "!jsp",
          "!aspnet-core"
        ]
      },
      {
        "text": "Keyboard navigation",
        "url": "treelist/keyboard-navigation",
        "new": true,
        "title": {
          "kendo-ui": "Keyboard navigation in Kendo UI TreeList"
        },
        "meta": {
          "kendo-ui": "Look at this Kendo UI TreeList demo to learn how different keyboard combinations could be used to navigate in the component."
        },
        "description": {
          "kendo-ui": "<p>This demo illustrates the keyboard support of the Kendo UI treelist widget, which provides quick access to available treelist features without the need to interact with mouse. Furthermore, applications which must cover accessibility standards for people with disabilities can directly benefit from it. </p> <p>You can focus the treelist using the <strong>ALT + W</strong> key combination, and then use the keyboard key shortcuts visualized above to interact with the widget. </p> <p>Further details about the keyboard support of the Kendo UI treelist widgets can be found in the <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/accessibility/keyboard-support\">Accessibility section</a> of the documentation.</p>"
        }
      }
    ],
    "category": "Data Management"
  },
  {
    "text": "TreeView",
    "name": "treeview",
    "component": "treeview",
    "pro": "true",
    "api": { "all": "web/treeview" },
    "documentation": {
      "kendo-ui": "getting-started/web/treeview/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/treeview/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/treeview/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/treeview",
      "jsp-ui": "jsp/treeview",
      "php-ui": "php/treeview"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/treeview",
      "jsp-ui": "jsp/treeview",
      "php-ui": "php/treeview"
    },
    "spriteCssClass": "treeViewIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "treeview/index",
        "title": {
          "kendo-ui": "Kendo UI TreeView widget | Kendo UI Web demo"
        },
        "meta": {
          "kendo-ui": "This demo illustrates the basic usage and functionality of Kendo UI jQuery Tree widget which represents items in a hierarchical tree structure."
        }
      },
      {
        "text": "Drag & drop",
        "url": "treeview/dragdrop",
        "title": {
          "kendo-ui": "Drag & Drop feature in Kendo UI TreeView control"
        },
        "meta": {
          "kendo-ui": "This example shows how items in Kendo TreeView can be dragged and dropped to a specific place. Use the demo source code to try this functionality of the HTML5 component."
        }
      },
      {
        "text": "Animation effects",
        "url": "treeview/animation",
        "title": {
          "kendo-ui": "Animation effects sample for Kendo UI jQuery Tree component"
        },
        "meta": {
          "kendo-ui": "This sample shows how you can add animation effects and expand animation by setting the specific options for Kendo UI TreeView widget."
        }
      },
      {
        "text": "Images",
        "url": "treeview/images",
        "title": {
          "kendo-ui": "Example of customized Kendo UI TreeView using images"
        },
        "meta": {
          "kendo-ui": "This demo shows you can add images to your Kendo UI TreeView control, as well as implement TreeView with sprites in your website or project."
        }
      },
      {
        "text": "Checkboxes",
        "url": "treeview/checkboxes",
        "title": {
          "kendo-ui": "Creating tree nodes with checkboxes | Kendo UI TreeView Demo"
        },
        "meta": {
          "kendo-ui": "This sample illustrates how you can easily create tree nodes with checkboxes by simply setting the child item of the checkboxes to true."
        }
      },
      {
        "packages": [
          "!aspnet-mvc",
          "!aspnet-core"
        ],
        "text": "Filter TreeView in dialog",
        "url": "treeview/filter-treeview-in-dialog",
        "title": {
          "kendo-ui": "Filtering Kendo UI TreeView with checkboxes nested in a dialog"
        },
        "meta": {
          "kendo-ui": "This demo shows how Kendo UI TreeView widget with checkboxes nested in dialog can be filtered."
        }
      },
      {
        "text": "Binding to local data",
        "url": "treeview/local-data-binding",
        "title": {
          "kendo-ui": "Binding to local data demo for Kendo UI TreeView control"
        },
        "meta": {
          "kendo-ui": "This demo shows how items in the tree are displayed with the default settings of Kendo UI TreeView and how the component can be easily bound to local data."
        }
      },
      {
        "text": "Binding to remote data",
        "url": "treeview/remote-data-binding",
        "title": {
          "kendo-ui": "Binding Kendo UI tree component to remote data"
        },
        "sources": {
          "kendo-ui": [
            {
              "name": "Sample service",
              "url": "~/content/service.html"
            }
          ]
        },
        "meta": {
          "kendo-ui": "This example illustrates how the hierarchical tree can be bound to remote data and thus the items in the tree are populated from the external source."
        }
      },
      {
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "text": "Binding to OData service",
        "url": "treeview/odata-binding",
        "title": {
          "kendo-ui": "Example of binding Kendo UI TreeView to OData service"
        },
        "sources": {
          "kendo-ui": [
            {
              "name": "Sample service",
              "url": "~/content/service.html"
            }
          ]
        },
        "meta": {
          "kendo-ui": "This sample shows how Kendo UI TreeView widget can be bound to oData service."
        }
      },
      {
        "text": "Templates",
        "url": "treeview/templates",
        "title": {
          "kendo-ui": "Example of templates for Kendo UI TreeView"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how tree nodes in Kendo UI TreeView component can be further customized by using templates."
        }
      },
      {
        "text": "Events",
        "url": "treeview/events",
        "title": {
          "kendo-ui": "Demo for Kendo UI TreeView widget events"
        },
        "meta": {
          "kendo-ui": "This sample shows built-in events in Kendo jQuery tree widget. Events are triggered when the user selects, collapses, expands, adds or removes an item on the list."
        }
      },
      {
        "text": "API",
        "url": "treeview/api",
        "title": {
          "kendo-ui": "Kendo UI TreeView API Example"
        },
        "meta": {
          "kendo-ui": "This demo shows the specific API functions, as well as DataSource interaction options, which control the behaviour of Kendo UI TreeView."
        }
      },
      {
        "text": "RTL support",
        "url": "treeview/right-to-left-support",
        "title": {
          "kendo-ui": "RTL Support in Kendo UI TreeView component"
        },
        "meta": {
          "kendo-ui": "Get familiar with the RTL support in Kendo UI TreeView widget, look at the example and use the source code to play with the demo!"
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "treeview/keyboard-navigation",
        "title": {
          "kendo-ui": "Kendo UI TreeView control | Keyboard support demo"
        },
        "meta": {
          "kendo-ui": "Look at the source code and play with the demo to find out more about the keyboard support feature in Kendo UI TreeView."
        }
      },
      {
        "text": "MVVM",
        "url": "treeview/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI TreeView"
        },
        "meta": {
          "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI TreeView"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "treeview/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI TreeView"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI TreeView"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Navigation"
  },
  {
    "text": "Upload",
    "name": "upload",
    "component": "upload",
    "pro": "true",
    "api": { "all": "web/upload" },
    "documentation": {
      "kendo-ui": "getting-started/web/upload/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/upload/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/upload/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/upload",
      "jsp-ui": "jsp/upload",
      "php-ui": "php/upload"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/upload",
      "jsp-ui": "jsp/upload",
      "php-ui": "php/upload"
    },
    "sources": {
      "kendo-ui": [
        {
          "name": "Sample service",
          "url": "~/Controllers/Public/UploadController.cs"
        }
      ]
    },
    "spriteCssClass": "uploadIcon",
    "packages": [
      "!offline"
    ],
    "items": [
      {
        "text": "Basic usage",
        "url": "upload/index",
        "title": {
          "kendo-ui": "Kendo UI Upload widget - example of core features"
        },
        "meta": {
          "kendo-ui": "This example shows the basic functionality and core features of Kendo UI jQuery file upload control."
        }
      },
      {
        "text": "Asynchronous Upload",
        "url": "upload/async",
        "title": {
          "kendo-ui": "jQuery Asynchronous File Upload Example | Kendo UI Upload Demo"
        },
        "meta": {
          "kendo-ui": "This example shows the async upload functionality of Kendo UI Upload control."
        }
      },
      {
        "text": "Chunk Upload",
        "url": "upload/chunkupload",
        "title": {
          "kendo-ui": "jQuery Chunk File Upload Example | Kendo UI Upload Demo"
        },
        "meta": {
          "kendo-ui": "This example shows the chunk upload functionality of Kendo UI Upload control."
        }
      },
      {
        "text": "Custom Drop Zone",
        "url": "upload/customdropzone",
        "title": {
          "kendo-ui": "Custom drop zone demo for File Upload | Kendo UI Upload Demo"
        },
        "meta": {
          "kendo-ui": "This example shows the custom drop zone functionality of Kendo UI Upload control."
        }
      },
      {
        "text": "Directory Upload",
        "url": "upload/directoryupload",
        "title": {
          "kendo-ui": "Directory upload demo for File Upload | Kendo UI Upload Demo"
        },
        "meta": {
          "kendo-ui": "This example shows directory upload of Kendo UI Upload control."
        }
      },
      {
        "text": "Validation",
        "url": "upload/validation",
        "title": {
          "kendo-ui": "Validation demo for File Upload | Kendo UI Upload Demo"
        },
        "meta": {
          "kendo-ui": "This example shows the validation functionality of Kendo UI Upload control."
        }
      },
      {
        "text": "Events",
        "url": "upload/events",
        "title": {
          "kendo-ui": "Example of handling events in Kendo UI Upload"
        },
        "meta": {
          "kendo-ui": "Learn with this example how to handle events, triggered by Kendo UI Upload widget."
        }
      },
      {
        "text": "API",
        "url": "upload/api",
        "title": {
          "kendo-ui": "API example for Kendo UI File Upload Control"
        },
        "meta": {
          "kendo-ui": "This demo shows API Functions of Kendo UI Upload component. Try the sample to see how to enable, disable the upload option and toggle the enabled state."
        }
      },
      {
        "text": "Templates",
        "url": "upload/templates",
        "title": {
          "kendo-ui": "Example of templates for Kendo UI Upload"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how to use templates with the Kendo UI Upload widget."
        }
      },
      {
        "text": "Initial Files",
        "url": "upload/initialfiles",
        "title": {
          "kendo-ui": "Example of initial files for Kendo UI Upload"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how to render initial files with the Kendo UI Upload widget."
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "RTL support",
        "url": "upload/right-to-left-support",
        "title": {
          "kendo-ui": "RTL support in Kendo UI Upload"
        },
        "meta": {
          "kendo-ui": "This Kendo UI demo illustrates how you can facilitate your RTL app users by using the RTL feature of Kendo UI Upload widget."
        }
      },
      {
        "text": "MVVM",
        "url": "upload/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Upload"
        },
        "meta": {
          "kendo-ui": "Enabled, events and visible MVVM binding support in Kendo UI Upload"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "upload/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Upload"
        },
        "meta": {
          "kendo-ui": "AngularJS support directives in Kendo UI Upload"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "text": "Window",
    "name": "window",
    "component": "window",
    "updated":  "true",
    "api": { "all": "web/window" },
    "documentation": {
      "kendo-ui": "getting-started/web/window/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/window/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/window/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/window",
      "jsp-ui": "jsp/window",
      "php-ui": "php/window"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/window",
      "jsp-ui": "jsp/window",
      "php-ui": "php/window"
    },
    "spriteCssClass": "windowIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "window/index",
        "title": {
          "kendo-ui": "Kendo UI Window Example | Kendo UI Web Demos"
        },
        "meta": {
          "kendo-ui": "This example demonstrates the basic usage of KendoWindow widget, one of the components which you can use to enhance the interaction in your web app."
        }
      },
      {
        "text": "Constrain movement",
        "url": "window/constrain-movement",
        "new": "true",
        "title": {
          "kendo-ui": "Kendo UI Window Example | Kendo UI Web Demos"
        },
        "meta": {
          "kendo-ui": "This example demonstrates how the movement of the KendoWindow widget could be restricted to a certain element."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI Window allows you to constrain its movement isnide a specific container element. This functionality is enabled through the <a class=\"hyperlink\" href=\"https://docs.telerik.com/kendo-ui/api/javascript/ui/window/configuration/draggable.containment\">draggable.containment</a> configuration option.</p><p style=\"padding-bottom: 0;\">The contaiment options has the following specifics:</p><ul><li>Overrides the <a class=\"hyperlink\" href=\"https://docs.telerik.com/kendo-ui/api/javascript/ui/window/configuration/appendto\">appentTo</a> setting.</li><li>The contaiment elemen should have CSS position set(relative, absolute or fixed).</li></ul>"
        }
      },
      {
        "text": "Customizing actions",
        "url": "window/actions",
        "title": {
          "kendo-ui": "Example of customizing actions in Kendo UI Window control"
        },
        "meta": {
          "kendo-ui": "This Kendo UI Window sample illustrates how client-side actions can be further customized in order to bring interactivity in your web app to a higher level."
        }
      },
      {
        "text": "Loading content with AJAX",
        "url": "window/ajax",
        "title": {
          "kendo-ui": "AJAX loaded content with Kendo UI Window widget"
        },
        "meta": {
          "kendo-ui": "This example illustrates how content in Kendo UI window widget can be loaded, using AJAX."
        },
        "requiresServer": "true"
      },
      {
        "text": "Animation effects",
        "url": "window/animation",
        "title": {
          "kendo-ui": "Animation effects demo for Kendo UI window widget"
        },
        "meta": {
          "kendo-ui": "This sample illustrates the animation effects in Kendo UI window control. Just play with animation settings to change the interactivity of the control."
        }
      },
      {
        "text": "Events",
        "url": "window/events",
        "title": {
          "kendo-ui": "Events in Kendo UI Window demo"
        },
        "meta": {
          "kendo-ui": "This demo shows how to fire events in  Kendo UI jQuery window control. Refresh, activate, open, dragend, dragstart are some of the events which you can trigger."
        },
        "requiresServer": "true"
      },
      {
        "text": "API",
        "url": "window/api",
        "title": {
          "kendo-ui": "Example of Kendo UI Window API"
        },
        "meta": {
          "kendo-ui": "This sample shows how you can use the API of kendoWindow widget to refresh the content of the window, open and close it."
        },
        "requiresServer": "true"
      },
      {
        "text": "RTL support",
        "url": "window/right-to-left-support",
        "title": {
          "kendo-ui": "Right-to-Left window position of Kendo UI Window control"
        },
        "meta": {
          "kendo-ui": "This demo shows how Kendo UI Window widget supports right-to-left direction of the window to provide best end-user experience."
        }
      },
      {
        "text": "Keyboard navigation",
        "url": "window/keyboard-navigation",
        "title": {
          "kendo-ui": "Keyboard navigation support | Kendo UI Window Demo"
        },
        "meta": {
          "kendo-ui": "The sample demonstrates how the keyboard navigation feature is integrated in the powerful Kendo UI Window."
        }
      },
      {
        "text": "MVVM",
        "url": "window/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Window"
        },
        "meta": {
          "kendo-ui": "Events and visible MVVM binding support in Kendo UI Window"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "window/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Window"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI Window"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Layout"
  },
  {
    "packages": [
      "!jsp",
      "!php"
    ],
    "text": "DataSource",
    "name": "datasource",
    "component": "data-source",
    "api": {
      "all": "framework/datasource"
    },
    "documentation": {
      "kendo-ui": "getting-started/framework/datasource/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/data-source"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/data-source"
    },
    "spriteCssClass": "dataSourceIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "datasource/index",
        "title": {
          "kendo-ui": "Kendo UI DataSource Demo"
        },
        "meta": {
          "kendo-ui": "This example demonstrates the basic functionality of Kendo UI DataSource which is used for data operations and manipulations in Kendo jQuery web widgets."
        }
      },
      {
        "packages": [ "!aspnet-mvc", "!aspnet-core", "!jsp", "!php" ],
        "text": "Binding to remote data",
        "url": "datasource/remote-data-binding",
        "title": {
          "kendo-ui": "Kendo UI DataSource binding to a remote data service"
        },
        "sources": {
          "kendo-ui": [
            {
              "name": "Sample service",
              "url": "~/content/service.html"
            }
          ]
        },
        "meta": {
          "kendo-ui": "This sample illustrates how Kendo UI DataSource component can be bound to a remote data service."
        }
      },
      {
        "packages": [ "!aspnet-mvc", "!aspnet-core", "!jsp", "!php" ],
        "text": "Binding to XML",
        "url": "datasource/xml-data",
        "title": {
          "kendo-ui": "Kendo UI DataSource bound to XML | Kendo UI Web Demos"
        },
        "meta": {
          "kendo-ui": "This example shows how you can bind Kendo UI Data Source control to XML Data format."
        },
        "requiresServer": "true"
      },
      {
        "packages": [ "!aspnet-mvc", "!aspnet-core", "!jsp", "!php" ],
        "text": "Remote data operations",
        "url": "datasource/remote-operations",
        "title": {
          "kendo-ui": "Remote data operations | Kendo UI DataSource Demo"
        },
        "sources": {
          "kendo-ui": [
            {
              "name": "Sample service",
              "url": "~/content/service.html"
            }
          ]
        },
        "meta": {
          "kendo-ui": "This sample demonstrates how to configure remote data operations such as paging and sorting of Kendo UI jQuery Data Source."
        }
      },
      {
        "packages": [ "!aspnet-mvc", "!aspnet-core", "!jsp", "!php" ],
        "text": "Local data operations",
        "url": "datasource/local-operations",
        "title": {
          "kendo-ui": "Example of local data operations in Kendo UI DataSource component"
        },
        "meta": {
          "kendo-ui": "This sample shows how to configure the functionality of local data operations in Kendo UI DataSource. The component supports paging, sorting and filtering."
        }
      },
      {
        "text": "Shared DataSource",
        "url": "datasource/shared-datasource",
        "title": {
          "kendo-ui": " Shared DataSource Demo | Kendo UI Web demos"
        },
        "sources": {
          "kendo-ui": [
            {
              "name": "Sample service",
              "url": "~/content/service.html"
            }
          ]
        },
        "meta": {
          "kendo-ui": "This example demonstrates a shared DataSource which can be created to enable multiple UI widgets to bind to the same data collection."
        },
        "requiresServer": "true"
      }
    ],
    "category": "Framework"
  },
  {
    "packages": [
      "!aspnet-mvc",
      "!jsp",
      "!php",
      "!aspnet-core"
    ],
    "category": "Framework",
    "text": "Drawing API",
    "component": "drawing-api",
    "name": "drawing",
    "spriteCssClass": "drawingIcon",
    "items": [
      {
        "text": "Basic Usage",
        "url": "drawing/index",
        "title": {
          "kendo-ui": "Kendo UI Drawing API"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how the Kendo UI Drawing API can be used to draw basic shapes."
        }
      },
      {
        "text": "Manipulating Paths",
        "url": "drawing/paths",
        "title": {
          "kendo-ui": "Kendo UI Drawing API"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how the Kendo UI Drawing API can be used to manipulate paths."
        }
      },
      {
        "text": "Tooltip",
        "url": "drawing/tooltip",
        "title": {
          "kendo-ui": "Kendo UI Drawing Tooltip"
        },
        "meta": {
          "kendo-ui": "This demo illustrates using tooltip the Kendo UI Drawing elements"
        }
      }
    ]
  },
  {
    "packages": [
      "!jsp",
      "!php",
      "!aspnet-core"
    ],
    "category": "Framework",
    "text": "PDF Export",
    "name": "export",
    "spriteCssClass": "drawingIcon",
    "items": [
      {
        "text": "Document Export",
        "url": "pdf-export/index",
        "packages": [
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "title": {
          "kendo-ui": "Kendo UI Drawing API Export functionality"
        },
        "meta": {
          "kendo-ui": "This demo shows how to export HTML elements and Drawing surfaces to PDF, PNG Images or SVG and save them directly in the browser."
        }
      },
      {
        "text": "Page Layout",
        "url": "pdf-export/page-layout",
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "title": {
          "kendo-ui": "Kendo UI PDF Export customizations"
        },
        "meta": {
          "kendo-ui": "This demo shows how to customize layout and style of PDF exports."
        }
      }
    ]
  },
  {
    "packages": [
      "!jsp",
      "!php",
      "!aspnet-core"
    ],
    "text": "Globalization",
    "name": "globalization",
    "component": "globalization",
    "api": { "all": "framework/kendo" },
    "documentation": {
      "kendo-ui": "getting-started/framework/globalization/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/globalization"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/globalization"
    },
    "spriteCssClass": "globalizationIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "globalization/index",
        "title": {
          "kendo-ui": "Globalization example in Kendo UI Web framework"
        },
        "meta": {
          "kendo-ui": "This is an example of globalization which is supported in Kendo UI Web framework."
        },
        "packages": [
          "!aspnet-core"
        ]
      }
    ],
    "category": "Framework"
  },
  {
    "packages": [
      "!aspnet-mvc",
      "!jsp",
      "!php",
      "!aspnet-core"
    ],
    "text": "Integration with JS libraries",
    "name": "integration",
    "spriteCssClass": "integrationIcon",
    "items": [
      {
        "text": "Kendo UI + Handlebars",
        "url": "integration/index",
        "title": {
          "kendo-ui": "Integrating Handlebars templates with Kendo UI Web examples"
        },
        "sources": {
          "kendo-ui": [
            {
              "name": "Sample service",
              "url": "~/content/service.html"
            }
          ]
        },
        "meta": {
          "kendo-ui": "This demo illustrates how Handlebars templates can be integrated with the robust Kendo UI framework for web app development."
        }
      },
      {
        "text": "Kendo UI + Twitter Bootstrap",
        "url": "integration/bootstrap",
        "title": {
          "kendo-ui": "Integrating Twitter Bootstrap with Kendo UI responsive webapp example"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how Twitter Bootstrap can be integrated with the Kendo UI framework into a responsive web application."
        }
      },
      {
        "text": "Kendo UI + Angular2",
        "url": "integration/angular2",
        "title": {
          "kendo-ui": "Integrating Angular 2 with Kendo UI (experimental)"
        },
        "sources": {
          "kendo-ui": [
            {
              "name": "angular2-app.ts",
              "url": "~/content/web/integration/angular2-app.ts"
            }
          ]
        },
        "meta": {
          "kendo-ui": "This demo illustrates how Angular 2 can be integrated with the Kendo UI framework"
        }
      },
      {
        "text": "Kendo UI + WebComponents",
        "url": "integration/webcomponents",
        "title": {
          "kendo-ui": "Integrating Kendo UI widgets with WebComponents (experimental)"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how Kendo UI widget can be initialized and used the WebComponents way"
        }
      }
    ],
    "category": "Framework"
  },
  {
    "packages": [
      "!aspnet-mvc",
      "!jsp",
      "!php",
      "!aspnet-core"
    ],
    "text": "MVVM",
    "component": "mvvm",
    "name": "mvvm",
    "api": { "all": "framework/kendo" },
    "documentation": {
      "kendo-ui": "getting-started/framework/mvvm/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/mvvm"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/mvvm"
    },
    "spriteCssClass": "mvvmIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "mvvm/index",
        "title": {
          "kendo-ui": "Kendo UI MVVM Demo"
        },
        "meta": {
          "kendo-ui": "This example demonstrates the basic usage and functionality of Kendo UI MVVM which helps you separate the data from the UI."
        }
      },
      {
        "text": "HTML element binding",
        "url": "mvvm/elements",
        "title": {
          "kendo-ui": "Example of HTML element binding in Kendo UI MVVM"
        },
        "meta": {
          "kendo-ui": "This Kendo UI MVVM demo shows how the html binding sets the HTML content of the target DOM element to a View-Model state."
        }
      },
      {
        "text": "Widget binding",
        "url": "mvvm/widgets",
        "title": {
          "kendo-ui": "Example of jQuery widgets bound to Kendo UI MVVM"
        },
        "meta": {
          "kendo-ui": "This example shows how Kendo UI jQuery widgets can be bound to Kendo UI MVVM."
        }
      },
      {
        "text": "Attribute binding",
        "url": "mvvm/attributes",
        "title": {
          "kendo-ui": "Kendo UI MVVM attribute binding example"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how attributes are bound in Kendo UI MVVM."
        }
      },
      {
        "text": "Style binding",
        "url": "mvvm/style",
        "title": {
          "kendo-ui": "Example of using the style binding in Kendo UI MVVM"
        },
        "meta": {
          "kendo-ui": "This demo shows how the style binding sets the style attributes to the target DOM element."
        }
      },
      {
        "text": "Event binding",
        "url": "mvvm/event",
        "title": {
          "kendo-ui": "Kendo UI MVVM event binding demo"
        },
        "meta": {
          "kendo-ui": "This example shows the events which are bound to an attribute in MVVM."
        }
      },
      {
        "text": "Source and template binding",
        "url": "mvvm/source",
        "title": {
          "kendo-ui": "Source and template binding demo | Kendo UI MVVM"
        },
        "meta": {
          "kendo-ui": "This demo shows how the source binding sets the HTML content of the target element by rendering a template with a View-model value."
        }
      },
      {
        "text": "Strongly typed binding",
        "url": "mvvm/types",
        "title": {
          "kendo-ui": "Strongly typed binding demo | Kendo UI MVVM"
        },
        "meta": {
          "kendo-ui": "This demo shows how the View-model fields can be updated using strongly typed 'checked' and 'value' bindings"
        }
      },
      {
        "text": "CSS class binding",
        "url": "mvvm/css",
        "title": {
          "kendo-ui": "CSS class binding | Kendo UI MVVM"
        },
        "meta": {
          "kendo-ui": "This demo shows how CSS classes can be assigned based on a View-model field"
        }
      },
      {
        "text": "Remote binding",
        "url": "mvvm/remote-binding",
        "title": {
          "kendo-ui": "Remote binding in Kendo UI MVVM framework"
        },
        "sources": {
          "kendo-ui": [
            {
              "name": "Sample service",
              "url": "~/content/service.html"
            }
          ]
        },
        "meta": {
          "kendo-ui": "This example shows how remote data is bound  in Kendo UI MVVM framework."
        }
      },
      {
        "text": "Custom binding",
        "url": "mvvm/custom",
        "title": {
          "kendo-ui": "Example of creating custom bindings in Kendo UI MVVM"
        },
        "meta": {
          "kendo-ui": "This example demonstrates how custom bindings can be created in Kendo UI MVVM. Try the demo to see how a custom binding is declared in the View."
        }
      }
    ],
    "category": "Framework"
  },
  {
    "packages": [
      "!aspnet-mvc",
      "!jsp",
      "!php",
      "!offline",
      "!aspnet-core"
    ],
    "text": "Single-Page App",
    "component": "spa",
    "name": "spa",
    "api": { "all": "framework/kendo" },
    "documentation": {
      "kendo-ui": "getting-started/framework/spa/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/spa"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/spa"
    },
    "spriteCssClass": "spaIcon",
    "items": [
      {
        "text": "Launch",
        "url": "spa/index",
        "title": {
          "kendo-ui": "Build Single-Page app with Kendo UI Web framework | Kendo UI Demos"
        },
        "meta": {
          "kendo-ui": "In this example we will demonstrate the basic usage and functionality of Kendo UI Web for building single-page applications."
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!offline",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Framework"
  },
  {
    "packages": [
      "!aspnet-mvc",
      "!jsp",
      "!php",
      "!aspnet-core"
    ],
    "text": "Templates",
    "name": "templates",
    "component": "templates",
    "api": { "all": "framework/kendo" },
    "documentation": {
      "kendo-ui": "getting-started/framework/templates/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/templates"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/templates"
    },
    "spriteCssClass": "templatesIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "templates/index",
        "title": {
          "kendo-ui": "Kendo UI jQuery Templates Demo"
        },
        "meta": {
          "kendo-ui": "This example demonstrates the basic functionality of Kendo UI jQuery templates which can be used in Kendo UI Web framework."
        }
      },
      {
        "text": "Expressions",
        "url": "templates/expressions",
        "title": {
          "kendo-ui": "Examples of different Kendo UI jQuery templates"
        },
        "meta": {
          "kendo-ui": "These examples show different expressions of Kendo UI Templates which can be represented as a basic template, script elements, encoding HTML and JS code inside the template definition."
        }
      }
    ],
    "category": "Framework"
  },
  {
    "packages": [
      "!jsp",
      "!php"
    ],
    "text": "Validator",
    "component": "validation",
    "name": "validator",
    "api": { "all": "web/validator" },
    "documentation": {
      "kendo-ui": "getting-started/framework/validator/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/validation"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/validator"
    },
    "spriteCssClass": "validatorIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "validator/index",
        "title": {
          "kendo-ui": "Kendo UI Validator Demo"
        },
        "meta": {
          "kendo-ui": "This demo illustrates the core functionality of Kendo UI Validator component in Kendo UI Web framework."
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "Custom validation",
        "url": "validator/custom-validation",
        "title": {
          "kendo-ui": "Custom rule Kendo UI Validator Demo"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how to implement a custom validation rule for the Kendo UI Validator component in Kendo UI Web framework."
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "validator/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Validator"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI Validator"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Editors"
  },
  {
    "packages": [
      "!jsp",
      "!php"
    ],
    "text": "Styling",
    "name": "styling",
    "spriteCssClass": "stylingIcon",
    "items": [
      {
        "text": "Forms",
        "url": "styling/index",
        "title": {
          "kendo-ui": "jQuery forms styling demo | Kendo UI Web framework"
        },
        "meta": {
          "kendo-ui": "This example illustrates how jQuery and HTML5-based forms can be styled with Kendo UI Web."
        },
        "packages": [
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "Panels",
        "url": "styling/panels",
        "title": {
          "kendo-ui": "Panels styling example | Kendo UI Web app framework"
        },
        "meta": {
          "kendo-ui": "This demo shows how different styling can be applied to panels in Kendo UI Web."
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "Checkboxes",
        "url": "styling/checkboxes",
        "title": {
          "kendo-ui": "jQuery icons styling example | Kendo UI Web demos"
        },
        "meta": {
          "kendo-ui": "This example shows how different styling can be applied to icons by using Kendo UI Web framework."
        },
        "packages": [
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "Radio buttons",
        "url": "styling/radios",
        "title": {
          "kendo-ui": "jQuery icons styling example | Kendo UI Web demos"
        },
        "meta": {
          "kendo-ui": "This example shows how different styling can be applied to icons by using Kendo UI Web framework."
        },
        "packages": [
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Interactivity & UX"
  },
  {
    "text": "Chat",
    "name": "chat",
    "component": "chat",
    "api": { "all": "web/chat" },
    "pro": "true",
    "updated": "true",
    "documentation": {
      "kendo-ui": "getting-started/web/chat/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chat/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/chat/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/chat",
      "jsp-ui": "jsp/chat",
      "php-ui": "php/chat"
    },
    "spriteCssClass": "chatIcon",
    "items": [
      {
        "text": "Insurance",
        "url": "chat/index",
        "title": {
          "kendo-ui": "Connecting Kendo UI Chat widget to Google Dialogflow"
        },
        "meta": {
          "kendo-ui": "How jQuery-based Chat widget works, view demo source code of Kendo UI Chat."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI Chat widget allows for integration with any bot framework, due to its simplicity, flexible API and customizable templates.</p><p>This demo demonstrates how the widget can be connected to a chat bot created in Google's <a href=\"https://dialogflow.com\">Dialogflow</a>. The sample shows off out of the box features of the Chat widget, such as the hero cards and suggested actions, as well as the ability to define custom templates to fit any custom payload, returned by the service.</p>"
        }
      },
      {
        "text": "Travel",
        "url": "chat/travel",
        "title": {
          "kendo-ui": "Connecting Kendo UI Chat widget to Microsoft Bot Framework"
        },
        "meta": {
          "kendo-ui": "How jQuery-based Chat widget works, view demo source code of Kendo UI Chat."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI Chat widget allows for integration with any bot framework, due to its simplicity, flexible API and customizable templates.</p><p>This demo demonstrates how the widget can be connected to a chat bot created in Microsoft's <a href=\"https://dev.botframework.com\">Bot Framework</a>, using the <a href=\"https://github.com/Microsoft/BotFramework-DirectLineJS\">DirectLineJS</a> client library. The sample shows off out of the box features of the Chat widget, such as the hero cards and suggested actions, as well as the ability to define custom components, which let you use javascript to render any content. In this particular case we use the <a href=\"https://github.com/Microsoft/AdaptiveCards\">AdaptiveCards</a> client API to render the adaptive cards returned by the service.</p>"
        }
      },
      {
        "text": "Healthcare",
        "url": "chat/healthcare",
        "title": {
          "kendo-ui": "Connecting Kendo UI Chat widget to Microsoft Bot Framework"
        },
        "meta": {
          "kendo-ui": "How jQuery-based Chat widget works, view demo source code of Kendo UI Chat."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI Chat widget allows for integration with any bot framework, due to its simplicity, flexible API and customizable templates.</p><p>This demo demonstrates how the widget can be connected to a chat bot created in Microsoft's <a href=\"https://dev.botframework.com\">Bot Framework</a>, using the <a href=\"https://github.com/Microsoft/BotFramework-DirectLineJS\">DirectLineJS</a> client library. The sample shows off out of the box features of the Chat widget, such as the hero cards and suggested actions, as well as the ability to define custom components, which let you use javascript to render any content. In this particular case we use the <a href=\"https://github.com/Microsoft/AdaptiveCards\">AdaptiveCards</a> client API to render the adaptive cards returned by the service.</p>"
        }
      },
      {
        "text": "Toolbar",
        "url": "chat/toolbar",
        "new":  "true",
        "title": {
          "kendo-ui": "Connecting Kendo UI Chat widget to Microsoft Bot Framework"
        },
        "meta": {
          "kendo-ui": "How jQuery-based Chat widget works, view demo source code of Kendo UI Chat."
        },
        "description": {
          "kendo-ui": "<p>This demo shows how you can define tools in the Chat's toolbar and incorporate other widgets/components and JavaScript logic to create various commands.</p>"
        }
      }
    ],
    "category": "Conversational UI"
  },
  {
    "text": "Area Charts",
    "component": "charts",
    "name": "area-charts",
    "pro": "true",
    "api": { "all": "dataviz/chart" },
    "documentation": {
      "kendo-ui": "getting-started/dataviz/chart/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "spriteCssClass": "chartAreaIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "area-charts/index",
        "title": {
          "kendo-ui": "Kendo UI jQuery-based Area Charts Demo"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how Kendo UI Area Charts component can be added to your web page in order to visualize quantitive data. Learn how to define your area chart."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart is a data visualization widget which allows you to output a graphical representation of your data. It is useful when you would like to utilize modern browser technologies such as SVG or Canvas (with a fallback to VML for older IE versions) for interactive data visualizations. The chart supports various chart types such as area, bar, line, scatter, pie and donut, etc. as well as stock (OHLC).</p><p>Area chart type is suitable for displaying quantitative data as continuous lines that pass through points defined by their items' values. The portion of the graph beneath the lines is filled with a particular color for each series. The different colors in an Area chart are useful for emphasizing changes in values from several sets of similar data. </p><br/><p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><br/><p>The chart can fetch data for its series from either local or remote data source. It can also use the Kendo UI DataSource as a mediator for processing data.</p><br/><p>Additional information about how to use the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">this section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "Stacked area",
        "url": "area-charts/stacked-area",
        "title": {
          "kendo-ui": "Kendo UI jQuery stacked area chart example"
        },
        "meta": {
          "kendo-ui": "This demo shows how the stacked area is created with KendoChart. Learn how to visualize series that should be stacked in the chart."
        },
        "description": {
          "kendo-ui": "<p>Multiple series rendered in the same area chart will overlap one another by default. To avoid that, you have the option to stack these series on top of one another, so that the data values at each x-value are summed. In an area chart, the value for each series will always be stacked relative to the preceding one.</p> <p>You can enable the stack feature through the seriesDefault,stack setting.</p> <p>For more information inspect the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-seriesDefaults\">seriesDefault option</a> in the documentation.</p>"
        },
        "group": "Area Chart Types"
      },
      {
        "text": "100% Stacked area",
        "url": "area-charts/stacked100-area",
        "title": {
          "kendo-ui": "Kendo UI jQuery 100% stacked area chart example"
        },
        "meta": {
          "kendo-ui": "This demo shows how a 100% stacked area chart is created with KendoChart. Learn how to visualize series that should be stacked to 100% in the chart."
        },
        "description": {
          "kendo-ui": "<p>The Area chart type supports 100% stacking, where the stacked series value are rescaled such that they add up to 100%.</p> <p>To enable the 100% stack feature set the seriesDefault-&gt; stack-&gt;type setting.</p> <p>For more information inspect the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-seriesDefaults\">seriesDefaults option</a> in the documentation.</p>"
        }
      },
      {
        "text": "Stepped Area",
        "url": "area-charts/step-area",
        "title": {
          "kendo-ui": "Example of using Kendo UI Area Chart with step line style"
        },
        "meta": {
          "kendo-ui": "This demo shows how to configure step line style for the Kendo UI Area Chart"
        },
        "description": {
          "kendo-ui": "<p>The Stepped Area chart is a variation of area chart where each data point from the series is connected with vertical and horizontal lines to form a step-like progression. This type of area visualization is useful when you want to highlight the increase or decrease in values over time.</p> <p>You can configure a stepped area chart through the series-&gt; line-&gt; style = \"line\" settings of Kendo UI chart widget.</p>"
        }
      },
      {
        "text": "Smooth Area",
        "url": "area-charts/smooth-area",
        "title": {
          "kendo-ui": "Example of using Kendo UI Area Chart with smooth line (spline) style"
        },
        "meta": {
          "kendo-ui": "This demo shows how to configure smooth line (spline) style for the Kendo UI Area Chart"
        },
        "description": {
          "kendo-ui": "<p>This demo illustrates how to configure smooth line (spline) style for the Kendo UI area chart.</p> <p>A Spline chart is a form of line/area chart where each data point from the series is connected with a curved line, which represents a rough approximation of the missing data points.</p> <p>You can specify a smooth line area chart to be rendered through the series -&gt; line -&gt; style = \"smooth\" settings of the chart widget.</p>"
        }
      },
      {
        "text": "Date axis",
        "url": "area-charts/date-axis",
        "title": {
          "kendo-ui": "Date axis sample for Kendo UI Area Charts"
        },
        "meta": {
          "kendo-ui": "This demo shows how you can set specific base date units in your Kendo UI Area Chart to help you visualize a seasonal trend in your app."
        },
        "description": {
          "kendo-ui": "<p>You can scale the date axis of your Kendo UI area chart to get a better visualization of the date axis values in your app. This can be done by altering:</p> <ul> <li>The base date unit of the x-axis through the categoryAxis.baseUnit attribute, which takes seconds, minutes, hours, days, week, months and years</li> <li>The default aggregates of the series through the series.aggregate attribute, which takes max, min, sum, avg and count.</li> </ul>"
        },
        "group": "Functionality"
      },
      {
        "text": "Logarithmic axis",
        "url": "area-charts/logarithmic-axis",
        "title": {
          "kendo-ui": "Logarithmic axis sample for Kendo UI Area Charts"
        },
        "meta": {
          "kendo-ui": "This demo shows how you can use a logarithmic axis for the Kendo UI Area Chart."
        },
        "description": {
          "kendo-ui": "<p>A logarithmic axis is a special numeric axis that transforms the actual values by using a logarithmic function with a particular base. A logarithmic axis is useful for displaying values that cover different orders of magnitude because it lets large values display together with small values in a more condensed scale than the default linear axis.</p> <p>This example represents how you can use a logarithmic axis for the Kendo UI area chart by setting the valueAxis-&gt; type attribute to log.</p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "Multi-axis",
        "url": "area-charts/multiple-axes",
        "title": {
          "kendo-ui": "Multi-axis demo for Kendo UI Area Charts component"
        },
        "meta": {
          "kendo-ui": "Ensure the best performance of HTML5 charting and visualize data on multiple axis with Kendo UI Area Charts  in order to provide solid business reports for end users."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI area chart supports multiple axis which is a feature applicable for a variety of scenarios. This helps you leverage the best charting performance and visualize data on any number axis to provide solid business reports for your users.</p> <p>The example above shows a hybrid car range report visualized through four value axes: <em>miles</em>, <em>km</em>, <em>miles per gallon</em> and <em>liters per 100km</em>. Note that each of them has an unique name which is set through the <strong>valueAxis.title</strong> property. You can also set the <strong>categoryAxis.axisCrossingValues</strong> array values to specify the alignment of the value axes.</p>"
        }
      },
      {
        "text": "Error Bars",
        "url": "area-charts/error-bars",
        "title": {
          "kendo-ui": "Example of using ErrorBars for Kendo UI Area Chart"
        },
        "meta": {
          "kendo-ui": "This demo shows how to use ErrorBars for Kendo UI Area Chart"
        },
        "description": {
          "kendo-ui": "<p>This sample demonstrates how you can use Error Bars in Kendo UI area chart to show variability of data. The Error Bars are specified as part of the series -&gt; errorBars chart setting and are offered by the following series types: Area, Vertical Area, Column, Bar, Line, Vertical Line, Scatter and ScatterLine.</p> <p>The error bars support statistical calculations based on the series data. The supported types are <a href=\"http://en.wikipedia.org/wiki/Standard_error\">standard error</a>, <a href=\"http://en.wikipedia.org/wiki/Standard_deviation\">population standard deviation</a> and so on. To specify standard deviation, you should using chart setting as in this example, i.e. series -&gt; errorBars = \"stddev\"</p> <p>You can find more information in the following help article: <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/error-bars\">Error Bars</a>.</p>"
        }
      },
      {
        "text": "Binding to remote data",
        "url": "area-charts/remote-data-binding",
        "title": {
          "kendo-ui": "Example of jQuery & HTML5 Kendo UI Area Chart bound to remote data"
        },
        "meta": {
          "kendo-ui": "This demo shows how Kendo UI Area Chart can be bound to remote data by configuring the DataSource transport which defines how the DataSource interacts with remote data."
        },
        "description": {
          "kendo-ui": "<p>The data in the Kendo UI chart can be streamed from a local or remote storage, thus being flexible enough to visualize information from any data storage.</p> <p>For remote data binding you need to specify a remote endpoint or web service (REST) returning data in JSON/JSONP format and utilize the Kendo UI DataSource in-between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example we demonstrate how Kendo UI chart can be bound to remote data by configuring the DataSource transport, which defines how the DataSource interacts with remote data.</p> <p>Discover more information about the data-binding capabilities of the chart widget in this <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\">help article</a>.</p>"
        },
        "group": "Data Binding",
        "requiresServer": "true"
      },
      {
        "text": "Binding to local data",
        "url": "area-charts/local-data-binding",
        "title": {
          "kendo-ui": "Kendo UI Area Charts binding to local data example"
        },
        "meta": {
          "kendo-ui": "This sample demonstrates that Kendo UI HTML5 chart can use existing objects as data points."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its data source property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series and categoryAxis values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "Binding to grouped data",
        "url": "area-charts/grouped-data",
        "title": {
          "kendo-ui": "Kendo UI Area Charts | Example of binding to grouped data"
        },
        "meta": {
          "kendo-ui": "With this example you will learn how to bind grouping data to Kendo UI Area Charts."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart can be bound to grouped data using <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/data/datasource\"> Kendo UI DataSource</a> as a mediator. To do so you can follow the steps below:</p> <ol> <li>Feed data to the chart via <a href=\"http://docs.telerik.com/kendo-ui/framework/datasource/overview\"> Kendo UI DataSource instance</a>.</li> <li>Set the <a href=\"http://docs.telerik.com/kendo-ui/framework/datasource/basic-usage#working-with-grouped-data\">DataSource.group.field property</a> to the name (e.g., the &ldquo;symbol&rdquo; field) of the column in the underlying data which will be the criteria for grouping the chart items into series</li> <li>Bind the Y values of the series to the corresponding data source field (e.g., the &ldquo;close&rdquo; field)</li> <li>Bind the Category Axis to the corresponding field (e.g., the &ldquo;date&rdquo; field)</li> </ol> <p><br /> This will result in as many series as the number of distinct values in the DataSource.group.field column. &nbsp;Since the &ldquo;symbol&rdquo; field in this example contains three distinct values (&ldquo;1. GOOG (close)&rdquo;, &ldquo;2. AAPL (close)&rdquo; and &ldquo;3. AMZN (close)&rdquo;) the chart will create three series as well.</p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "MVVM",
        "url": "area-charts/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Chart"
        },
        "meta": {
          "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Chart"
        },
        "description": {
          "kendo-ui": "<p>The MVVM feature of the Kendo UI framework provides powerful two-way data binding capabilities, built on the popular Model-View-ViewModel concept. In this way you can easily make attribute values for widgets observable and modify them automatically when changes are applied in the data source, or alter the underlying data when the user interacts with the UI.</p> <p>In this example we show how to configure the Kendo UI chart to make use of the MVVM functionality exposed by the framework. For this purpose we create a <strong>viewmodel</strong> instance (with <strong>kendo.observable</strong> call) which wraps the chart data source, and instantiate the chart, its attributes and binding definition using <strong>data-</strong> attributes. The important detail to wire the viewmodel is to invoke <strong>kendo.bind</strong> to the container element of the chart, passing the viewmodel as a second argument. Review the code snippets from the demo for more info.</p> <p>Details on the MVVM features of the Kendo UI framework can be obtained from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/mvvm/overview\">this chapter</a> of the documentation.</p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "requiresServer": "true"
      },
      {
        "text": "AngularJS",
        "url": "area-charts/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Chart"
        },
        "meta": {
          "kendo-ui": "AngularJS directives support in Kendo UI Chart"
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart features inborn integration with AngularJS using directives which are officially supported as part of the product. To make use of this integration, you need to reference the Angular scripts in your app and register the module incorporating the Kendo UI directives in the following way:</p><p> angular.module(\"KendoDemos\", [ \"kendo.directives\" ])</p><p>Thus you can utilize the AngularJS framework in combination with our chart for apps which could benefit from such integrations. Further, you can specify chart options as fields in the $scope and then associate them via the relevant <b>k-</b> chart Angular attribute definition. This is demonstrated in the demo at hand.</p><p>Additional information about how to use Kendo UI widgets with AngularJS you can gather from <a target=\"blank\" href=\"http://docs.telerik.com/kendo-ui/AngularJS/introduction#overview\">this help resource.</a></p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "requiresServer": "true"
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Bar Charts",
    "name": "bar-charts",
    "component": "charts",
    "pro": "true",
    "api": { "all": "dataviz/chart" },
    "documentation": {
      "kendo-ui": "getting-started/dataviz/chart/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "spriteCssClass": "chartBarIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "bar-charts/index",
        "title": {
          "kendo-ui": "Demo for Kendo UI Bar Chart"
        },
        "meta": {
          "kendo-ui": "This example illustrates the basic usage of Kendo UI Bar Chart which enables the user to show customized bar charts."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart is a data visualization widget which allows you to output a graphical representation of your data. It is useful when you would like to utilize modern browser technologies such as SVG or Canvas (with a fallback to VML for older IE versions) for interactive data visualizations. The chart supports various chart types such as area, bar, line, scatter, pie and donut, etc. as well as stock (OHLC).</p><p>A Bar chart displays data as horizontal or vertical bars whose lengths vary according to their value. You can use a Bar chart to show a comparison between several sets of data (for example, summaries of the unique and total site visitors for certain period).</p><br/><p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><br/><p>The chart can fetch data for its series from either local or remote data source. It can also use the Kendo UI DataSource as a mediator for processing data.</p><br/><p>Additional information about how to use the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">this section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "Column chart",
        "url": "bar-charts/column",
        "title": {
          "kendo-ui": "Example of a basic Kendo UI Column Chart control"
        },
        "meta": {
          "kendo-ui": "This demo shows how some settings of Kendo UI chart widget can be changed in order to display the bar Chart as a Column chart."
        },
        "description": {
          "kendo-ui": "<p>The Column chart visualizes data as vertical bars whose heights vary according to their value. It can be useful for presenting a comparison between several sets of data (e.g., snapshots of data across different points in time like the GDP growth shown in this example).</p> <p>Column charts are very similar to Bar charts, with the only difference that bars&rsquo; orientation is vertical instead of horizontal.</p> <p>You can define the chart series as horizontal via the seriesDefaults-&gt; type -&gt;<strong>= \"column\"</strong></p>"
        },
        "group": "Bar Chart Types"
      },
      {
        "text": "Stacked bars",
        "url": "bar-charts/stacked-bar",
        "title": {
          "kendo-ui": "Kendo UI jQuery-powered Stacked Bar Charts | Kendo UI DataViz Demos"
        },
        "meta": {
          "kendo-ui": "This example shows how Kendo UI Bar Charts component supports a stacked bar. The feature of the widget is enabled by setting the stacked property to true."
        },
        "description": {
          "kendo-ui": "<p>A Stacked bar is a bar divided into subparts to represent cumulative effect, to display money distribution or production against time. You can easily enable the stack feature through the seriesDefaults-&gt; stack chart setting:</p><p>For more information inspect the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-seriesDefaults\">seriesDefaults option</a> in the documentation.</p>"
        }
      },
      {
        "text": "Stacked and grouped bars",
        "url": "bar-charts/grouped-stacked-bar",
        "title": {
          "kendo-ui": "Kendo UI Stacked and Grouped Bar Chart Example"
        },
        "meta": {
          "kendo-ui": "This sample demonstrates the implementation of Kendo UI stacked and grouped bars in various data visualization-driven web apps."
        },
        "description": {
          "kendo-ui": "<p>In general, the data series in a stacked column or bar chart have one stack per category. There are cases in which you might want to arrange your data so that the chart appears to have more than one stack per category, i.e. grouping the stacks.</p> <p>In this demo you can see how to group stacked columns to display the World population compared by age and sex in a specific period of time by setting the series -&gt; stack option, which applies the name of the stack that the series belong to (Male or Female in this sample)</p>"
        }
      },
      {
        "text": "100% Stacked bars",
        "url": "bar-charts/stacked100-bar",
        "title": {
          "kendo-ui": "Kendo UI jQuery-powered 100% Stacked Bar Charts | Kendo UI DataViz Demos"
        },
        "meta": {
          "kendo-ui": "This example shows how Kendo UI Bar Charts component supports a 100% stacked bar. The feature of the widget is enabled by setting the stack type to '100%'."
        },
        "description": {
          "kendo-ui": "<p>The Bar chart type supports 100% stacking, where the stacked series values are rescaled in a way they add up to 100%.</p> <p>You can enable the 100% stack feature through the seriesDefaults-&gt; stack -&gt; type chart attribute.</p> <p>For more information inspect the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-seriesDefaults\">seriesDefaults option</a> in the documentation.</p>"
        }
      },
      {
        "text": "100% Stacked and grouped bars",
        "url": "bar-charts/grouped-stacked100-bar",
        "title": {
          "kendo-ui": "Kendo UI 100% Stacked and Grouped Bar Chart Example"
        },
        "meta": {
          "kendo-ui": "This sample demonstrates the implementation of Kendo UI 100% stacked and grouped bars in various data visualization-driven web apps."
        },
        "description": {
          "kendo-ui": "<p>This example demonstrates the implementation of 100% stacked and grouped bars for the Kendo UI chart.</p> <p>You can enable the 100% stack feature by setting the seriesDefaults -&gt; stack -&gt; type and series -&gt; stack -&gt; group attributes of the chart (the latter are set to Male and Female in this demo).</p>"
        }
      },
      {
        "text": "Date axis",
        "url": "bar-charts/date-axis",
        "title": {
          "kendo-ui": "Date axis example in Kendo UI jQuery chart control"
        },
        "meta": {
          "kendo-ui": "This sample shows how you can configure the base date unit for your date axis in Kendo UI HTML5 business bar chart."
        },
        "description": {
          "kendo-ui": "<p>You can scale the date axis of your Kendo UI  Bar Chart to get a better visualization of seasonal data in your app. This can be done by modifying:</p> <ul> <li>The base date unit of the x-axis through the categoryAxis.baseUnit attribute, which takes seconds, minutes, hours, days, week, months and years</li> <li>The default aggregates of the series through the series -&gt; aggregate chart setting, which takes max, min, sum, avg and count.</li> </ul>"
        },
        "group": "Functionality"
      },
      {
        "text": "Logarithmic axis",
        "url": "bar-charts/logarithmic-axis",
        "title": {
          "kendo-ui": "Logarithmic axis sample for Kendo UI Bar Charts"
        },
        "meta": {
          "kendo-ui": "This demo shows how you can use a logarithmic axis for the Kendo UI Bar Chart."
        },
        "description": {
          "kendo-ui": "<p>Logarithmic axis is a special numeric axis that transforms the actual values by using a logarithmic function with a particular base. Logarithmic axis is helpful for displaying values that cover different orders of magnitude because it lets large values display together with small values in a more condensed scale than the default linear axis.</p> <p>This demo shows how you can use a logarithmic axis for the Kendo UI Column Chart by setting the valueAxis -&gt; type = \"log\" attribute value.</p>"
        }
      },
      {
        "text": "Multi-axis",
        "url": "bar-charts/multiple-axes",
        "title": {
          "kendo-ui": "Example of multiple axes implementation in Kendo UI Bar Chart"
        },
        "meta": {
          "kendo-ui": "This sample illustrates how you can display a data series, using multiple axes in your business chart, built with Kendo UI HTML5 Bar Chart widget."
        },
        "description": {
          "kendo-ui": "<p>The Telerik Kendo UI Bar chart supports multiple axis. This helps you leverage the best charting performance and visualize data on any number axis to provide solid business reports for your users.</p> <p>The example above shows a hybrid car range report visualized through four value axes: <em>km</em>, <em>miles</em>, <em>miles per gallon</em> and <em>liters per 100km</em>. Note that each of them has a unique name which is set through the <strong>valueAxis.title</strong>attribute. You can also populate the <strong>categoryAxis.axisCrossingValue</strong> array with values to specify the alignment of the value axes.</p>"
        }
      },
      {
        "text": "Plot bands",
        "url": "bar-charts/plotbands",
        "title": {
          "kendo-ui": "Plot Bands example in Kendo UI Bar chart"
        },
        "meta": {
          "kendo-ui": "This sample demonstrates how to add plot bands to your Kendo UI jQuery charts in order to plot data within some borders."
        },
        "description": {
          "kendo-ui": "<p>Plot Bands are colored ranges which are used to highlight certain areas in the Kendo UI chart, usually specific thresholds designating whether the data falls under these boundaries or not. You can create them by setting valueAxis-&gt; plotBands values</p> <p>Each Plot Band could be configured independently by specifying the following properties:</p> <ul> <li>From &mdash; the start position of the plot band.</li> <li>To &mdash; the end position of the plot band.</li> <li>Opacity &mdash; the opacity of the plot band.</li> <li>Color &mdash; the color of the plot band.</li> </ul>"
        },
        "requiresServer": "true"
      },
      {
        "text": "Gap and spacing",
        "url": "bar-charts/gap-spacing",
        "title": {
          "kendo-ui": "Gap and spacing in Kendo UI Bar Charts | Kendo UI DataViz demo"
        },
        "meta": {
          "kendo-ui": "With this example, you will be able to take a closer look at gap and spacing in Kendo UI Bar Charts. Set gap and spacing values to play with the demo."
        },
        "description": {
          "kendo-ui": "<p>The Bar chart component allows you to control the distance between its categories as well as between series points within a category. This can be done through the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-series.gap\">series.gap</a> and <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-series.spacing\">series.spacing</a> client-side settings of the chart.</p> <p>In this demo, you can play with the provided GAP and SPACING dropdowns to change the values of the above properties.</p>"
        }
      },
      {
        "text": "Error Bars",
        "url": "bar-charts/error-bars",
        "title": {
          "kendo-ui": "Example of using ErrorBars for Kendo UI Bar Chart"
        },
        "meta": {
          "kendo-ui": "This demo shows how to use ErrorBars for Kendo UI Bar Chart"
        },
        "description": {
          "kendo-ui": "<p>This example demonstrates how to show variability of data using the Error Bars feature of the Kendo UI chart. The Error bars are configured via the series -&gt; errorBars setting and are offered for the following series types: Area, Vertical Area, Column, Bar, Line, Vertical Line, Scatter and ScatterLine.</p><p>The error bars support statistical calculations based on the series data. The supported types are <a href=\"http://en.wikipedia.org/wiki/Standard_error\">standard error</a> and <a href=\"http://en.wikipedia.org/wiki/Standard_deviation\">population standard deviation</a>. To specify that standard error should be used, you need to set \"stderr\" as a value.</p><p>You can find more information in the following help article: <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/error-bars\">Error Bars</a>.</p>"
        }
      },
      {
        "text": "Custom Visuals",
        "url": "bar-charts/visuals",
        "title": {
          "kendo-ui": "Example of using custom visuals for the Kendo UI Bar Chart"
        },
        "meta": {
          "kendo-ui": "This demo shows how to use ustom visuals for the Kendo UI Bar Chart"
        },
        "description": {
          "kendo-ui": "<p>You can implement custom visualizations for the Bar/Column chart legend items, axis titles, labels, markers and series by utilizing the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/drawing\">Kendo Drawing API</a>. This can be done by assigning a JavaScript function which creates these custom shapes to the seriesDefaults -&gt; visual attribute of the chart</p> <p>Context information is available through the function argument fields, including <strong>rect</strong> (the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/geometry/rect\">kendo.geometry.Rect</a> that defines where the visual should be rendered) and options (different options depending on the item type).</p> <p>You can read more about it in the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/drawing\">Kendo UI JavaScript API reference</a>.</p>"
        }
      },
      {
        "text": "Pan and zoom",
        "url": "bar-charts/pan-and-zoom",
        "title": {
          "kendo-ui": "Pan and zoom in Bar charts | Kendo UI Bar Chart demo"
        },
        "meta": {
          "kendo-ui": "Enable pan and zoom effect in Kendo UI Bar charts. This example demonstrates how to enable pan and zoom for your bar charts."
        },
        "description": {
          "kendo-ui": "<p>The Pan and Zoom features allow you to navigate through and zoom in/out the Telerik Kendo UI Bar Chart. </p> <p>You can enable the pan feature through the pannable setting as well as to lock either the X or Y axis using the nested lock attribute.</p> <p>To enable the zoom set the zoomable configuration option. You can also fine tune the mouse wheel and selection zooming through the available mousewheel and selection nested properties.</p>"
        }
      },
      {
        "text": "Custom pan and zoom",
        "url": "bar-charts/custom-pan-and-zoom",
        "title": {
          "kendo-ui": "Custom Pan and zoom in Bar charts | Kendo UI Bar Chart demo"
        },
        "meta": {
          "kendo-ui": "Achieve pan and zoom effect in Kendo UI Bar charts. This example demonstrates how you can apply pan and zoom to your bar charts."
        },
        "description": {
          "kendo-ui": "<p>In addition to the built-in pan and zoom functionality, the Kendo UI chart supports custom panning and zooming as well. </p> <p>This example represents a custom implementation wiring the drag, dragEnd and zoom events of the chart. The idea is to intercept when these events are raised and fetch the data that has to be visualized in the chart, using a dynamical query by invoking the <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/api/javascript/data/datasource#methods-query\">query method</a> of the chart data source. Review the code snippets in the demo for more details.</p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!aspnet-core"
        ]
      },
      {
        "text": "Binding to remote data",
        "url": "bar-charts/remote-data-binding",
        "title": {
          "kendo-ui": "Binding to remote data demo | Kendo UI HTML5 jQuery Bar Charts"},
        "meta": {
          "kendo-ui": "This demo shows how Kendo UI Bar Charts widget can be bound to remote data to produce high-performance report in your business app."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart supports binding to remote data via RESTful services.</p><p>For remote data binding you need to specify a remote endpoint or a web service returning data in JSON/JSONP format and utilize the DataSource in-between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the Kendo UI Bar chart is bound to remote data by configuring the DataSource transport which defines how the DataSource interacts with remote data.</p> <p>You can find more information about the data-binding capabilities of the Kendo UI chart in this <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\">help article</a>.</p>"
        },
        "group": "Data Binding",
        "requiresServer": "true"
      },
      {
        "text": "Binding to local data",
        "url": "bar-charts/local-data-binding",
        "title": {
          "kendo-ui": "Local data-binding example | Kendo UI Bar Charts"
        },
        "meta": {
          "kendo-ui": "This demo shows how the local data-binding is supported in Kendo UI Bar Charts. Use the demo source code to try the feature of the widget."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its data source property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series and categoryAxis values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "Binding to grouped data",
        "url": "bar-charts/grouped-data",
        "title": {
          "kendo-ui": "Grouped data binding demo for Kendo UI HTML5 Bar Charts"
        },
        "meta": {
          "kendo-ui": "This example shows the feature of binding to grouped data in Kendo UI Bar Charts. See the source code to find how to use name templates for the data group."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart can be bound to a grouped data by using <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/data/datasource\">Kendo UI DataSource</a> as a mediator. To do so follow the steps below:</p> <ol> <li>Bind the chart to a <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-dataSource\">Kendo UI DataSource instance</a>.</li> <li>Set the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-dataSource\">DataSource.group.field property</a> to the name of the column in the underlying data which will be the criteria for grouping the chart series items into series (symbol in this example)</li> <li>Bind the series.field setting to the &ldquo;close&rdquo; field in the underlying data source</li> <li>Bind the categoryAxis.field attribute to the \"date\" field in the source</li> </ol> <p> This will result in as many series as the number of distinct values in the column (i.e., DataSource.group.field). For each value there will be chart series in the chart. </p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "MVVM",
        "url": "bar-charts/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Chart"
        },
        "meta": {
          "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Chart"
        },
        "description": {
          "kendo-ui": "<p>The MVVM feature of the Kendo UI framework provides powerful two-way data binding capabilities, built on the popular Model-View-ViewModel concept. In this way you can easily make attribute values for widgets observable and modify them automatically when changes are applied in the data source, or alter the underlying data when the user interacts with the UI.</p> <p>In this example we show how to configure the Kendo UI chart to make use of the MVVM functionality exposed by the framework. For this purpose we create a <strong>viewmodel</strong> instance (with <strong>kendo.observable</strong> call) which wraps the chart data source, and instantiate the chart, its attributes and binding definition using <strong>data-</strong> attributes. The important detail to wire the viewmodel is to invoke <strong>kendo.bind</strong> to the container element of the chart, passing the viewmodel as a second argument. Review the code snippets from the demo for more info.</p> <p>Details on the MVVM features of the Kendo UI framework can be obtained from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/mvvm/overview\">this chapter</a> of the documentation.</p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "requiresServer": "true"
      },
      {
        "text": "AngularJS",
        "url": "bar-charts/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Chart"
        },
        "meta": {
          "kendo-ui": "AngularJS directives support in Kendo UI Chart"
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart features inborn integration with AngularJS using directives which are officially supported as part of the product. To make use of this integration, you need to reference the Angular scripts in your app and register the module incorporating the Kendo UI directives in the following way:</p><p> angular.module(\"KendoDemos\", [ \"kendo.directives\" ])</p><p>Thus you can utilize the AngularJS framework in combination with our chart for apps which could benefit from such integrations. Further, you can specify chart options as fields in the $scope and then associate them via the relevant <b>k-</b> chart Angular attribute definition. This is demonstrated in the demo at hand.</p><p>Additional information about how to use Kendo UI widgets with AngularJS you can gather from <a target=\"blank\" href=\"http://docs.telerik.com/kendo-ui/AngularJS/introduction#overview\">this help resource.</a></p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "requiresServer": "true"
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Barcode",
    "name": "barcode",
    "component": "barcode",
    "pro": "true",
    "spriteCssClass": "barcodeIcon",
    "api": {
      "all": "dataviz/barcode",
      "php-ui": "api/php/Kendo/Dataviz/UI/Barcode"
    },
    "documentation": {
      "kendo-ui": "getting-started/dataviz/barcode/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/barcode/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/barcode/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/barcode",
      "jsp-ui": "jsp/barcode",
      "php-ui": "php/barcode"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/barcode",
      "jsp-ui": "jsp/barcode",
      "php-ui": "php/barcode"
    },
    "items": [
      {
        "text": "Basic usage",
        "url": "barcode/index",
        "title": {
          "kendo-ui": "Kendo UI Barcode Demo"
        },
        "meta": {
          "kendo-ui": "This sample demonstrates the core functionality of Kendo UI Barcode which helps you easily encode data in machine readable format."
        }
      },
      {
        "text": "API",
        "url": "barcode/api",
        "title": {
          "kendo-ui": "Kendo UI Barcode API Demo"
        },
        "meta": {
          "kendo-ui": "This sample demonstrates the different symbologies the Barcode support and the different options that could be set"
        },
        "packages": [
          "!offline"
        ]
      },
      {
        "text": "MVVM",
        "url": "barcode/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Barcode"
        },
        "meta": {
          "kendo-ui": "Value MVVM binding support in Kendo UI Barcode"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "barcode/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Barcode"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support in Kendo UI Barcode"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Barcodes"
  },
  {
    "text": "Box Plot Charts",
    "name": "box-plot-charts",
    "component": "charts",
    "pro": "true",
    "api": { "all": "dataviz/chart" },
    "documentation": {
      "kendo-ui": "getting-started/dataviz/chart/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "spriteCssClass": "chartBoxPlotIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "box-plot-charts/index",
        "title": {
          "kendo-ui": "Kendo UI HTML5 Box Plot Charts Example"
        },
        "meta": {
          "kendo-ui": "In this demo you will see in action the HTML5 Box Plot Chart control for Kendo UI."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart is a data visualization widget which allows you to output a graphical representation of your data. It is useful when you would like to utilize modern browser technologies such as SVG or Canvas (with a fallback to VML for older IE versions) for interactive data visualizations. The chart supports various chart types such as area, bar, line, scatter, pie and donut, etc. as well as stock (OHLC).</p><p>The Box Plot chart is useful for comparing distributions between different sets of numerical data. It depicts graphically numerical data by displaying a data distribution summary with six indicators (lower value, first quartile, median, mean, third quartile, upper value) and outliers for each set of data.</p><br/><p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><br/><p>The chart can fetch data for its series from either local or remote data source. It can also use the Kendo UI DataSource as a mediator for processing data.</p><br/><p>Additional information about how to use the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">this section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "Vertical Box Plot",
        "url": "box-plot-charts/vertical",
        "title": {
          "kendo-ui": "Kendo UI HTML5 Box Plot Charts Example"
        },
        "meta": {
          "kendo-ui": "In this demo you will see in action the HTML5 Box Plot Chart control for Kendo UI."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart is a data visualization widget which allows you to output a graphical representation of your data. It is useful when you would like to utilize modern browser technologies such as SVG or Canvas (with a fallback to VML for older IE versions) for interactive data visualizations. The chart supports various chart types such as area, bar, line, scatter, pie and donut, etc. as well as stock (OHLC).</p><p>The Box Plot chart is useful for comparing distributions between different sets of numerical data. It depicts graphically numerical data by displaying a data distribution summary with six indicators (lower value, first quartile, median, mean, third quartile, upper value) and outliers for each set of data.</p><br/><p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><br/><p>The chart can fetch data for its series from either local or remote data source. It can also use the Kendo UI DataSource as a mediator for processing data.</p><br/><p>Additional information about how to use the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">this section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "Binding to remote data",
        "url": "box-plot-charts/remote-data-binding",
        "title": {
          "kendo-ui": "Binding to remote data example | Kendo UI Box Plot Charts"
        },
        "meta": {
          "kendo-ui": "This demo shows how Kendo UI HTML5 Box Plot Charts can be bound to remote data to produce high-performance report in your business app."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart supports binding to remote data via RESTful services.</p <p>For remote data binding you need to specify a remote endpoint or web service returning data in JSON/JSONP format and utilize the DataSource in-between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a remote endpoint assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the Kendo UI chart in this <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\">help article</a>.</p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "Binding to local data",
        "url": "box-plot-charts/local-data-binding",
        "title": {
          "kendo-ui": "Kendo UI jQuery Box Plot Charts binding to local data demo"
        },
        "meta": {
          "kendo-ui": "This demo shows how the local data-binding is supported in Kendo UI HTML5 Box Plot Charts. Use the demo source code to try the feature of the control."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its data source property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series and categoryAxis values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "MVVM",
        "url": "box-plot-charts/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Chart"
        },
        "meta": {
          "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Chart"
        },
        "description": {
          "kendo-ui": "<p>The MVVM feature of the Kendo UI framework provides powerful two-way data binding capabilities, built on the popular Model-View-ViewModel concept. In this way you can easily make attribute values for widgets observable and modify them automatically when changes are applied in the data source, or alter the underlying data when the user interacts with the UI.</p> <p>In this example we show how to configure the Kendo UI chart to make use of the MVVM functionality exposed by the framework. For this purpose we create a <strong>viewmodel</strong> instance (with <strong>kendo.observable</strong> call) which wraps the chart data source, and instantiate the chart, its attributes and binding definition using <strong>data-</strong> attributes. The important detail to wire the viewmodel is to invoke <strong>kendo.bind</strong> to the container element of the chart, passing the viewmodel as a second argument. Review the code snippets from the demo for more info.</p> <p>Details on the MVVM features of the Kendo UI framework can be obtained from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/mvvm/overview\">this chapter</a> of the documentation.</p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "requiresServer": "true"
      },
      {
        "text": "AngularJS",
        "url": "box-plot-charts/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Chart"
        },
        "meta": {
          "kendo-ui": "AngularJS directives support in Kendo UI Chart"
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart features inborn integration with AngularJS using directives which are officially supported as part of the product. To make use of this integration, you need to reference the Angular scripts in your app and register the module incorporating the Kendo UI directives in the following way:</p><p> angular.module(\"KendoDemos\", [ \"kendo.directives\" ])</p><p>Thus you can utilize the AngularJS framework in combination with our chart for apps which could benefit from such integrations. Further, you can specify chart options as fields in the $scope and then associate them via the relevant <b>k-</b> chart Angular attribute definition. This is demonstrated in the demo at hand.</p><p>Additional information about how to use Kendo UI widgets with AngularJS you can gather from <a target=\"blank\" href=\"http://docs.telerik.com/kendo-ui/AngularJS/introduction#overview\">this help resource.</a></p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "requiresServer": "true"
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Bubble Charts",
    "name": "bubble-charts",
    "component": "charts",
    "pro": "true",
    "api": { "all": "dataviz/chart" },
    "documentation": {
      "kendo-ui": "getting-started/dataviz/chart/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "spriteCssClass": "chartBubbleIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "bubble-charts/index",
        "title": {
          "kendo-ui": "Kendo UI Bubble Charts demo"
        },
        "meta": {
          "kendo-ui": "This example demonstrates the basic usage and core features of Kendo UI jQuery & HTML5 Bubble Charts widget."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart is a data visualization widget which allows you to output a graphical representation of your data. It is useful when you would like to utilize modern browser technologies such as SVG or Canvas (with a fallback to VML for older IE versions) for interactive data visualizations. The chart supports various chart types such as area, bar, line, scatter, pie and donut, etc. as well as stock (OHLC).</p><p>A Bubble chart shows the data as points with coordinates and size defined by their items' values. It is similar to the Scatter chart, in which the data points are replaced with bubbles. This allows a Bubble chart to display three dimensional data — two values for the items' coordinates and one for their size. A Bubble chart is useful for visualizing different scientific relationships (economic, social, etc.). This chart type's x-axis is also numerical and does not require items.</p><br/><p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><br/><p>The chart can fetch data for its series from either local or remote data source. It can also use the Kendo UI DataSource as a mediator for processing data.</p><br/><p>Additional information about how to use the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">this section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "Binding to remote data",
        "url": "bubble-charts/remote-data-binding",
        "title": {
          "kendo-ui": "Binding to remote data example | Kendo UI Bubble Chart demo"
        },
        "meta": {
          "kendo-ui": "This demo illustrates binding to remote data feature of Kendo UI Bubble Chart for rich HTML5 visualizations."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart supports binding to remote data via RESTful services.</p> <p>For remote data binding you need to specify a remote endpoint or a web service returning data in JSON/JSONP format and utilize the DataSource in-between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a remote service via the DataSource read configuration. You can find more information about the data-binding capabilities of the Kendo UI chart in this <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\">help article</a>.</p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "Binding to local data",
        "url": "bubble-charts/local-data-binding",
        "title": {
          "kendo-ui": "Local data binding mode in Kendo UI Bubble chart widget"
        },
        "meta": {
          "kendo-ui": "This demo illustrates the powerful Binding to local data feature, supported in Kendo UI Bubble Chart widget."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its data source property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series and categoryAxis values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "Binding to grouped data",
        "url": "bubble-charts/grouped-data",
        "title": {
          "kendo-ui": "Binding to grouped data example | Kendo UI HTML5 Bubble Charts"
        },
        "meta": {
          "kendo-ui": "This demo shows how to bind Kendo UI Bubble Charts component to grouped data. See how you can implement the feature in your rich web app."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart widget can be bound to grouped data using <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/data/datasource\">Kendo UI DataSource</a> as a mediator. To do so follow the steps below:</p> <ol> <li>Bind the chart to a <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-dataSource\">Kendo UI DataSource instance</a>.</li> <li>Set the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-dataSource\">DataSource.group.field property</a> to the name of the column (e.g., the &ldquo;country&rdquo; field) in the underlying data which will be the criteria for grouping the chart series items into series</li> <li>Bind the xField, yField and sizeField values of the series to the <b>year, standing and number</b> fields</p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "MVVM",
        "url": "bubble-charts/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Chart"
        },
        "meta": {
          "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Chart"
        },
        "description": {
          "kendo-ui": "<p>The MVVM feature of the Kendo UI framework provides powerful two-way data binding capabilities, built on the popular Model-View-ViewModel concept. In this way you can easily make attribute values for widgets observable and modify them automatically when changes are applied in the data source, or alter the underlying data when the user interacts with the UI.</p> <p>In this example we show how to configure the Kendo UI chart to make use of the MVVM functionality exposed by the framework. For this purpose we create a <strong>viewmodel</strong> instance (with <strong>kendo.observable</strong> call) which wraps the chart data source, and instantiate the chart, its attributes and binding definition using <strong>data-</strong> attributes. The important detail to wire the viewmodel is to invoke <strong>kendo.bind</strong> to the container element of the chart, passing the viewmodel as a second argument. Review the code snippets from the demo for more info.</p> <p>Details on the MVVM features of the Kendo UI framework can be obtained from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/mvvm/overview\">this chapter</a> of the documentation.</p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "requiresServer": "true"
      },
      {
        "text": "AngularJS",
        "url": "bubble-charts/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Chart"
        },
        "meta": {
          "kendo-ui": "AngularJS directives support in Kendo UI Chart"
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart features inborn integration with AngularJS using directives which are officially supported as part of the product. To make use of this integration, you need to reference the Angular scripts in your app and register the module incorporating the Kendo UI directives in the following way:</p><p> angular.module(\"KendoDemos\", [ \"kendo.directives\" ])</p><p>Thus you can utilize the AngularJS framework in combination with our chart for apps which could benefit from such integrations. Further, you can specify chart options as fields in the $scope and then associate them via the relevant <b>k-</b> chart Angular attribute definition. This is demonstrated in the demo at hand.</p><p>Additional information about how to use Kendo UI widgets with AngularJS you can gather from <a target=\"blank\" href=\"http://docs.telerik.com/kendo-ui/AngularJS/introduction#overview\">this help resource.</a></p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "requiresServer": "true"
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Bullet Charts",
    "name": "bullet-charts",
    "component": "charts",
    "pro": "true",
    "api": { "all": "dataviz/chart" },
    "documentation": {
      "kendo-ui": "getting-started/dataviz/chart/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "spriteCssClass": "chartBulletIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "bullet-charts/index",
        "title": {
          "kendo-ui": "Bullet Charts Example | Kendo UI JavaScript data visualization components"
        },
        "meta": {
          "kendo-ui": "Kendo UI jQuery-based Bullet Charts provide a rich data visualization. In this basic usage demo we will create a horizontal Kendo UI Bullet Chart."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart is a data visualization widget which allows you to output a graphical representation of your data. It is useful when you would like to utilize modern browser technologies such as SVG or Canvas (with a fallback to VML for older IE versions) for interactive data visualizations. The chart supports various chart types such as area, bar, line, scatter, pie and donut, etc. as well as stock (OHLC).</p><p>In this demo, you can see how to configure a Bullet chart, which is a variation of a bar chart. You can use it as a replacement for dashboard gauges and meters. The bullet graph compares a given quantitative measure (such as temperature) against qualitative ranges (e.g. warm, hot, mild, cool, chilly, cold, freezing, icy, frosty) and a symbol marker that encodes the comparative measure (for example the max temperature a year ago).</p><br/><p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><br/><p>The chart can fetch data for its series from either local or remote data source. It can also use the Kendo UI DataSource as a mediator for processing data.</p><br/><p>Additional information about how to use the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">this section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "Binding to local data",
        "url": "bullet-charts/local-data-binding",
        "title": {
          "kendo-ui": "Local Data Binding in Bullet Charts | Kendo UI Bullet charts demo"
        },
        "meta": {
          "kendo-ui": "In this example we will bind local data to the Kendo UI Bullet Chart in order to show the behavior of the component."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its data source property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series and categoryAxis values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "Binding to remote data",
        "url": "bullet-charts/remote-data-binding",
        "title": {
          "kendo-ui": "Binding Kendo UI Bullet Chart to remote data"
        },
        "meta": {
          "kendo-ui": "This online demo will show you how to bind a Kendo UI Bullet Chart to remote data."
        },
        "description": {
          "kendo-ui": "<p>The Telerik Kendo UI Chart supports binding to remote data via RESTful services.</p><p>For remote data binding you need to specify a remote endpoint or a web service returning data in JSON/JSONP format and utilize the DataSource in-between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a remote endpoint assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\">help article</a>.</p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "MVVM",
        "url": "bullet-charts/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Chart"
        },
        "meta": {
          "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Chart"
        },
        "description": {
          "kendo-ui": "<p>The MVVM feature of the Kendo UI framework provides powerful two-way data binding capabilities, built on the popular Model-View-ViewModel concept. In this way you can easily make attribute values for widgets observable and modify them automatically when changes are applied in the data source, or alter the underlying data when the user interacts with the UI.</p> <p>In this example we show how to configure the Kendo UI chart to make use of the MVVM functionality exposed by the framework. For this purpose we create a <strong>viewmodel</strong> instance (with <strong>kendo.observable</strong> call) which wraps the chart data source, and instantiate the chart, its attributes and binding definition using <strong>data-</strong> attributes. The important detail to wire the viewmodel is to invoke <strong>kendo.bind</strong> to the container element of the chart, passing the viewmodel as a second argument. Review the code snippets from the demo for more info.</p> <p>Details on the MVVM features of the Kendo UI framework can be obtained from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/mvvm/overview\">this chapter</a> of the documentation.</p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "requiresServer": "true"
      },
      {
        "text": "AngularJS",
        "url": "bullet-charts/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Chart"
        },
        "meta": {
          "kendo-ui": "AngularJS directives support in Kendo UI Chart"
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart features inborn integration with AngularJS using directives which are officially supported as part of the product. To make use of this integration, you need to reference the Angular scripts in your app and register the module incorporating the Kendo UI directives in the following way:</p><p> angular.module(\"KendoDemos\", [ \"kendo.directives\" ])</p><p>Thus you can utilize the AngularJS framework in combination with our chart for apps which could benefit from such integrations. Further, you can specify chart options as fields in the $scope and then associate them via the relevant <b>k-</b> chart Angular attribute definition. This is demonstrated in the demo at hand.</p><p>Additional information about how to use Kendo UI widgets with AngularJS you can gather from <a target=\"blank\" href=\"http://docs.telerik.com/kendo-ui/AngularJS/introduction#overview\">this help resource.</a></p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "requiresServer": "true"
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Chart API",
    "name": "chart-api",
    "component": "charts",
    "pro": "true",
    "api": { "all": "dataviz/chart" },
    "spriteCssClass": "chartIcon",
    "documentation": {
      "kendo-ui": "getting-started/dataviz/chart/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "items": [
      {
        "text": "Methods",
        "url": "chart-api/index",
        "title": {
          "kendo-ui": "Kendo UI Charts API methods"
        },
        "meta": {
          "kendo-ui": "This demo shows how the API manipulates the methods, applicable to Kendo UI jQuery-based chart components."
        },
        "description": {
          "kendo-ui": "<p>This example illustrates how to get reference to the Kendo UI Chart and its series client-side objects, which allows you to customize series options like type, appearance, stacking and many more:</p> <ul> <li>Get reference to the Kendo UI Chart client-side object: var chart = $(\"#chart\").data(\"kendoChart\");</li> <li>Get reference to the series client object: series = chart.options.series,</li> <li>Set the series type: series[i].type = type;</li> <li>Stack the series: series[i].stack = stack;</li> </ul> <p>You can find a complete list of the series attributes in <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-series\">the API documentation</a>.</p>"
        }
      },
      {
        "text": "Events",
        "url": "chart-api/events",
        "title": {
          "kendo-ui": "Events API for Kendo UI HTML5 charting components | Kendo UI Demos"
        },
        "meta": {
          "kendo-ui": "This sample demonstrates the events which are specific to Kendo UI HTML5 chart components."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI Chart exposes many client-side events that allow easy and flexible use in a wide range of application scenarios:</p> <ul> <li>seriesClick</li> <li>seriesHover</li> <li>dataBound</li> <li>axisLabelClick</li> <li>plotAreaClick</li> <li>render</li> <li>legendItemClick</li> <li>legendItemHover</li> <li>DragStart</li> <li>drag</li> <li>dragEnd</li> <li>zoomStart</li> <li>zoom</li> <li>zoomEnd</li> </ul>"
        },
        "requiresServer": "true"
      },
      {
        "text": "PDF Export",
        "url": "chart-api/pdf-export",
        "title": {
          "kendo-ui": "Kendo UI Chart saveAsPDF API method"
        },
        "meta": {
          "kendo-ui": "This demo shows how to save the chart as PDF directly in the browser."
        },
        "description": {
          "kendo-ui": "<p>This example demonstrates how to configure the pdf export settings of the Telerik Kendo UI chart widget. </p> <p>You can specify the Author, Creator, Date, FileName, AllPages, PaperSize, ProxyURL and other options, through the <strong>pdf</strong> attribute of the chart.</p> <p>The <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#methods-saveAsPDF\">saveAsPDF</a>or <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#methods-exportPDF\">exportPDF</a> methods can be used to trigger export operation.</p>"
        }
      },
      {
        "text": "Advanced Export",
        "url": "chart-api/export",
        "title": {
          "kendo-ui": "Kendo UI Charts Export API methods"
        },
        "meta": {
          "kendo-ui": "This demo shows how to export charts to PDF, PNG Images or SVG and save them directly in the browser."
        },
        "description": {
          "kendo-ui": "<p>This demo presents how to export charts to PDF, PNG Images or SVG and save the produced files directly in the browser. You can do that by getting a reference to the chart&rsquo;s client-side object<br /> <br /> var chart = $(\"#chart\").getKendoChart();<br /> <br /> and firing the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#methods-exportPDF\">exportPDF</a>, <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#methods-exportImage\">exportImage</a> and <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#methods-exportSVG\">exportSVG</a> methods. Use the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/kendo#methods-saveAs\">kendo.saveAs</a> method to save the result and specify the file name.</p>"
        }
      },
      {
        "text": "Selection",
        "url": "chart-api/selection",
        "title": {
          "kendo-ui": "Axis selection in Kendo UI charting components | Kendo UI Demo"
        },
        "meta": {
          "kendo-ui": "Take a look at this example that illustrates how to configure the axis selection in Kendo UI HTML5-powered charting widgets."
        },
        "description": {
          "kendo-ui": "<p>This example demonstrates how to configure the axis selection in the Telerik Kendo UI chart through the exposed selectStart, select and selectEnd chart events as well as the zoom and reverse attributes of the categoryAxis -&gt; select -&gt; mousewheel settings.</p>"
        }
      },
      {
        "text": "Benchmark",
        "description": {
          "kendo-ui": "<p>The purpose of this demo is to provide a benchmark for live Kendo UI chart updates, using multiple chart series and reflecting the frames per second/milliseconds per frame needed to render the chart in different browsers. You also have the option to choose between SVG (default) and Canvas rendering for the chart and compare the results in each of these supported rendering modes.</p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!aspnet-core"
        ],
        "url": "chart-api/benchmark"
      },
      {
        "text": "RTL support",
        "packages": [
          "!aspnet-mvc",
          "!aspnet-core"
        ],
        "title": {
          "kendo-ui": "Right-to-Left rendering of the Kendo UI Chart widget"
        },
        "meta": {
          "kendo-ui": "This demo shows how the Kendo UI Chart widget supports right-to-left direction."
        },
        "url": "chart-api/rtl"
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Donut Charts",
    "name": "donut-charts",
    "component": "charts",
    "pro": "true",
    "api": { "all": "dataviz/chart" },
    "documentation": {
      "kendo-ui": "getting-started/dataviz/chart/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "spriteCssClass": "chartDonutIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "donut-charts/index",
        "title": {
          "kendo-ui": "Example of Kendo UI Donut Charts"
        },
        "meta": {
          "kendo-ui": "This demo shows the core functionality of Kendo UI jQuery Donut Charts which visualize the breakdown of data into its elements."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart is a data visualization widget which allows you to output a graphical representation of your data. It is useful when you would like to utilize modern browser technologies such as SVG or Canvas (with a fallback to VML for older IE versions) for interactive data visualizations. The chart supports various chart types such as area, bar, line, scatter, pie and donut, etc. as well as stock (OHLC).</p><p>In this demo, you can learn how to register and configure a Donut chart, which displays data as sectors from a circle. The Donut chart is a Pie chart variation with ability to display single series of data in a two-dimensional circle. It is useful for displaying data as parts of a whole.</p><br/><p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><br/><p>The chart can fetch data for its series from either local or remote data source. It can also use the Kendo UI DataSource as a mediator for processing data.</p><br/><p>Additional information about how to use the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">this section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "Donut labels",
        "url": "donut-charts/donut-labels",
        "title": {
          "kendo-ui": "Configuration of donut labels in Kendo UI Donut charts"
        },
        "meta": {
          "kendo-ui": "This example shows how to configure the values of Kendo UI jQuery Donut Charts, enable/disable donut labels and specify how they are aligned to the chart."
        },
        "description": {
          "kendo-ui": "<p>This sample illustrates how to show/hide the labels of the Kendo UI Donut Chart and specify how they are aligned.</p> <p>You can do that by getting a reference to the chart client-object via:</p> <p>var chart = $(\"#chart\").data(\"kendoChart\")</p> <p>which will allow you to set and configure its series collection and attributes:<br /> <br /> var pieSeries = chart.options.series[0];<br /> pieSeries.labels.visible = true|false; // If set to true the chart will display the series labels.<br /> pieSeries.labels.align = \"circle\"; // \"circle\" - the labels are positioned in circle around the chart.</p> <p>You can find a complete list of the series attributes in <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-series\">the API documentation</a>.</p>"
        }
      },
      {
        "text": "Binding to remote data",
        "url": "donut-charts/remote-data-binding",
        "title": {
          "kendo-ui": "Binding to remote data demo for Kendo UI Donut Charts"
        },
        "meta": {
          "kendo-ui": "This example shows how to bind Kendo UI Donut Charts to remote data."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart supports binding to remote data via RESTful services.</p> <p>For remote data binding you need to specify a remote endpoint or a web service returning data in JSON/JSONP format and utilize the DataSource in-between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a remote endpoint assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the Kendo UI chart in this <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\">help article</a>.</p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "Binding to local data",
        "url": "donut-charts/local-data-binding",
        "title": {
          "kendo-ui": "Local data binding in Kendo UI Donut Charts"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how Kendo UI donut chart can be bound to local data to deliver high-performance business application."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its data source property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series and categoryAxis values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "MVVM",
        "url": "donut-charts/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Chart"
        },
        "meta": {
          "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Chart"
        },
        "description": {
          "kendo-ui": "<p>The MVVM feature of the Kendo UI framework provides powerful two-way data binding capabilities, built on the popular Model-View-ViewModel concept. In this way you can easily make attribute values for widgets observable and modify them automatically when changes are applied in the data source, or alter the underlying data when the user interacts with the UI.</p> <p>In this example we show how to configure the Kendo UI chart to make use of the MVVM functionality exposed by the framework. For this purpose we create a <strong>viewmodel</strong> instance (with <strong>kendo.observable</strong> call) which wraps the chart data source, and instantiate the chart, its attributes and binding definition using <strong>data-</strong> attributes. The important detail to wire the viewmodel is to invoke <strong>kendo.bind</strong> to the container element of the chart, passing the viewmodel as a second argument. Review the code snippets from the demo for more info.</p> <p>Details on the MVVM features of the Kendo UI framework can be obtained from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/mvvm/overview\">this chapter</a> of the documentation.</p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "requiresServer": "true"
      },
      {
        "text": "AngularJS",
        "url": "donut-charts/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Chart"
        },
        "meta": {
          "kendo-ui": "AngularJS directives support in Kendo UI Chart"
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart features inborn integration with AngularJS using directives which are officially supported as part of the product. To make use of this integration, you need to reference the Angular scripts in your app and register the module incorporating the Kendo UI directives in the following way:</p><p> angular.module(\"KendoDemos\", [ \"kendo.directives\" ])</p><p>Thus you can utilize the AngularJS framework in combination with our chart for apps which could benefit from such integrations. Further, you can specify chart options as fields in the $scope and then associate them via the relevant <b>k-</b> chart Angular attribute definition. This is demonstrated in the demo at hand.</p><p>Additional information about how to use Kendo UI widgets with AngularJS you can gather from <a target=\"blank\" href=\"http://docs.telerik.com/kendo-ui/AngularJS/introduction#overview\">this help resource.</a></p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "requiresServer": "true"
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Funnel Charts",
    "name": "funnel-charts",
    "component": "charts",
    "pro": "true",
    "api": { "all": "dataviz/chart" },
    "documentation": {
      "kendo-ui": "getting-started/dataviz/chart/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "spriteCssClass": "chartFunnelIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "funnel-charts/index",
        "title": {
          "kendo-ui": "Example of Kendo UI Funnel Charts"
        },
        "meta": {
          "kendo-ui": "This demo shows the core functionality of Kendo UI jQuery Funnel Charts which visualize the breakdown of data into its elements."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart is a data visualization widget which allows you to output a graphical representation of your data. It is useful when you would like to utilize modern browser technologies such as SVG or Canvas (with a fallback to VML for older IE versions) for interactive data visualizations. The chart supports various chart types such as area, bar, line, scatter, pie and donut, etc. as well as stock (OHLC).</p><p>This example illustrates how to register and configure a Funnel Chart. A Funnel chart displays a single series of data in progressively decreasing or increasing proportions, organized in segments, where each segment represents the value for the particular item from the series. The items' values can also influence the height and the shape of the corresponding segments.</p><br/><p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><br/><p>The chart can fetch data for its series from either local or remote data source. It can also use the Kendo UI DataSource as a mediator for processing data.</p><br/><p>Additional information about how to use the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">this section</a> of the product documentation.</p>"
        },
        "packages": [
          "!offline"
        ]
      },
      {
        "text": "Funnel labels",
        "url": "funnel-charts/funnel-labels",
        "title": {
          "kendo-ui": "Configuration of Funnel labels in Kendo UI funnel charts"
        },
        "meta": {
          "kendo-ui": "This example shows how to configure the values of Kendo UI jQuery Funnel Charts, enable/disable funnel labels and specify how they are aligned to the chart."
        },
        "description": {
          "kendo-ui": "<p>This example demonstrates  how to configure the labels of the Kendo UI funnel chart. You can specify their properties for visibility, position and alignment, font color, size and so on through the seriesDefaults -&gt; labels setting:</p> <ul> <li>visible</li> <li>position </li><li>align</li> <li>font</li><li>etc.</li> </ul>"
        },
        "packages": [
          "!offline"
        ]
      },
      {
        "text": "Binding to remote data",
        "url": "funnel-charts/remote-data-binding",
        "title": {
          "kendo-ui": "Binding to remote data demo for Kendo UI Funnel Charts"
        },
        "meta": {
          "kendo-ui": "This example shows how to bind Kendo UI Funnel Charts to remote data."
        },
        "description": {
          "kendo-ui": "<p>The Telerik Kendo UI chart supports binding to remote data via RESTful services.</p><p>For remote data binding you need to specify a remote endpoint or a web service returning data in JSON/JSONP format and utilize the DataSource as a mediator between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a remote endpoint assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the MVC chart in this <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\">help article</a>.</p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "Binding to local data",
        "url": "funnel-charts/local-data-binding",
        "title": {
          "kendo-ui": "Local data binding in Kendo UI Funnel Charts"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how Kendo UI funnel Charts widget can be bound to local data to deliver high-performance business application."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its data source property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series and categoryAxis values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "MVVM",
        "url": "funnel-charts/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Chart"
        },
        "meta": {
          "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Chart"
        },
        "description": {
          "kendo-ui": "<p>The MVVM feature of the Kendo UI framework provides powerful two-way data binding capabilities, built on the popular Model-View-ViewModel concept. In this way you can easily make attribute values for widgets observable and modify them automatically when changes are applied in the data source, or alter the underlying data when the user interacts with the UI.</p> <p>In this example we show how to configure the Kendo UI chart to make use of the MVVM functionality exposed by the framework. For this purpose we create a <strong>viewmodel</strong> instance (with <strong>kendo.observable</strong> call) which wraps the chart data source, and instantiate the chart, its attributes and binding definition using <strong>data-</strong> attributes. The important detail to wire the viewmodel is to invoke <strong>kendo.bind</strong> to the container element of the chart, passing the viewmodel as a second argument. Review the code snippets from the demo for more info.</p> <p>Details on the MVVM features of the Kendo UI framework can be obtained from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/mvvm/overview\">this chapter</a> of the documentation.</p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "requiresServer": "true"
      },
      {
        "text": "AngularJS",
        "url": "funnel-charts/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Chart"
        },
        "meta": {
          "kendo-ui": "AngularJS directives support in Kendo UI Chart"
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart features inborn integration with AngularJS using directives which are officially supported as part of the product. To make use of this integration, you need to reference the Angular scripts in your app and register the module incorporating the Kendo UI directives in the following way:</p><p> angular.module(\"KendoDemos\", [ \"kendo.directives\" ])</p><p>Thus you can utilize the AngularJS framework in combination with our chart for apps which could benefit from such integrations. Further, you can specify chart options as fields in the $scope and then associate them via the relevant <b>k-</b> chart Angular attribute definition. This is demonstrated in the demo at hand.</p><p>Additional information about how to use Kendo UI widgets with AngularJS you can gather from <a target=\"blank\" href=\"http://docs.telerik.com/kendo-ui/AngularJS/introduction#overview\">this help resource.</a></p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "requiresServer": "true"
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Linear Gauge",
    "name": "linear-gauge",
    "component": "gauges",
    "pro": "true",
    "spriteCssClass": "gaugeLinearIcon",
    "api": {
      "all": "dataviz/lineargauge",
      "php-ui": "api/php/Kendo/Dataviz/UI/LinearGauge"
    },
    "documentation": {
      "kendo-ui": "getting-started/dataviz/lineargauge/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/lineargauge/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/lineargauge/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/gauges",
      "jsp-ui": "jsp/gauge",
      "php-ui": "php/gauge"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/gauges",
      "jsp-ui": "jsp/gauge",
      "php-ui": "php/gauge"
    },
    "items": [
      {
        "text": "Basic usage",
        "url": "linear-gauge/index",
        "title": {
          "kendo-ui": "Kendo UI jQuery-powered Linear Gauge Example"
        },
        "meta": {
          "kendo-ui": "This example shows how you can easily implement Kendo UI Linear Gauge in your HTML5 web application. Draw end users attention to a certain range of values."
        }
      },
      {
        "text": "Scale options",
        "url": "linear-gauge/scale-options",
        "title": {
          "kendo-ui": "Scale customization example for Kendo UI Linear Gauge"
        },
        "meta": {
          "kendo-ui": "This sample illustrates how you can customize Kendo UI Linear Gauge by changing the location of the gauge scale and its appearance."
        }
      },
      {
        "text": "Multiple pointers",
        "url": "linear-gauge/multiple-pointers",
        "title": {
          "kendo-ui": "Kendo UI Linear Gauge multiple pointers demo"
        },
        "meta": {
          "kendo-ui": "This example shows how easily you can configure the Linear gauge to use multiple pointers."
        }
      },
      {
        "text": "Export to PDF, Image, SVG",
        "url": "linear-gauge/export",
        "title": {
          "kendo-ui": "Kendo UI Linear Gauge export demo"
        },
        "meta": {
          "kendo-ui": "This example shows how easily you can export the linear gauge to PDF, Image and SVG."
        }
      },
      {
        "text": "MVVM",
        "url": "linear-gauge/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Linear Gauge"
        },
        "meta": {
          "kendo-ui": "Value and visible MVVM binding support in Kendo UI Linear Gauge"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "linear-gauge/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Linear Gauge"
        },
        "meta": {
          "kendo-ui": "AngularJS directives support in Kendo UI Linear Gauge"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Gauges"
  },
  {
    "text": "Radial Gauge",
    "name": "radial-gauge",
    "component": "gauges",
    "pro": "true",
    "spriteCssClass": "gaugeRadialIcon",
    "api": {
      "all": "dataviz/radialgauge",
      "php-ui": "api/php/Kendo/Dataviz/UI/RadialGauge"
    },
    "updated":  "true",
    "documentation": {
      "kendo-ui": "getting-started/dataviz/radialgauge/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/radialgauge/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/radialgauge/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/gauges",
      "jsp-ui": "jsp/gauge",
      "php-ui": "php/gauge"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/gauges",
      "jsp-ui": "jsp/gauge",
      "php-ui": "php/gauge"
    },
    "items": [
      {
        "text": "Basic usage",
        "url": "radial-gauge/index",
        "title": {
          "kendo-ui": "Demo for core features in Kendo UI Radial Gauge widget"
        },
        "meta": {
          "kendo-ui": "This sample demonstrates the core functionality of Kendo UI Radial Gauge which helps you easily visualize an indicator within a range of values."
        }
      },
      {
        "text": "Scale options",
        "url": "radial-gauge/scale-options",
        "title": {
          "kendo-ui": "Kendo UI Radial Gauge scale customization demo"
        },
        "meta": {
          "kendo-ui": "This example shows how you can easily use simple options to configure the gauge, enable/disable scale ranges and gauge labels."
        }
      },
      {
        "text": "Multiple pointers",
        "url": "radial-gauge/multiple-pointers",
        "updated":  "true",
        "title": {
          "kendo-ui": "Kendo UI Radial Gauge multiple pointers demo"
        },
        "meta": {
          "kendo-ui": "This example shows how easily you can configure the radial gauge to use multiple pointers."
        }
      },
      {
        "text": "Export to PDF, Image, SVG",
        "url": "radial-gauge/export",
        "title": {
          "kendo-ui": "Kendo UI Radial Gauge export demo"
        },
        "meta": {
          "kendo-ui": "This example shows how easily you can export the radial gauge to PDF, Image and SVG."
        }
      },
      {
        "text": "MVVM",
        "url": "radial-gauge/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Radial Gauge"
        },
        "meta": {
          "kendo-ui": "Value and visible MVVM binding support in Kendo UI Radial Gauge"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "radial-gauge/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Radial Gauge"
        },
        "meta": {
          "kendo-ui": "AngularJS directives support in Kendo UI Radial Gauge"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "Car Dashboard",
        "url": "radial-gauge/car-dashboard",
        "title": {
          "kendo-ui": "Sample car dashboard, built with Kendo UI DataViz components"
        },
        "meta": {
          "kendo-ui": "This sample demonstrates the use of Kendo UI Gauges"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Gauges"
  },
  {
    "text": "Arc Gauge",
    "name": "arc-gauge",
    "pro": "true",
    "new": "true",
    "spriteCssClass": "gaugeArcIcon",
    "api": {
      "all": "dataviz/ui/arcgauge",
      "php-ui": "api/php/Kendo/Dataviz/UI/ArcGauge"
    },
    "documentation": {
      "kendo-ui": "controls/gauges/arcgauge/overview",
      "aspnet-mvc": "getting-started/using-kendo-with/aspnet-mvc/helpers/arcgauge/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/arcgauge/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/arcgauge/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/gauges",
      "aspnet-mvc": "aspnet-mvc/gauge",
      "jsp-ui": "jsp/gauge",
      "php-ui": "php/gauge"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/gauges",
      "aspnet-mvc": "aspnet-mvc/gauge",
      "jsp-ui": "jsp/gauge",
      "php-ui": "php/gauge"
    },
    "items": [
      {
        "text": "Basic usage",
        "url": "arc-gauge/index",
        "title": {
          "kendo-ui": "Demo for core features in Kendo UI Arc Gauge widget",
          "aspnet-mvc": "Demo for core features in ASP.NET MVC Arc Gauge control"
        },
        "meta": {
          "kendo-ui": "This sample demonstrates the core functionality of Kendo UI Arc Gauge which helps you easily visualize an indicator within a range of values.",
          "aspnet-mvc": "This sample demonstrates the core functionality of ASP.NET MVC Arc Gauge which helps you easily visualize an indicator within a range of values."
        },
        "description": {
          "kendo-ui": "<p> The Kendo UI Arc Gauge widget displays a value range which is represented by an arc. All graphics render on the client by using the <a href=\"https://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">Scalable Vector Graphics (SVG)</a> format.</p>"
        }
      },
      {
        "text": "Colors",
        "url": "arc-gauge/colors",
        "title": {
          "kendo-ui": "Kendo UI Arc Gauge colors demo",
          "aspnet-mvc": "ASP.NET MVC Arc Gauge colors demo"
        },
        "meta": {
          "kendo-ui": "This example shows how you can use the colors configuration to set different colors for values in specific ranges.",
          "aspnet-mvc": "This example shows how you can configure the ASP.NET MVC arc gauge to use different colors for values in specific ranges."
        },
        "description": {
          "kendo-ui": "<p> The Arc Gauge enables you to set different colors depending on the current value. To configure the range colors, set the <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/arcgauge/configuration/colors\">`colors`</a> option.</p>"
        }
      },
      {
        "text": "Export to PDF, Image, SVG",
        "url": "arc-gauge/export",
        "title": {
          "kendo-ui": "Kendo UI Arc Gauge export demo",
          "aspnet-mvc": "ASP.NET MVC Arc Gauge export demo"
        },
        "meta": {
          "kendo-ui": "This example shows how easily you can export the arc gauge to PDF, Image and SVG.",
          "aspnet-mvc": "This example shows how easily you can export the ASP.NET MVC arc gauge to PDF, Image and SVG."
        },
        "description": {
          "kendo-ui": "<p> This example shows how to export the arc gauge to PDF, Image and SVG. To export the Arc Gauge use the <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/arcgauge/methods/exportpdf\">exportPDF</a>, <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/arcgauge/methods/exportsvg\">exportSVG</a> and <a href=\"https://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/arcgauge/methods/exportimage\">exportImage</a> methods.</p>"
        }
      },
      {
        "text": "MVVM",
        "url": "arc-gauge/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Arc Gauge"
        },
        "meta": {
          "kendo-ui": "Value and visible MVVM binding support in Kendo UI Arc Gauge"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "description": {
          "kendo-ui": "<p>The MVVM feature of the Kendo UI framework provides powerful two-way data binding capabilities, built on the popular Model-View-ViewModel concept. In this way you can easily make attribute values for widgets observable and modify them automatically when changes are applied in the data source, or alter the underlying data when the user interacts with the UI.</p> <p>In this example we show how to configure the Kendo UI Arc Gauge to make use of the MVVM functionality exposed by the framework. For this purpose we create a <strong>viewmodel instance </strong>(with <strong>kendo.observable</strong> call), and instantiate the Arc Gauge, its attributes and binding definition using<strong> data-</strong> attributes. The important detail to wire the viewmodel is to invoke <strong>kendo.bind</strong> to the container element of the Arc Gauge, passing the viewmodel as a second argument. Review the code snippets from the demo for more info.</p> <p>Details on the MVVM features of the Kendo UI framework can be obtained from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/mvvm/overview\">this chapter of the documentation</a>. </p>"
        }
      },
      {
        "text": "AngularJS",
        "url": "arc-gauge/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Arc Gauge"
        },
        "meta": {
          "kendo-ui": "AngularJS directives support in Kendo UI Arc Gauge"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "description": {
          "kendo-ui": "<p>The Kendo UI Arc Gauge features inborn integration with AngularJS using directives which are officially supported as part of the product. To make use of this integration, you need to reference the Angular scripts in your app and register the module incorporating the Kendo UI directives in the following way:</p><p> angular.module(\"KendoDemos\", [ \"kendo.directives\" ])</p>"
        }
      }
    ],
    "category": "Gauges"
  },
  {
    "text": "Line Charts",
    "name": "line-charts",
    "component": "charts",
    "pro": "true",
    "api": { "all": "dataviz/chart" },
    "documentation": {
      "kendo-ui": "getting-started/dataviz/chart/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "spriteCssClass": "chartLineIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "line-charts/index",
        "title": {
          "kendo-ui": "Kendo UI Line Charts Demo"
        },
        "meta": {
          "kendo-ui": "This example illustrates the features and core functionality of Kendo UI Line Charts component. HTML5 line graphs show trends over a specific time period."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart is a data visualization widget which allows you to output a graphical representation of your data. It is useful when you would like to utilize modern browser technologies such as SVG or Canvas (with a fallback to VML for older IE versions) for interactive data visualizations. The chart supports various chart types such as area, bar, line, scatter, pie and donut, etc. as well as stock (OHLC).</p><p>In this example, you can see how to register and configure a Line chart. A Line chart shows data as continuous lines that pass through points defined by their items' values. It can be useful for showing a trend over time and comparing several (four in this demo) sets of similar data.</p><br/><p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><br/><p>The chart can fetch data for its series from either local or remote data source. It can also use the Kendo UI DataSource as a mediator for processing data.</p><br/><p>Additional information about how to use the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">this section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "Stacked line",
        "url": "line-charts/stacked-line",
        "title": {
          "kendo-ui": "Kendo UI Stacked Line Charts Demo"
        },
        "meta": {
          "kendo-ui": "This demo shows how you can easily implement Kendo UI Stacked Line Charts in your business webapp."
        },
        "group": "Line Chart Types",
        "description": {
          "kendo-ui": "<p>This demo shows how to configure a Stacked line chart. To enable this feature set the seriesDefaults -&gt; stack setting</p><p>You can also divide the line chart series in two parts, by setting:</p> <p>missingValues -&gt; gap</p> <p>and having <strong>null</strong> data value entries in the series data, which will be used as a divider.</p> <p>For more information inspect the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-seriesDefaults\">SeriesDefaults option</a> in the documentation.</p>"
        }
      },
      {
        "text": "100% Stacked line",
        "url": "line-charts/stacked100-line",
        "title": {
          "kendo-ui": "Kendo UI 100% Stacked Line Charts Demo"
        },
        "meta": {
          "kendo-ui": "This demo shows how you can easily implement Kendo UI 100% Stacked Line Charts in your business webapp."
        },
        "description": {
          "kendo-ui": "<p>The Line chart supports 100% stacking, where the last series is always rendered as a flat line on top of the value axis.</p> <p>You can enable the 100% stack feature through the seriesDefaults-&gt; stack -&gt; type setting.</p> <p>For more information inspect the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-seriesDefaults\">SeriesDefaults option</a> in the documentation.</p>"
        }
      },
      {
        "text": "Stepped line",
        "url": "line-charts/step-line",
        "title": {
          "kendo-ui": "Example of using Kendo UI Line Chart with step line style"
        },
        "meta": {
          "kendo-ui": "This demo shows how to configure step line style for the Kendo UI Line Chart"
        },
        "description": {
          "kendo-ui": "<p>The Stepped Line chart is a form of Line chart where each data point from the series is connected with vertical and horizontal lines to form a step-like progression. This type of line visualization is useful when you want to highlight the increase or decrease in values over time.</p> <p>You can configure a stepped area chart through the series -&gt; style settings of the Kendo UI Chart.</p>"
        }
      },
      {
        "text": "Smooth line",
        "url": "line-charts/smooth-line",
        "title": {
          "kendo-ui": "Example of using Kendo UI Line Chart with smooth line (spline) style"
        },
        "meta": {
          "kendo-ui": "This demo shows how to configure smooth line (spline) style for the Kendo UI Line Chart"
        },
        "description": {
          "kendo-ui": "<p>This demo shows how to configure smooth line (spline) style for the Telerik Kendo UI line chart.</p> <p>A Spline chart is a form of line/area chart where each data point from the series is connected with a curved line, which represents a rough approximation of the missing data points.</p> <p>You can configure a smooth line area chart through the series -&gt;  style settings of the chart.</p>"
        }
      },
      {
        "text": "Date axis",
        "url": "line-charts/date-axis",
        "title": {
          "kendo-ui": "Example of Kendo UI HTML5 Line Charts Date Axis"
        },
        "meta": {
          "kendo-ui": "This demo illustrates the date axis in Kendo UI Line Charts can be easily changed by setting the configuration and specifying the aggregate function value."
        },
        "group": "Functionality",
        "description": {
          "kendo-ui": "<p>You can scale the date axis of the Kendo UI line chart to get a better visualization of the seasonal data in your app. This can be done by modifying:</p> <ul> <li>The base date unit of the x-axis through the categoryAxis.baseUnit attribute, which takes seconds, minutes, hours, days, week, months and years</li> <li>The default aggregates of the series through the series.aggregate attribute, which takes max, min, sum, avg and count.</li> </ul>"
        }
      },
      {
        "text": "Logarithmic axis",
        "url": "line-charts/logarithmic-axis",
        "title": {
          "kendo-ui": "Logarithmic axis sample for Kendo UI Line Charts"
        },
        "meta": {
          "kendo-ui": "This demo shows how you can use a logarithmic axis for the Kendo UI Line Chart."
        },
        "description": {
          "kendo-ui": "<p>Logarithmic axis is a special numeric axis that transforms the actual values by using a logarithmic function with a particular base. Logarithmic axis is useful for displaying values that cover different orders of magnitude because it lets large values display together with small values in a more condensed scale than the default linear axis.</p> <p>This example shows how you can use a logarithmic axis for the Kendo UI line chart by setting the valueAxis -&gt; type = \"log\". The base of the logarithmic axis is defined by the interval between the major divisions, controlled by the majorUnit property.</p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "Multi-axis",
        "url": "line-charts/multiple-axes",
        "title": {
          "kendo-ui": "Multi-axes feature example | Kendo UI Line Charts widget"
        },
        "meta": {
          "kendo-ui": "This demo shows how easily Kendo UI Line Charts can be customized to achieve what you want in your app. Apply multiple axes to your Kendo UI Line Charts."
        },
        "description": {
          "kendo-ui": "<p>The Telerik Kendo UI line chart supports multiple axis. This helps you leverage the best charting performance and visualize data on any number of axis to provide solid business reports for your users.</p> <p>The example illustrates a weather report and includes information for the: <em>max and min temperatures, wind speed and rainfall in mm</em>. Note that each of them has a unique name which is set through the <strong>series.name </strong>attribute. You can also populate the <strong>categoryAxis.axisCrossingValue</strong> array to specify the alignment of the value axes.</p>"
        }
      },
      {
        "text": "Notes",
        "url": "line-charts/notes",
        "title": {
          "kendo-ui": "Notes feature example | Kendo UI Line Charts widget"
        },
        "meta": {
          "kendo-ui": "This demo shows how to place annotations in your Kendo UI Charts."
        },
        "description": {
          "kendo-ui": "<p>In this demo, you can see how to add notes for the Min and Max values of the Line chart.</p> <p>To do that you need to set the series -&gt; notes and noteTextField settings which will also allow you to specify the note and its label position.</p>"
        }
      },
      {
        "text": "Error Bars",
        "url": "line-charts/error-bars",
        "title": {
          "kendo-ui": "Example of using ErrorBars for Kendo UI Line Chart"
        },
        "meta": {
          "kendo-ui": "This demo shows how to use ErrorBars for Kendo UI Line Chart"
        },
        "description": {
          "kendo-ui": "<p>This sample presents how to show variability of data using the Error Bars feature of the Kendo UI line chart. The Error bars are specified as part of the seriesDefaults -&gt; errorBars setting and are offered by the following series types: Area, Vertical Area, Column, Bar, Line, Vertical Line, Scatter and ScatterLine.</p> <p>The error bars support statistical calculations based on the series data. The supported types are <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/error-bars#setting-a-percentage-value\">percentage value</a>, <a href=\"http://en.wikipedia.org/wiki/Standard_error\">standard error</a> and <a href=\"http://en.wikipedia.org/wiki/Standard_deviation\">population standard deviation</a> and other. To specify that percentage error should be used, you need to set \"percentage(Int)\" as a value, i.e.</p><p>value: \"percentage(20)\"</p><p>You can find more information in the following help article: <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/error-bars\">Error Bars</a>.</p>"
        }
      },
      {
        "text": "Custom Visuals",
        "url": "line-charts/visuals",
        "title": {
          "kendo-ui": "Example of using custom visuals for the Kendo UI Line Chart"
        },
        "meta": {
          "kendo-ui": "This demo shows how to use ustom visuals for the Kendo UI Line Chart"
        },
        "description": {
          "kendo-ui": "<p>You can implement custom visualizations for the Line chart markers and highlights by utilizing the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/drawing\">Kendo Drawing API</a>. You can do that by assigning a JavaScript function which will generate the custom shapes via the markers -&gt; visual and the series -&gt; highlight -&gt; toggle configuration setting.<p>Context information is available through the function argument fields. Such are <strong>rect</strong> (the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/geometry/rect\">kendo.geometry.Rect</a> that defines where the visual should be rendered) and options (different options depending on the item type).</p> <p>You can read more about it in the <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/drawing\">Kendo UI JavaScript API reference</a>.</p>"
        }
      },
      {
        "text": "Binding to remote data",
        "url": "line-charts/remote-data-binding",
        "title": {
          "kendo-ui": "Binding to remote data example | Kendo UI Line Charts features"
        },
        "meta": {
          "kendo-ui": "This example illustrates how binding to remote data works in Kendo UI Line Charts and the demo source code would guide you how to apply it to your line chart."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart supports binding to remote data via RESTful services.</p> <p>For remote data binding you need to specify a remote endpoint or a web service returning data in JSON/JSONP format and utilize the DataSource in-between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example the chart fetches its data from a remote endpoint assigned via the DataSource read configuration. You can find more information about the data-binding capabilities of the Kendo UI chart in this <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\">help article</a>.</p>"
        },
        "group": "Data Binding",
        "requiresServer": "true"
      },
      {
        "text": "Binding to local data",
        "url": "line-charts/local-data-binding",
        "title": {
          "kendo-ui": "Binding to local data example | Kendo UI Line Charts"
        },
        "meta": {
          "kendo-ui": "This example illustrates how Kendo UI Line Charts use existing objects as data points."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its data source property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series and categoryAxis values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "Binding to grouped data",
        "url": "line-charts/grouped-data",
        "title": {
          "kendo-ui": "Binding to grouped data demo | Kendo UI Line Charts"
        },
        "meta": {
          "kendo-ui": "This example illustrates how binding to grouped data feature works in Kendo UI Line Charts."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart can be bound to a grouped data using <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/data/datasource\">Kendo UI DataSource</a>as a mediator. To do that follow the steps below:</p> <ol> <li>Bind the chart to a <a href=\"http://docs.telerik.com/kendo-ui/framework/datasource/overview\">Kendo UI DataSource instance</a>.</li> <li>Set the <a href=\"http://docs.telerik.com/kendo-ui/framework/datasource/basic-usage#working-with-grouped-data\">DataSource.group.field property</a> to the name (e.g., the &ldquo;symbol&rdquo; field) of the column in the underlying data which will be the criteria for grouping the chart series items into series</li> <li>Bind the Y values of the series to the corresponding data source field (e.g., the \"close\" field)</li> <li>Bind the categoryAxis to the corresponding field (e.g., the \"date\" field)</li> </ol> <p> This will result in as many series as the number of distinct values in the DataSource.group.field column (e.g., \"symbol\"). &nbsp;Since the &ldquo;symbol&rdquo; field in this example contains three distinct values (\"1. GOOG (close)\", \"2. AAPL (close)\" and \"3. AMZN (close)\") the chart will create three series as well.</p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "MVVM",
        "url": "line-charts/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Chart"
        },
        "meta": {
          "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Chart"
        },
        "description": {
          "kendo-ui": "<p>The MVVM feature of the Kendo UI framework provides powerful two-way data binding capabilities, built on the popular Model-View-ViewModel concept. In this way you can easily make attribute values for widgets observable and modify them automatically when changes are applied in the data source, or alter the underlying data when the user interacts with the UI.</p> <p>In this example we show how to configure the Kendo UI chart to make use of the MVVM functionality exposed by the framework. For this purpose we create a <strong>viewmodel</strong> instance (with <strong>kendo.observable</strong> call) which wraps the chart data source, and instantiate the chart, its attributes and binding definition using <strong>data-</strong> attributes. The important detail to wire the viewmodel is to invoke <strong>kendo.bind</strong> to the container element of the chart, passing the viewmodel as a second argument. Review the code snippets from the demo for more info.</p> <p>Details on the MVVM features of the Kendo UI framework can be obtained from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/mvvm/overview\">this chapter</a> of the documentation.</p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "requiresServer": "true"
      },
      {
        "text": "AngularJS",
        "url": "line-charts/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Chart"
        },
        "meta": {
          "kendo-ui": "AngularJS directives support in Kendo UI Chart"
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart features inborn integration with AngularJS using directives which are officially supported as part of the product. To make use of this integration, you need to reference the Angular scripts in your app and register the module incorporating the Kendo UI directives in the following way:</p><p> angular.module(\"KendoDemos\", [ \"kendo.directives\" ])</p><p>Thus you can utilize the AngularJS framework in combination with our chart for apps which could benefit from such integrations. Further, you can specify chart options as fields in the $scope and then associate them via the relevant <b>k-</b> chart Angular attribute definition. This is demonstrated in the demo at hand.</p><p>Additional information about how to use Kendo UI widgets with AngularJS you can gather from <a target=\"blank\" href=\"http://docs.telerik.com/kendo-ui/AngularJS/introduction#overview\">this help resource.</a></p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "requiresServer": "true"
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Diagram",
    "packages": ["!aspnet-core"],
    "name": "diagram",
    "component": "diagram",
    "pro": "true",
    "api": {
      "all": "dataviz/diagram",
      "php-ui": "api/php/Kendo/Dataviz/UI/Diagram"
    },
    "documentation": {
      "kendo-ui": "getting-started/dataviz/diagram/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/diagram/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/diagram/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/diagram",
      "jsp-ui": "jsp/diagram",
      "php-ui": "php/diagram"
    },
    "sources": {
      "kendo-ui": [
        {
          "name": "Sample service",
          "url": "~/content/service.html"
        }
      ]
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/diagram",
      "jsp-ui": "jsp/diagram",
      "php-ui": "php/diagram"
    },
    "spriteCssClass": "diagramIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "diagram/index",
        "title": {
          "kendo-ui": "Example of Kendo UI Diagram with a simple layout"
        },
        "meta": {
          "kendo-ui": "With this demo built with Kendo UI, you will be able to find out how Kendo UI Diagram widget can be implemented for hierarchical diagrams."
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "Built-in Layouts",
        "url": "diagram/layout",
        "title": {
          "kendo-ui": "Example of Kendo UI Diagram with different layouts"
        },
        "meta": {
          "kendo-ui": "This sample demonstrates the built-in layouts which are specific to Kendo UI Diagram component."
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "Editing",
        "url": "diagram/editing",
        "title": {
          "kendo-ui": "Kendo UI Diagram Editing"
        },
        "meta": {
          "kendo-ui": "In this example you will learn how you can easily use editing operations in Kendo UI Diagram."
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "PDF Export",
        "url": "diagram/pdf-export",
        "title": {
          "kendo-ui": "Kendo UI Diagram saveAsPDF API method"
        },
        "meta": {
          "kendo-ui": "This demo shows how to save the diagram as PDF directly in the browser."
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "Advanced Export",
        "url": "diagram/export",
        "title": {
          "kendo-ui": "Kendo UI Diagram Export API methods"
        },
        "meta": {
          "kendo-ui": "This demo shows how to export diagrams to PDF, PNG Images or SVG and save them directly in the browser."
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "Events",
        "url": "diagram/events",
        "title": {
          "kendo-ui": "Example of using events in Kendo UI Diagram control"
        },
        "meta": {
          "kendo-ui": "This example demonstrates different events which are available in Kendo UI Diagram widget."
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "API",
        "url": "diagram/api",
        "title": {
          "kendo-ui": "Example of Kendo UI Diagram API"
        },
        "meta": {
          "kendo-ui": "The API Functions of Kendo UI Diagram widget give you the option to add/remove shapes and connections, set the current pan and zoom, select elements."
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "MVVM",
        "url": "diagram/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Diagram"
        },
        "meta": {
          "kendo-ui": "Source, events and visible MVVM binding support in Kendo UI Diagram"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "diagram/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Diagram"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI Diagram"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Diagrams & Maps"
  },
  {
    "text": "Map",
    "name": "map",
    "component": "map",
    "pro": "true",
    "api": {
      "all": "dataviz/map",
      "php-ui": "api/php/Kendo/Dataviz/UI/Map"
    },
    "documentation": {
      "kendo-ui": "getting-started/dataviz/map/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/map/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/map/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/map",
      "jsp-ui": "jsp/map",
      "php-ui": "php/map"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/map",
      "jsp-ui": "jsp/map",
      "php-ui": "php/map"
    },
    "spriteCssClass": "mapIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "map/index",
        "title": {
          "kendo-ui": "Example of Kendo UI Map with a simple tile layer"
        },
        "meta": {
          "kendo-ui": "With this demo built with Kendo UI, you will be able to find out how Kendo UI Map widget can be implemented for tile maps."
        }
      },
      {
        "text": "Bing tile layer",
        "url": "map/bing",
        "title": {
          "kendo-ui": "Bing tile layer in Kendo UI Map"
        },
        "meta": {
          "kendo-ui": "This demo demostrates how you can use Bing tile layer in your Hendo UI HTML5 Map."
        }
      },
      {
        "text": "Bubble layer",
        "url": "map/bubble-layer",
        "title": {
          "kendo-ui": "Displaying Bubble Kendo UI map layer"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how to bind a Kendo UI bubble map layer to remote data."
        },
        "requiresServer": "true"
      },
      {
        "text": "Binding to GeoJSON",
        "url": "map/geojson",
        "title": {
          "kendo-ui": "Displaying GeoJSON shapes Kendo UI map layer"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how to bind a Kendo UI map layer to GeoJSON shapes."
        },
        "requiresServer": "true"
      },
      {
        "text": "Binding markers to remote data",
        "url": "map/remote-markers",
        "title": {
          "kendo-ui": "Load map markers in a Kendo UI map layer"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how to bind a Kendo UI marker layer."
        },
        "requiresServer": "true"
      },
      {
        "text": "Export",
        "url": "map/export",
        "title": {
          "kendo-ui": "Kendo UI Map Export API methods"
        },
        "meta": {
          "kendo-ui": "This demo shows how to export maps to PDF, PNG Images or SVG and save them directly in the browser."
        }
      },
      {
        "text": "Events",
        "url": "map/events",
        "title": {
          "kendo-ui": "Events API for Kendo UI Map component"
        },
        "meta": {
          "kendo-ui": "This sample demonstrates the events which are specific to Kendo UI Map component."
        },
        "requiresServer": "true"
      },
      {
        "text": "API",
        "url": "map/api",
        "title": {
          "kendo-ui": "API for Kendo UI Map component"
        },
        "meta": {
          "kendo-ui": "This sample demonstrates the public methods which are specific to Kendo UI Map component."
        },
        "requiresServer": "true"
      },
      {
        "text": "AngularJS",
        "url": "map/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Map"
        },
        "meta": {
          "kendo-ui": "AngularJS directives support in Kendo UI Map"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "requiresServer": "true"
      }
    ],
    "category": "Diagrams & Maps"
  },
  {
    "text": "Pie Charts",
    "name": "pie-charts",
    "component": "charts",
    "pro": "true",
    "api": { "all": "dataviz/chart" },
    "documentation": {
      "kendo-ui": "getting-started/dataviz/chart/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "spriteCssClass": "chartPieIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "pie-charts/index",
        "title": {
          "kendo-ui": "Kendo UI HTML5 Pie Charts Example"
        },
        "meta": {
          "kendo-ui": "This demo shows how Kendo UI Pie Charts is easily applied to web apps. The control draws data series in slices in order to create rich HTML5 visualizations."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"http://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"http://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC), waterfall and other.</p><p>In this example, you can see how to register and configure a Pie chart. This chart type displays the data as sectors from a circle and is useful for displaying data as parts of a whole. The Pie chart displays a single series of data in a two-dimensional circle. </p><p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><p>The chart can fetch data for its series from either local or remote data source. You can find more information about the Kendo UI chart in the <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">product documentation</a>.</p> "
        }
      },
      {
        "text": "Pie labels",
        "url": "pie-charts/pie-labels",
        "title": {
          "kendo-ui": "Pie labels demo | Kendo UI jQuery Pie Charts"
        },
        "meta": {
          "kendo-ui": "This demo shows how the animated pie labels work in Kendo UI Pie Charts and lets you play with the configuration of the labels."
        },
        "description": {
          "kendo-ui": "<p>This example shows how to show/hide the labels of the Kendo UI Pie chart and specify how they are aligned.</p> <p>You can do that by getting a reference to the Chart client-object via:</p> <p>var chart = $(\"#chart\").data(\"kendoChart\")</p> <p>which will allow you to set and configure its series collection and attributes:<br /> <br /> var pieSeries = chart.options.series[0];<br /> pieSeries.labels.visible = true; // If set to true the chart will display the series labels.<br /> pieSeries.labels.align = \"circle\" or \"column\"; // circle - the labels are positioned in circle around the chart, column - the labels are positioned in columns to the left and right of the chart.</p> <p > You can find a complete list of the series attributes in <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-series\">the API documentation</a>.</p>"
        }
      },
      {
        "text": "Binding to remote data",
        "url": "pie-charts/remote-data-binding",
        "title": {
          "kendo-ui": "Binding to remote data example | Kendo UI Pie Charts"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how Kendo UI Pie Charts can be bound to remote data by configuring Kendo UI DataSource component."
        },
        "description": {
          "kendo-ui": "<p>The data in the Kendo UI chart can be streamed from a local or remote storage, thus being flexible enough to visualize information from any data storage.</p> <p>For remote data binding you need to specify a remote endpoint or web service (REST) returning data in JSON/JSONP format and utilize the Kendo UI DataSource in-between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example we demonstrate how Kendo UI chart can be bound to remote data by configuring the DataSource transport, which defines how the DataSource interacts with remote data.</p> <p>Discover more information about the data-binding capabilities of the chart widget in this <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\">help article</a>.</p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "Binding to local data",
        "url": "pie-charts/local-data-binding",
        "title": {
          "kendo-ui": "Kendo UI jQuery Pie Charts binding to local data demo"
        },
        "meta": {
          "kendo-ui": "This demo shows how Kendo UI Pie Charts use existing objects as data points. The example illustrates binding to local data feature of the widget."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its data source property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series and categoryAxis values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "MVVM",
        "url": "pie-charts/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Chart"
        },
        "meta": {
          "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Chart"
        },
        "description": {
          "kendo-ui": "<p>The MVVM feature of the Kendo UI framework provides powerful two-way data binding capabilities, built on the popular Model-View-ViewModel concept. In this way you can easily make attribute values for widgets observable and modify them automatically when changes are applied in the data source, or alter the underlying data when the user interacts with the UI.</p> <p>In this example we show how to configure the Kendo UI Pie chart to make use of the MVVM functionality exposed by the framework. For this purpose we create a <strong>viewmodel</strong> instance (with <strong>kendo.observable</strong> call) which wraps the pie chart data source, and instantiate the widget, its attributes and binding definition using <strong>data-</strong> attributes. The important detail to wire the viewmodel is to invoke <strong>kendo.bind</strong> to the container element of the chart, passing the viewmodel as a second argument. Review the code snippets from the demo for more info.</p> <p>Details on the MVVM features of the Kendo UI framework can be obtained from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/mvvm/overview\">this chapter</a> of the documentation.</p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "requiresServer": "true"
      },
      {
        "text": "AngularJS",
        "url": "pie-charts/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Chart"
        },
        "meta": {
          "kendo-ui": "AngularJS directives support in Kendo UI Chart"
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI Pie chart features inborn integration with AngularJS using directives which are officially supported as part of the product. To make use of this integration, you need to reference the Angular scripts in your app and register the module incorporating the Kendo UI directives in the following way:</p> <p> angular.module(\"KendoDemos\", [ \"kendo.directives\" ])</p> <p>Thus you can utilize the AngularJS framework in combination with our chart for apps which could benefit from such integrations. Further, you can specify chart options as fields in the $scope and then associate them via the relevant <strong>k-</strong> pie chart Angular attribute definition. This is demonstrated in the demo at hand.</p> <p>Additional information about how to use Kendo UI widgets with AngularJS you can gather from <a target=\"blank\" href=\"http://docs.telerik.com/kendo-ui/AngularJS/introduction#overview\">this help resource.</a></p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "requiresServer": "true"
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Polar Charts",
    "name": "polar-charts",
    "component": "charts",
    "pro": "true",
    "api": { "all": "dataviz/chart" },
    "documentation": {
      "kendo-ui": "getting-started/dataviz/chart/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "spriteCssClass": "chartPolarIcon",
    "items": [
      {
        "text": "Polar line",
        "url": "polar-charts/index",
        "title": {
          "kendo-ui": "Kendo UI jQuery-based Polar Charts Demo"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how Kendo UI Polar Charts component can be added to your web page in order to visualize quantitive data. Learn how to define your polar chart."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"http://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"http://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC), waterfall and other.</p> <p>The Polar chart, demonstrated in this demo, shows data in a circular plot area in polar coordinates where each data point is represented by a distance/radius and an angle, beginning of the coordinate system. Polar charts are useful for visualizing scientific data like precipitation/heat distribution in the Earth's poles and other multivariate data. </p><p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><p>The chart can fetch data for its series from either local or remote data source. You can find more information about the Kendo UI chart in the <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">product documentation</a>.</p>"
        }
      },
      {
        "text": "Smooth polar line",
        "url": "polar-charts/smooth-polar-line",
        "title": {
          "kendo-ui": "Example of using smooth line (spline) style for Kendo UI Polar Charts"
        },
        "meta": {
          "kendo-ui": "This demo shows how to configure the Kendo UI Polar Charts to use smooth line (spline) style"
        },
        "description": {
          "kendo-ui": "<p>This demo shows how to configure <em>smooth (spline)</em> polar line style for the Kendo UI Polar chart.</p> <p>A Spline chart is a form of line/area chart where each data point from the series is connected with a curved line, which represents a rough approximation of the missing data points.</p> <p>You can configure a smooth polar area chart through the series -&gt; style -&gt; smooth configuration setting.</p>"
        }
      },
      {
        "text": "Polar scatter",
        "url": "polar-charts/polar-scatter",
        "title": {
          "kendo-ui": "Kendo UI Polar Charts | Example of polar scatter chart"
        },
        "meta": {
          "kendo-ui": "This demo shows how to configure Kendo UI Polar Scatter Chart"
        },
        "description": {
          "kendo-ui": "<p>This example demonstrates how to create a polar scatter chart, which series type is represented on the chart as non-connected data points.</p> <p>You can define the polar scatter series through the seriesDefaults -&gt; type -&gt; polarScatter setting.</p>"
        }
      },
      {
        "text": "Polar area",
        "url": "polar-charts/polar-area",
        "title": {
          "kendo-ui": "Kendo UI Polar Charts | Example of polar area chart"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how to configure Kendo UI Polar Area Chart"
        },
        "description": {
          "kendo-ui": "<p>This demo shows how to create a polar area chart, which series type is represented by data points connected with straight line segments that enclose a filled area together with the chart pole.</p> <p>You can configure such chart from the series -&gt; type -&gt; polarArea setting</p>"
        }
      },
      {
        "text": "Binding to remote data",
        "url": "polar-charts/remote-data-binding",
        "title": {
          "kendo-ui": "Example of jQuery & HTML5 Kendo UI Polar Chart bound to remote data"
        },
        "meta": {
          "kendo-ui": "This demo shows how Kendo UI Polar Chart can be bound to remote data by configuring the DataSource transport which defines how the DataSource interacts with remote data."
        },
        "description": {
          "kendo-ui": "<p>The data in the Kendo UI chart can be streamed from a local or remote storage, thus being flexible enough to visualize information from any data storage.</p> <p>For remote data binding you need to specify a remote endpoint or web service (REST) returning data in JSON/JSONP format and utilize the Kendo UI DataSource in-between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example we demonstrate how Kendo UI chart can be bound to remote data by configuring the DataSource transport, which defines how the DataSource interacts with remote data.</p> <p>Discover more information about the data-binding capabilities of the chart widget in this <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\">help article</a>.</p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "Binding to local data",
        "url": "polar-charts/local-data-binding",
        "title": {
          "kendo-ui": "Kendo UI Polar Charts binding to local data example"
        },
        "meta": {
          "kendo-ui": "This sample demonstrates that Kendo UI HTML5 chart can use existing objects as data points."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its data source property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series and categoryAxis values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "MVVM",
        "url": "polar-charts/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Chart"
        },
        "meta": {
          "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Chart"
        },
        "description": {
          "kendo-ui": "<p>The MVVM feature of the Kendo UI framework provides powerful two-way data binding capabilities, built on the popular Model-View-ViewModel concept. In this way you can easily make attribute values for widgets observable and modify them automatically when changes are applied in the data source, or alter the underlying data when the user interacts with the UI.</p> <p>In this example we show how to configure the Kendo UI chart to make use of the MVVM functionality exposed by the framework. For this purpose we create a <strong>viewmodel</strong> instance (with <strong>kendo.observable</strong> call) which wraps the chart data source, and instantiate the widget, its attributes and binding definition using <strong>data-</strong> attributes. The important detail to wire the viewmodel is to invoke <strong>kendo.bind</strong> to the container element of the chart, passing the viewmodel as a second argument. Review the code snippets from the demo for more info.</p> <p>Details on the MVVM features of the Kendo UI framework can be obtained from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/mvvm/overview\">this chapter</a> of the documentation.</p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "requiresServer": "true"
      },
      {
        "text": "AngularJS",
        "url": "polar-charts/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Chart"
        },
        "meta": {
          "kendo-ui": "AngularJS directives support in Kendo UI Chart"
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart features inborn integration with AngularJS using directives which are officially supported as part of the product. To make use of this integration, you need to reference the Angular scripts in your app and register the module incorporating the Kendo UI directives in the following way:</p> <p> angular.module(\"KendoDemos\", [ \"kendo.directives\" ])</p> <p>Thus you can utilize the AngularJS framework in combination with our chart for apps which could benefit from such integrations. Further, you can specify chart options as fields in the $scope and then associate them via the relevant <strong>k-</strong> chart Angular attribute definition. This is demonstrated in the demo at hand.</p> <p>Additional information about how to use Kendo UI widgets with AngularJS you can gather from <a target=\"blank\" href=\"http://docs.telerik.com/kendo-ui/AngularJS/introduction#overview\">this help resource.</a></p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "requiresServer": "true"
      }
    ],
    "category": "Charts"
  },
  {
    "text": "QR Code",
    "name": "qrcode",
    "component": "qrcode",
    "pro": "true",
    "spriteCssClass": "qrcodeIcon",
    "api": {
      "all": "dataviz/qrcode",
      "php-ui": "api/php/Kendo/Dataviz/UI/QRCode"
    },
    "documentation": {
      "kendo-ui": "getting-started/dataviz/qrcode/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/qrcode/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/qrcode/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/qrcode",
      "jsp-ui": "jsp/qrcode",
      "php-ui": "php/qrcode"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/qrcode",
      "jsp-ui": "jsp/qrcode",
      "php-ui": "php/qrcode"
    },
    "items": [
      {
        "text": "Basic usage",
        "url": "qrcode/index",
        "title": {
          "kendo-ui": "Kendo UI QRCode Demo"
        },
        "meta": {
          "kendo-ui": "This sample demonstrates the core functionality of Kendo UI QRCode which helps you easily encode large amounts of data in a machine readable format."
        }
      },
      {
        "text": "API",
        "url": "qrcode/api",
        "title": {
          "kendo-ui": "Kendo UI QRCode API demo"
        },
        "meta": {
          "kendo-ui": "This demo shows how Kendo UI QRCode Widget API works and what kind of functions it supports."
        },
        "packages": [
          "!offline"
        ]
      },
      {
        "text": "MVVM",
        "url": "qrcode/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI QR Code"
        },
        "meta": {
          "kendo-ui": "Value MVVM binding support in Kendo UI QR Code"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "qrcode/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI QR Code"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support in Kendo UI QR Code"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Barcodes"
  },
  {
    "text": "Radar Charts",
    "name": "radar-charts",
    "component": "charts",
    "pro": "true",
    "api": { "all": "dataviz/chart" },
    "documentation": {
      "kendo-ui": "getting-started/dataviz/chart/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "spriteCssClass": "chartRadarIcon",
    "items": [
      {
        "text": "Radar line",
        "url": "radar-charts/index",
        "title": {
          "kendo-ui": "Kendo UI jQuery-based Radar Charts Demo"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how Kendo UI Radar Charts component can be added to your web page in order to visualize quantitive data. Learn how to define your radar chart."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"http://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"http://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC), waterfall and other.</p> <p> This demo demonstrates the Radar Line type which series are represented on the chart as data points connected with straight line.</p><p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><p>The chart can fetch data for its series from either local or remote data source. You can find more information about the Kendo UI chart in the <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">product documentation</a>.</p> "
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "Smooth radar line",
        "url": "radar-charts/smooth-radar-line",
        "title": {
          "kendo-ui": "Example of using smooth line (spline) style for the Kendo UI Radar Charts"
        },
        "meta": {
          "kendo-ui": "This demo shows how to configure the Kendo UI Radar Charts to use smooth line style (spline)"
        },
        "description": {
          "kendo-ui": "<p>This demo shows how to configure <em>smooth (spline)</em> radar line style for the Kendo UI Radar Chart.</p> <p>A Spline chart is a form of line/area chart where each data point from the series is connected with a curved line, which represents a rough approximation of the missing data points.</p> <p>You can configure a smooth polar area chart through the seriesDefaults -&gt; style -&gt; smooth setting.</p>"
        },
        "requiresServer": "true",
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "Radar area",
        "url": "radar-charts/radar-area",
        "title": {
          "kendo-ui": "Kendo UI Radar Charts | Example of radar area chart"
        },
        "meta": {
          "kendo-ui": "This demo shows how to configure Kendo UI Radar Area Chart"
        },
        "description": {
          "kendo-ui": "<p>This demo shows how to create a radar area chart, which series type is represented by data points connected with straight line segments that enclose a filled area. You can configure this chart from the Series -&gt; RadarArea configuration setting.</p>"
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "Radar column",
        "url": "radar-charts/radar-column",
        "title": {
          "kendo-ui": "Kendo UI Radar Charts | Example of radar column chart"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how to display a Kendo UI Radar Column Chart"
        },
        "description": {
          "kendo-ui": "<p>This example displays how to create a radar column chart, which series type is represented as data columns whose height varies according to their value.</p> <p>You can configure this chart from the series -&gt; type -&gt; radarColumn configuration setting.</p>"
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "Binding to remote data",
        "url": "radar-charts/remote-data-binding",
        "title": {
          "kendo-ui": "Example of jQuery & HTML5 Kendo UI Radar Charts bound to remote data"
        },
        "meta": {
          "kendo-ui": "This demo shows how Kendo UI Radar Chart can be bound to remote data by configuring the DataSource transport which defines how the DataSource interacts with remote data."
        },
        "description": {
          "kendo-ui": "<p>The data in the Kendo UI chart can be streamed from a local or remote storage, thus being flexible enough to visualize information from any data storage.</p> <p>For remote data binding you need to specify a remote endpoint or web service (REST) returning data in JSON/JSONP format and utilize the Kendo UI DataSource in-between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example we demonstrate how Kendo UI chart can be bound to remote data by configuring the DataSource transport, which defines how the DataSource interacts with remote data.</p> <p>Discover more information about the data-binding capabilities of the chart widget in this <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\">help article</a>.</p>"
        },
        "requiresServer": "true",
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "Binding to local data",
        "url": "radar-charts/local-data-binding",
        "title": {
          "kendo-ui": "Kendo UI Radar Charts binding to local data example"
        },
        "meta": {
          "kendo-ui": "This sample demonstrates that Kendo UI HTML5 chart can use existing objects as data points."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its data source property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series and categoryAxis values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>"
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "Binding to grouped data",
        "url": "radar-charts/grouped-data",
        "title": {
          "kendo-ui": "Kendo UI Radar Charts | Example of binding to grouped data"
        },
        "meta": {
          "kendo-ui": "With this example you will learn how to bind grouping data to Kendo UI Radar Charts."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart can be bound to grouped data using <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/data/datasource\"> Kendo UI DataSource</a> as a mediator. To do so you can follow the steps below:</p> <ol> <li>Feed data to the chart via <a href=\"http://docs.telerik.com/kendo-ui/framework/datasource/overview\"> Kendo UI DataSource instance</a>.</li> <li>Set the <a href=\"http://docs.telerik.com/kendo-ui/framework/datasource/basic-usage#working-with-grouped-data\">DataSource.group.field property</a> to the name (e.g., the &ldquo;Category&rdquo; field) of the column in the underlying data which will be the criteria for grouping the chart items into series</li> <li>Bind the RadarColumn values of the series to the corresponding data source field (e.g., the &ldquo; Frequency&rdquo; and &ldquo; DirText &rdquo; fields)</li> <li> Hide the Value Axis</li> </ol> <p><br /> This will result in as many series as the number of distinct values in the DataSource.group.field column.</p>"
        },
        "requiresServer": "true",
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "MVVM",
        "url": "radar-charts/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Chart"
        },
        "meta": {
          "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Chart"
        },
        "description": {
          "kendo-ui": "<p>The MVVM feature of the Kendo UI framework provides powerful two-way data binding capabilities, built on the popular Model-View-ViewModel concept. In this way you can easily make attribute values for widgets observable and modify them automatically when changes are applied in the data source, or alter the underlying data when the user interacts with the UI.</p> <p>In this example we show how to configure the Kendo UI Radar chart to make use of the MVVM functionality exposed by the framework. For this purpose we create a <strong>viewmodel</strong> instance (with <strong>kendo.observable</strong> call) which wraps the chart data source, and instantiate the widget, its attributes and binding definition using <strong>data-</strong> attributes. The important detail to wire the viewmodel is to invoke <strong>kendo.bind</strong> to the container element of the chart, passing the viewmodel as a second argument. Review the code snippets from the demo for more info.</p> <p>Details on the MVVM features of the Kendo UI framework can be obtained from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/mvvm/overview\">this chapter</a> of the documentation.</p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "requiresServer": "true"
      },
      {
        "text": "AngularJS",
        "url": "radar-charts/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Chart"
        },
        "meta": {
          "kendo-ui": "AngularJS directives support in Kendo UI Chart"
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI Radar chart features inborn integration with AngularJS using directives which are officially supported as part of the product. To make use of this integration, you need to reference the Angular scripts in your app and register the module incorporating the Kendo UI directives in the following way:</p> <p> angular.module(\"KendoDemos\", [ \"kendo.directives\" ])</p> <p>Thus you can utilize the AngularJS framework in combination with our chart for apps which could benefit from such integrations. Further, you can specify chart options as fields in the $scope and then associate them via the relevant <strong>k-</strong> pie chart Angular attribute definition. This is demonstrated in the demo at hand.</p> <p>Additional information about how to use Kendo UI widgets with AngularJS you can gather from <a target=\"blank\" href=\"http://docs.telerik.com/kendo-ui/AngularJS/introduction#overview\">this help resource.</a></p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "requiresServer": "true"
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Range Bar Charts",
    "component": "charts",
    "pro": "true",
    "api": { "all": "dataviz/chart" },
    "documentation": {
      "kendo-ui": "getting-started/dataviz/chart/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "items": [
      {
        "text": "Basic usage",
        "url": "range-bar-charts/index",
        "title": {
          "kendo-ui": "Demo for Kendo UI Range Bar Chart"
        },
        "meta": {
          "kendo-ui": "This example illustrates the basic usage of Kendo UI Range Bar Chart which enables the user to show customized range bar charts."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"http://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"http://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC), waterfall and other.</p> <p>This demo shows how to create a Range Bar chart, which displays data as bars where each bar represents a value range that spans between its minimum (i.e., From property) and maximum (i.e., To property) levels. A Range Bar type has floating bars unlike the standard Ba chart that has anchored bars to its x-axis.</p> <p>This chart type is useful for comparing the low and high levels of value ranges (e.g., employees' working time, blood glucose levels per day, average minimum and maximum temperatures and rainfalls over time, etc.).</p> <p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><p>The chart can fetch data for its series from either local or remote data source. You can find more information about the Kendo UI chart in the <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">product documentation</a>.</p> "
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "Binding to local data",
        "url": "range-bar-charts/local-data-binding",
        "title": {
          "kendo-ui": "Local data-binding example | Kendo UI Range Bar Charts"
        },
        "meta": {
          "kendo-ui": "This demo shows how the local data-binding is supported in Kendo UI Range Bar Charts. Use the demo source code to try the feature of the widget."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its data source property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series and categoryAxis values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>"
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "Binding to remote data",
        "url": "range-bar-charts/remote-data-binding",
        "title": {
          "kendo-ui": "Binding to remote data demo | Kendo UI HTML5 jQuery Range Bar Charts"
        },
        "meta": {
          "kendo-ui": "This demo shows how Kendo UI Range Bar Chart widget can be bound to remote data to produce high-performance report in your business app."
        },
        "description": {
          "kendo-ui": "<p>The data in the Kendo UI chart can be streamed from a local or remote storage, thus being flexible enough to visualize information from any data storage.</p> <p>For remote data binding you need to specify a remote endpoint or web service (REST) returning data in JSON/JSONP format and utilize the Kendo UI DataSource in-between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example we demonstrate how Kendo UI chart can be bound to remote data by configuring the DataSource transport, which defines how the DataSource interacts with remote data.</p> <p>Discover more information about the data-binding capabilities of the chart widget in this <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\">help article</a>.</p>"
        },
        "requiresServer": "true",
        "packages": [
          "!aspnet-core"
        ]
      }
    ],
    "spriteCssClass": "chartRangeBarIcon",
    "name": "range-bar-charts",
    "category": "Charts"
  },
  {
    "text": "Range Area Charts",
    "pro": "true",
    "component": "charts",
    "api": { "all": "dataviz/chart" },
    "documentation": {
      "kendo-ui": "getting-started/dataviz/chart/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "items": [
      {
        "text": "Basic usage",
        "url": "range-area-charts/index",
        "title": {
          "kendo-ui": "Demo for Kendo UI Range Area Chart"
        },
        "meta": {
          "kendo-ui": "This example illustrates the basic usage of Kendo UI Range Area Chart which enables the user to show customized range area charts."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"http://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"http://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC), waterfall and other.</p> <p>This demo shows how to create a Range Area chart, which displays data as area where the area is filled between its minimum (i.e., From property) and maximum (i.e., To property) levels.</p> <p>This chart type is useful for comparing the low and high levels of value ranges (e.g., employees' working time, blood glucose levels per day, average minimum and maximum temperatures and rainfalls over time, etc.).</p> <p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><p>The chart can fetch data for its series from either local or remote data source. You can find more information about the Kendo UI chart in the <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">product documentation</a>.</p> "
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "Binding to local data",
        "url": "range-area-charts/local-data-binding",
        "title": {
          "kendo-ui": "Local data-binding example | Kendo UI Range Area Charts"
        },
        "meta": {
          "kendo-ui": "This demo shows how the local data-binding is supported in Kendo UI Range Area Charts. Use the demo source code to try the feature of the widget."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its data source property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series and categoryAxis values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>"
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "Binding to remote data",
        "url": "range-area-charts/remote-data-binding",
        "title": {
          "kendo-ui": "Binding to remote data demo | Kendo UI HTML5 jQuery Range Area Charts"
        },
        "meta": {
          "kendo-ui": "This demo shows how Kendo UI Range Area Chart widget can be bound to remote data to produce high-performance report in your business app."
        },
        "description": {
          "kendo-ui": "<p>The data in the Kendo UI chart can be streamed from a local or remote storage, thus being flexible enough to visualize information from any data storage.</p> <p>For remote data binding you need to specify a remote endpoint or web service (REST) returning data in JSON/JSONP format and utilize the Kendo UI DataSource in-between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example we demonstrate how Kendo UI chart can be bound to remote data by configuring the DataSource transport, which defines how the DataSource interacts with remote data.</p> <p>Discover more information about the data-binding capabilities of the chart widget in this <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\">help article</a>.</p>"
        },
        "requiresServer": "true",
        "packages": [
          "!aspnet-core"
        ]
      }
    ],
    "spriteCssClass": "chartRangeAreaIcon",
    "name": "range-area-charts",
    "category": "Charts"
  },
  {
    "text": "Scatter Charts",
    "name": "scatter-charts",
    "component": "charts",
    "pro": "true",
    "api": { "all": "dataviz/chart" },
    "documentation": {
      "kendo-ui": "getting-started/dataviz/chart/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "spriteCssClass": "chartScatterIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "scatter-charts/index",
        "title": {
          "kendo-ui": "Kendo UI jQuery-powered Scatter Charts Demo"
        },
        "meta": {
          "kendo-ui": "This example shows the most important features and functionality of Kendo UI Scatter Charts."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"http://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"http://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC), waterfall and other.</p> <p>You can see in this sample demonstration of a Scatter chart, which shows data as points defined by their items' values. Scatter charts are useful for showing the relation between different sets of data, for example scientific (experimental) results.</p>  <p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><p>The chart can fetch data for its series from either local or remote data source. You can find more information about the Kendo UI chart in the <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">product documentation</a>.</p>"
        }
      },
      {
        "text": "Scatter line chart",
        "url": "scatter-charts/scatter-line",
        "title": {
          "kendo-ui": "Kendo UI Scatter Line Charts Demo"
        },
        "meta": {
          "kendo-ui": "This sample demonstrates how Kendo UI Scatter Line Charts combines Line and Scatter chart types in your rich HTML5 data visualizations."
        },
        "description": {
          "kendo-ui": "<p>This example demonstrates how to create a scatter line chart, which is useful for displaying numerical data.</p> <p>You can define the scatter line series through the seriesDefaults -&gt; type -&gt; scatterLine setting.</p>"
        },
        "group": "Scatter Chart Types"
      },
      {
        "text": "Smooth scatter line",
        "url": "scatter-charts/smooth-scatter-line",
        "title": {
          "kendo-ui": "Example of using smooth line (spline) style for the Kendo UI Scatter Line Chart"
        },
        "meta": {
          "kendo-ui": "This demo shows how to configure the Kendo UI Scatter Line Chart to use smooth line (spline) style"
        },
        "description": {
          "kendo-ui": "<p>This example demonstrates how to create a smoother scatter line chart, in which the series items are connected with a fitted curve which represents a rough approximation of the missing data points.</p> <p>You can define the scatter line series through the seriesDefaults -&gt; style -&gt; smooth setting.</p>"
        }
      },
      {
        "text": "Date axis",
        "url": "scatter-charts/date-axis",
        "title": {
          "kendo-ui": "Date Axis demo in Kendo UI Scatter Charts"
        },
        "meta": {
          "kendo-ui": "This example illustrates all properties, specific to date value axis of Kendo UI jQuery Scatter Charts."
        },
        "group": "Functionality",
        "description": {
          "kendo-ui": "<p>This example illustrates how to data bind date time spans with Scatter Charts.</p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "Multi-axis",
        "url": "scatter-charts/multiple-axes",
        "title": {
          "kendo-ui": "Multiple axes in Kendo UI HTML5 Scatter Charts | Kendo UI DataViz Demos"
        },
        "meta": {
          "kendo-ui": "This demo illustrates how array of values for multi-axis Kendo UI Scatter Charts are displayed on the plot area."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI Scatter chart supports multiple axis. This helps you leverage the best charting performance and visualize data on any number axis to provide solid business reports for your users.</p> <p>The example shows a Dyno run report and includes information for the: <em>torgue and power</em>. Note that each of them has unique name which is set through the <strong>xAxis and yAxis title </strong>attribute.</p>"
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "Pan and zoom",
        "url": "scatter-charts/pan-and-zoom",
        "title": {
          "kendo-ui": "Pan and zoom in Kendo UI Scatter Charts"
        },
        "meta": {
          "kendo-ui": "In this example we demonstrate how to enable pan and zoom effects in Kendo UI Scatter Charts."
        },
        "description": {
          "kendo-ui": "<p>The Pan and Zoom features allow you to navigate through and zoom in/out the Telerik MVC Scatter Chart.</p><p>You can enable the pan feature through the pannable setting and the Zoom set the zoomable configuration option.</p>"
        }
      },
      {
        "text": "Custom Pan and zoom",
        "url": "scatter-charts/custom-pan-and-zoom",
        "title": {
          "kendo-ui": "Custom Pan and zoom in Kendo UI Scatter Charts"
        },
        "meta": {
          "kendo-ui": "In this example we demonstrate how to implement pan and zoom effects in Kendo UI Scatter Charts. Look at the source code to learn how to filter the DataSource component."
        },
        "description": {
          "kendo-ui": "<p>In addition to the built-in pan and zoom functionality, the Kendo UI chart supports custom panning and zooming as well. </p> <p>This example represents a custom implementation wiring the drag and zoom events of the chart. The idea is to intercept when these events are raised and change dynamically the xAxis settings of the scatter chart. Review the code snippets in the demo for more details.</p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!aspnet-core"
        ]
      },
      {
        "text": "Binding to remote data",
        "url": "scatter-charts/remote-data-binding",
        "title": {
          "kendo-ui": "Remote data-bound scatter series example | Kendo UI Scatter Charts"
        },
        "meta": {
          "kendo-ui": "This demo shows how scatter series of Kendo UI Scatter Charts can be bound to remote data source items."
        },
        "description": {
          "kendo-ui": "<p>The data in the Kendo UI chart can be streamed from a local or remote storage, thus being flexible enough to visualize information from any data storage.</p> <p>For remote data binding you need to specify a remote endpoint or web service (REST) returning data in JSON/JSONP format and utilize the Kendo UI DataSource in-between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example we demonstrate how Kendo UI chart can be bound to remote data by configuring the DataSource transport, which defines how the DataSource interacts with remote data.</p> <p>Discover more information about the data-binding capabilities of the chart widget in this <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\">help article</a>.</p>"
        },
        "group": "Data Binding",
        "requiresServer": "true"
      },
      {
        "text": "Binding to local data",
        "url": "scatter-charts/local-data-binding",
        "title": {
          "kendo-ui": "Example of binding to local data in Kendo UI jQuery Scatter Charts"
        },
        "meta": {
          "kendo-ui": "This demo shows how Kendo UI Scatter Charts can use local objects as data points in the HTML5 visualization."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its data source property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series and categoryAxis values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "Binding to grouped data",
        "url": "scatter-charts/grouped-data",
        "title": {
          "kendo-ui": "Example of Kendo UI Scatter Charts bound to grouped data"
        },
        "meta": {
          "kendo-ui": "This demo shows how define a group of values in Kendo UI Scatter Charts by configuring the parameters in the DataSource component."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart can be bound to grouped data using <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/data/datasource\"> Kendo UI DataSource</a> as a mediator. To do so you can follow the steps below:</p> <ol> <li>Feed data to the chart via <a href=\"http://docs.telerik.com/kendo-ui/framework/datasource/overview\"> Kendo UI DataSource instance</a>.</li> <li>Set the <a href=\"http://docs.telerik.com/kendo-ui/framework/datasource/basic-usage#working-with-grouped-data\">DataSource.group.field property</a> to the name (e.g., the &ldquo;Symbol&rdquo; field) of the column in the underlying data which will be the criteria for grouping the chart items into series</li> <li>Bind the Y values of the series to the corresponding data source field (e.g., the &ldquo;Date&rdquo; and &ldquo;Close&rdquo; fields)</li></ol> <p><br /> This will result in as many series as the number of distinct values in the DataSource.group.field column. &nbsp;Since the &ldquo;symbol&rdquo; field in this example contains three distinct values (&ldquo;1. GOOG (close)&rdquo;, &ldquo;2. AAPL (close)&rdquo; and &ldquo;3. AMZN (close)&rdquo;) the chart will create three series as well.</p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "MVVM",
        "url": "scatter-charts/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Chart"
        },
        "meta": {
          "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Chart"
        },
        "description": {
          "kendo-ui": "<p>The MVVM feature of the Kendo UI framework provides powerful two-way data binding capabilities, built on the popular Model-View-ViewModel concept. In this way you can easily make attribute values for widgets observable and modify them automatically when changes are applied in the data source, or alter the underlying data when the user interacts with the UI.</p> <p>In this example we show how to configure the Kendo UI chart to make use of the MVVM functionality exposed by the framework. For this purpose we create a <strong>viewmodel</strong> instance (with <strong>kendo.observable</strong> call) which wraps the data source, and instantiate the widget, its attributes and binding definition using <strong>data-</strong> attributes. The important detail to wire the viewmodel is to invoke <strong>kendo.bind</strong> to the container element of the chart, passing the viewmodel as a second argument. Review the code snippets from the demo for more info.</p> <p>Details on the MVVM features of the Kendo UI framework can be obtained from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/mvvm/overview\">this chapter</a> of the documentation.</p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "requiresServer": "true"
      },
      {
        "text": "AngularJS",
        "url": "scatter-charts/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Chart"
        },
        "meta": {
          "kendo-ui": "AngularJS directives support in Kendo UI Chart"
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart features inborn integration with AngularJS using directives which are officially supported as part of the product. To make use of this integration, you need to reference the Angular scripts in your app and register the module incorporating the Kendo UI directives in the following way:</p> <p> angular.module(\"KendoDemos\", [ \"kendo.directives\" ])</p> <p>Thus you can utilize the AngularJS framework in combination with our chart for apps which could benefit from such integrations. Further, you can specify chart options as fields in the $scope and then associate them via the relevant <strong>k-</strong> chart Angular attribute definition. This is demonstrated in the demo at hand.</p> <p>Additional information about how to use Kendo UI widgets with AngularJS you can gather from <a target=\"blank\" href=\"http://docs.telerik.com/kendo-ui/AngularJS/introduction#overview\">this help resource.</a></p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "requiresServer": "true"
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Sparklines",
    "name": "sparklines",
    "component": "sparkline",
    "pro": "true",
    "api": {
      "all": "dataviz/sparkline",
      "php-ui": "api/php/Kendo/Dataviz/UI/Sparkline"
    },
    "documentation": {
      "kendo-ui": "getting-started/dataviz/sparkline/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/sparkline/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/sparkline/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/sparkline",
      "jsp-ui": "jsp/sparkline",
      "php-ui": "php/sparkline"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/sparkline",
      "jsp-ui": "jsp/sparkline",
      "php-ui": "php/sparkline"
    },
    "spriteCssClass": "sparklineIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "sparklines/index",
        "title": {
          "kendo-ui": "Sparkline Charts | Kendo UI Sparklines demo"
        },
        "meta": {
          "kendo-ui": "In this interactive demo, we show the basic usage of Kendo UI Sparkline control which enables end users to identify trends, variations in the data."
        },
        "description": {
          "kendo-ui": "<p>A Sparkline is a very small chart, drawn without axes, coordinates, legend, title and other chart-specific elements. It behaves like an inline element (rendered inside a span) as opposed to the standard charts, which behave like block elements (rendered inside divs) so that it can be easily embedded in text.</p> <p>You can specify the sparkline type through the type property.</p>"
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "Binding to remote data",
        "url": "sparklines/remote-data-binding",
        "title": {
          "kendo-ui": "Binding to remote data in Kendo UI Sparkline Chart | Kendo UI Sparklines"
        },
        "meta": {
          "kendo-ui": "This Kendo UI Demo shows how to bind to remote data in Kendo UI Sparklines charting control."
        },
        "description": {
          "kendo-ui": "<p>The data in the Kendo UI chart can be streamed from a local or remote storage, thus being flexible enough to visualize information from any data storage.</p> <p>For remote data binding you need to specify a remote endpoint or web service (REST) returning data in JSON/JSONP format and utilize the Kendo UI DataSource in-between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example we demonstrate how Kendo UI sparkline charts can be bound to remote data by configuring the DataSource transport, which defines how the DataSource interacts with remote data.</p> <p>Discover more information about the data-binding capabilities of the chart widget in this <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\">help article</a>.</p>"
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "Binding to local data",
        "url": "sparklines/local-data-binding",
        "title": {
          "kendo-ui": "Local data binding in Kendo UI Sparkline Chart | Kendo UI Sparklines"
        },
        "meta": {
          "kendo-ui": "Learn how to bind local data to Kendo UI jQuery Sparkline charting component. Try it now!"
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its DataSource property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI sparkline chart, you need to specify an empty span with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>"
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "MVVM",
        "url": "sparklines/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI Sparkline"
        },
        "meta": {
          "kendo-ui": "Events, source and visible MVVM binding support in Kendo UI Sparkline"
        },
        "description": {
          "kendo-ui": "<p>The MVVM feature of the Kendo UI framework provides powerful two-way data binding capabilities, built on the popular Model-View-ViewModel concept. In this way you can easily make attribute values for widgets observable and modify them automatically when changes are applied in the data source, or alter the underlying data when the user interacts with the UI.</p> <p>In this example we show how to configure the Kendo UI Sparkline to make use of the MVVM functionality exposed by the framework. For this purpose we create a <strong>viewmodel</strong> instance (with <strong>kendo.observable</strong> call) which wraps the sparkline data source, and instantiate the widget, its attributes and binding definition using <strong>data-</strong> attributes. The important detail to wire the viewmodel is to invoke <strong>kendo.bind</strong> to the container element of the sparkline, passing the viewmodel as a second argument. Review the code snippets from the demo for more info.</p> <p>Details on the MVVM features of the Kendo UI framework can be obtained from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/mvvm/overview\">this chapter</a> of the documentation.</p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "sparklines/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Sparkline"
        },
        "meta": {
          "kendo-ui": "AngularJS directives support in Sparkline"
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI Sparkline features inborn integration with AngularJS using directives which are officially supported as part of the product. To make use of this integration, you need to reference the Angular scripts in your app and register the module incorporating the Kendo UI directives in the following way:</p> <p> angular.module(\"KendoDemos\", [ \"kendo.directives\" ])</p> <p>Thus you can utilize the AngularJS framework in combination with our chart for apps which could benefit from such integrations. Further, you can specify sparkline options as fields in the $scope and then associate them via the relevant <strong>k-</strong> sparkline Angular attribute definition. This is demonstrated in the demo at hand.</p> <p>Additional information about how to use Kendo UI widgets with AngularJS you can gather from <a target=\"blank\" href=\"http://docs.telerik.com/kendo-ui/AngularJS/introduction#overview\">this help resource.</a></p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ],
        "requiresServer": "true"
      }
    ],
    "category": "Charts"
  },
  {
    "text": "Stock Charts",
    "name": "financial",
    "component": "charts",
    "pro": "true",
    "api": {
      "all": "dataviz/stock-chart",
      "php-ui": "api/php/Kendo/Dataviz/UI/StockChart",
      "jsp-ui": "api/jsp/stockChart"
    },
    "documentation": {
      "kendo-ui": "getting-started/dataviz/stockchart/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/stockchart/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/stockchart/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "spriteCssClass": "chartStockIcon",
    "items": [
      {
        "text": "Basic usage",
        "url": "financial/index",
        "title": {
          "kendo-ui": "Example of Kendo UI charts for stock analysis apps"
        },
        "meta": {
          "kendo-ui": "With this demo for a stock chart, built with Kendo UI, you will be able to find out how Kendo UI chart widgets can be implemented in a financial app."
        },
        "description": {
          "kendo-ui": "<p> The Kendo UI chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"http://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"http://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC) and many more.</p> <p>The Stock Chart type, demonstrated in this example, can visualize the price movements of any financial instrument over the time. The chart describes the high, low, opening and closing prices for a single day by combining the Bar and Line charts. The High price is represented by the top of the upper thin line, while the Low price by the bottom of the lower line. The Open and Close prices are represented by the wide part (the body) of the item. If the close price is higher than the open price, the body is hollowed (usually colored white or green), otherwise it is filled (usually colored black or red). <br /> <br /> The financial chart also offers zooming and scrolling functionality, which is exposed by the Navigator pane, located below the main chart.</p><p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p> <p>The chart can fetch data for its series from either local or remote data source You can find more information about the Kendo UI chart in the <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">product documentation</a>.</p> "
        },
        "requiresServer": "true"
      },
      {
        "text": "Multiple panes",
        "url": "financial/panes",
        "title": {
          "kendo-ui": "Multiple panes in Kendo UI stock chart"
        },
        "meta": {
          "kendo-ui": "This demo illustrates the use of multiple graph panes in Kendo UI Stock chart."
        },
        "description": {
          "kendo-ui": "<p>This demo illustrates the use of multiple graph panes in Kendo UI Stock chart. You can define a pane through the panes configuration setting and set it&rsquo;s title and height:<br /> <br /> panes: [{ title: \"Value\" }, { name: \"volumePane\", title: \"Volume\", height: 150&nbsp; }]<br /> <br /> If you want to render a specific axis inside the newly created pane with name volumePane use the valueAxis -&gt; pane setting: <br /> <br /> valueAxes: [{ // Default axis line: { visible: false } }, { name: \"volumeAxis\", pane: \"volumePane\", visible: false }] </p>"
        },
        "requiresServer": "true"
      },
      {
        "text": "Virtualization",
        "url": "financial/virtualization",
        "title": {
          "kendo-ui": "Virtualization in Kendo UI Stock Chart"
        },
        "sources": {
          "kendo-ui": [
            {
              "name": "Sample service",
              "url": "~/content/service.html"
            }
          ]
        },
        "meta": {
          "kendo-ui": "In this example we show you how the virtualization works in Kendo UI Stock Chart for rich data visualization."
        },
        "description": {
          "kendo-ui": "<p>In this example you can see how the virtualization works in Kendo UI Stock Chart for rich data visualization. To enable it set the dataSource -&gt; serverFiltering value to true.</p>"
        }
      },
      {
        "text": "PDF Export",
        "url": "financial/pdf-export",
        "title": {
          "kendo-ui": "Kendo UI StockChart saveAsPDF API method"
        },
        "meta": {
          "kendo-ui": "This demo shows how to save the Stock Chart as PDF directly in the browser."
        },
        "description": {
          "kendo-ui": "<p>This example shows how to configure the PDF export settings of the Kendo UI Chart.</p> <p>You can specify the author, creator, date, fileName, pllPages, paperSize, proxyURL and other options, through the <strong>pdf</strong> setting of the UI component.</p><p>The <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#methods-saveAsPDF\">saveAsPDF</a> or <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#methods-exportPDF\">exportPDF</a> methods can be used to trigger export operation.</p>"
        }
      },
      {
        "text": "Stock History",
        "url": "financial/stock-history",
        "title": {
          "kendo-ui": "Kendo UI Chart controls application sample | Stock History"
        },
        "meta": {
          "kendo-ui": "The Stock History Dashboard demonstrates how the charting components in Kendo UI DataViz HTML5 framework are used to build a complex finance application."
        },
        "description": {
          "kendo-ui": "<p>The Stock History Dashboard demonstrates how the charting components in Kendo UI DataViz HTML5 framework are used to build a complex finance application.</p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "category": "Charts"
  },
  {
    "text": "TreeMap",
    "pro": "true",
    "component": "treemap",
    "spriteCssClass": "treemapIcon",
    "api": {
      "all": "dataviz/treemap",
      "php-ui": "api/php/Kendo/Dataviz/UI/TreeMap"
    },
    "documentation": {
      "kendo-ui": "getting-started/dataviz/treemap/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/treemap/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/treemap/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/treemap",
      "jsp-ui": "jsp/treemap",
      "php-ui": "php/treemap"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/treemap",
      "jsp-ui": "jsp/treemap",
      "php-ui": "php/treemap"
    },
    "items": [
      {
        "text": "Basic usage",
        "url": "treemap/index",
        "title": {
          "kendo-ui": "Kendo UI TreeMap Demo"
        },
        "meta": {
          "kendo-ui": ""
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI TreeMap widget suits perfectly for visualization of hierarchical data in a traditional tree structure. The extension provides three options (squarified, horizontal and vertical) for displaying data, which could be managed by the type argument value of the treemap&rsquo;s <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/treemap#methods-setOptions\">setOptions method.</a></p> <p>The main advantages of the control are that you could:</p> <ul> <li>Visualize huge data in a meaningful and colorized way (i.e. files system structure divided by size; the popularity of different tech devices on the market, and other)</li> <li>Optimize space on your web page by its compact structure</li> </ul> <p>You can learn how to initialize the widget and more in the documentation: <a href=\"http://docs.telerik.com/kendo-ui/dataviz/treemap/overview\" target=\"_blank\">TreeMap</a>.</p>"
        }
      },
      {
        "text": "Events",
        "url": "treemap/events",
        "title": {
          "kendo-ui": "Events in Kendo UI TreeMap"
        },
        "meta": {
          "kendo-ui": ""
        },
        "description": {
          "kendo-ui": "<p>The sample demonstrates the usage of the itemCreated and dataBound events of the Kendo UI Treemap. The itemCreated event is fired when a tile has been created, while the dataBound one is triggered when the widget is bound to data from its dataSource.</p>"
        }
      },
      {
        "text": "MVVM",
        "url": "treemap/mvvm",
        "title": {
          "kendo-ui": "MVVM support in Kendo UI TreeMap"
        },
        "meta": {
          "kendo-ui": ""
        },
        "description": {
          "kendo-ui": "<p>The MVVM feature of the Kendo UI framework provides powerful two-way data binding capabilities, built on the popular Model-View-ViewModel concept. In this way you can easily make attribute values for widgets observable and modify them automatically when changes are applied in the data source, or alter the underlying data when the user interacts with the UI.</p> <p>In this example we show how to configure the Kendo UI treemap to make use of the MVVM functionality exposed by the framework. For this purpose we create a <strong>viewmodel</strong> instance (with <strong>kendo.observable</strong> call) which wraps the treemap data source, and instantiate the widget, its attributes and binding definition using <strong>data-</strong> attributes. The important detail to wire the viewmodel is to invoke <strong>kendo.bind</strong> to the container element of the treemap, passing the viewmodel as a second argument. Review the code snippets from the demo for more info.</p> <p>Details on the MVVM features of the Kendo UI framework can be obtained from <a target=\"_blank\" href=\"http://docs.telerik.com/kendo-ui/framework/mvvm/overview\">this chapter</a> of the documentation.</p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      },
      {
        "text": "AngularJS",
        "url": "treemap/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI TreeMap"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI TreeMap"
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI TreeMap features inborn integration with AngularJS using directives which are officially supported as part of the product. To make use of this integration, you need to reference the Angular scripts in your app and register the module incorporating the Kendo UI directives in the following way:</p> <p> angular.module(\"KendoDemos\", [ \"kendo.directives\" ])</p> <p>Thus you can utilize the AngularJS framework in combination with our chart for apps which could benefit from such integrations. Further, you can specify chart options as fields in the $scope and then associate them via the relevant <strong>k-</strong> treemap Angular attribute definition. This is demonstrated in the demo at hand.</p> <p>Additional information about how to use Kendo UI widgets with AngularJS you can gather from <a target=\"blank\" href=\"http://docs.telerik.com/kendo-ui/AngularJS/introduction#overview\">this help resource.</a></p>"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ],
    "name": "treemap",
    "category": "Charts"
  },
  {
    "text": "Waterfall Charts",
    "name": "waterfall-charts",
    "component": "charts",
    "pro": "true",
    "api": { "all": "dataviz/chart" },
    "documentation": {
      "kendo-ui": "getting-started/dataviz/chart/overview",
      "jsp-ui": "getting-started/using-kendo-with/jsp/tags/chart/overview",
      "php-ui": "getting-started/using-kendo-with/php/widgets/chart/overview"
    },
    "forum": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/charts",
      "jsp-ui": "jsp/chart",
      "php-ui": "php/chart"
    },
    "items": [
      {
        "text": "Basic usage",
        "url": "waterfall-charts/index",
        "title": {
          "kendo-ui": "Demo for Kendo UI Waterfall Chart"
        },
        "meta": {
          "kendo-ui": "This example illustrates the basic usage of Kendo UI Waterfall Chart."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart is a powerful data visualization component, which allows you to graphically represent your data. It is useful when you would like to utilize modern browser technologies such as <a href=\"http://en.wikipedia.org/wiki/Scalable_Vector_Graphics\">SVG</a> or <a href=\"https://en.wikipedia.org/wiki/Canvas_element\">Canvas</a> (with a fallback to <a href=\"http://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> for older IE versions) for interactive data visualizations. </p> <p>The component offers a variety of chart types such as area, bar, line, scatter, polar, radar, pie and donut, stock (OHLC), waterfall and other.</p> <p>A Waterfall chart type shows the cumulative effect of positive or negative values on the starting point. Its purpose is to provide a better understanding of how an initial amount is influenced by subsequently added positive or negative values. A Waterfall chart is useful for different types of quantitative analysis related to inventory, cash flows, performance, etc.</p> <p>To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.</p><p>The chart can fetch data for its series from either local or remote data source. You can find more information about the Kendo UI chart in the <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/overview\" target=\"_blank\">product documentation</a>.</p>"
        }
      },
      {
        "text": "Horizontal Waterfall",
        "url": "waterfall-charts/horizontal",
        "title": {
          "kendo-ui": "Demo for horizontal Kendo UI Waterfall Chart"
        },
        "meta": {
          "kendo-ui": "This example illustrates how to set the Kendo UI Waterfall Chart orientation."
        },
        "description": {
          "kendo-ui": "<p>A Horizontal Waterfall chart type shows the cumulative effect of positive or negative values on the starting point. You can use it to provide a better understanding of how an initial amount is influenced by subsequently added positive or negative values. A Horizontal Waterfall chart is useful for different types of quantitative analysis related to inventory, cash flows, performance, etc. This chart type looks like a Range Bar chart where the low or high value of a subsequent item is connected to the preceding one with a thin line.</p>"
        }
      },
      {
        "text": "Binding to local data",
        "url": "waterfall-charts/local-data-binding",
        "title": {
          "kendo-ui": "Local data-binding example | Kendo UI Waterfall Charts"
        },
        "meta": {
          "kendo-ui": "This demo shows how the local data-binding is supported in Kendo UI Waterfall Charts. Use the demo source code to try the feature of the widget."
        },
        "description": {
          "kendo-ui": "<p>The Kendo UI chart can be instructed to display data from local data storage via its data source property configuration. This is possible because of its built-in data-binding capabilities. In the example above the data for the chart is defined via a JSON array and assigned to the chart via the dataSource data attribute. Thus the chart fetches the data and displays its series and categoryAxis values by setting their field properties to match the relevant data items attribute names in the source.</p> <br/> <p> To instantiate a Kendo UI chart, you need to specify an empty div with an id on the page, select this div with a jQuery selector and invoke the kendoChart() function. As a result, the chart is registered as a standard jQuery plugin.  </p> <br/> <p>Additional information about how to utilize the data-binding capabilities of the Kendo UI chart widget can be found in <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\" target=\"_blank\">this section</a> of the product documentation.</p>"
        }
      },
      {
        "text": "Binding to remote data",
        "url": "waterfall-charts/remote-data-binding",
        "title": {
          "kendo-ui": "Binding to remote data demo | Kendo UI HTML5 jQuery Waterfall Charts"
        },
        "meta": {
          "kendo-ui": "This demo shows how Kendo UI Waterfall Chart widget can be bound to remote data to produce high-performance report in your business app."
        },
        "description": {
          "kendo-ui": "<p>The data in the Kendo UI chart can be streamed from a local or remote storage, thus being flexible enough to visualize information from any data storage.</p> <p>For remote data binding you need to specify a remote endpoint or web service (REST) returning data in JSON/JSONP format and utilize the Kendo UI DataSource in-between the chart and the underlying data. To make the connection to the remote endpoint and process the data properly, the data source needs information about the web service URL(s), the request type, the response data type, and the structure (schema) of the response, in case it is more complex than a plain array of objects.</p> <p>In this example we demonstrate how Kendo UI chart can be bound to remote data by configuring the DataSource transport, which defines how the DataSource interacts with remote data.</p> <p>Discover more information about the data-binding capabilities of the chart widget in this <a href=\"http://docs.telerik.com/kendo-ui/dataviz/chart/data-binding\">help article</a>.</p>"
        },
        "requiresServer": "true"
      }
    ],
    "spriteCssClass": "chartWaterfallIcon",
    "category": "Charts"
  },
  {
    "text": "Switch",
    "name": "switch",
    "component": "switch",
    "api": { "all": "mobile/switch" },
    "documentation": {
      "kendo-ui": "getting-started/mobile/switch"
    },
    "forum": {
      "kendo-ui": "kendo-ui/switch"
    },
    "codelibrary": {
      "kendo-ui": "kendo-ui/switch"
    },
    "spriteCssClass": "mobileSwitchIcon",
    "category": "Editors",
    "packages": [
      "!aspnet-mvc",
      "!jsp",
      "!php",
      "!aspnet-core"
    ],
    "items": [
      {
        "text": "Basic Usage",
        "url": "switch/index",
        "title": {
          "kendo-ui": "Mobile Switch widget demo | Kendo UI Demos"
        },
        "meta": {
          "kendo-ui": "This example demonstrates the Switch widget"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ]
  },
  {
    "text": "Touch Events",
    "name": "touchevents",
    "component": "touch",
    "api": { "all": "mobile/touch" },
    "category": "Framework",
    "documentation": {
      "kendo-ui": "getting-started/mobile/touch"
    },
    "spriteCssClass": "mobileAppIcon",
    "packages": [
      "!aspnet-mvc",
      "!jsp",
      "!php",
      "!aspnet-core"
    ],
    "items": [
      {
        "text": "Touch Events",
        "url": "touchevents/index",
        "title": {
          "kendo-ui": "Kendo UI Touch Events Demo"
        },
        "meta": {
          "kendo-ui": ""
        }
      },
      {
        "text": "AngularJS",
        "url": "touchevents/angular",
        "title": {
          "kendo-ui": "AngularJS support in Kendo UI Touch Events"
        },
        "meta": {
          "kendo-ui": "AngularJS directive support for Kendo UI Touch Events"
        },
        "packages": [
          "!aspnet-mvc",
          "!jsp",
          "!php",
          "!aspnet-core"
        ]
      }
    ]
  },
  {
    "text": "Single Page Applications",
    "name": "spa",
    "packages": [
      "offline"
    ],
    "items": [
      {
        "text": "Aeroviewr",
        "url": "spa/Aeroviewr",
        "title": {
          "kendo-ui": "Aeroviewr"
        },
        "meta": {
          "kendo-ui": "Aeroviewr"
        },
        "packages": [
          "!aspnet-core"
        ]
      },
      {
        "text": "Sushi",
        "url": "spa/Sushi",
        "title": {
          "kendo-ui": "Sushi"
        },
        "meta": {
          "kendo-ui": "Sushi"
        },
        "packages": [
          "!aspnet-core"
        ]
      }
    ]
  },
  {
    "text": "Kendo UI Mobile",
    "name": "mobile",
    "packages": [
      "offline"
    ],
    "items": [
      {
        "text": "Hybrid Framework Demos",
        "url": "mobile",
        "title": {
          "kendo-ui": "Hybrid Framework Demos"
        },
        "meta": {
          "kendo-ui": "Hybrid Framework Demos"
        },
        "packages": [
          "!aspnet-core"
        ]
      }
    ]
  }
]
